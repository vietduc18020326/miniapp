{"version":3,"file":"src_screens_DocumentTypesScreen_DoctypeFilter_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AnimatedBottomSpace.tsx","webpack:///./src/components/FilterComp/index.tsx","webpack:///./src/components/MenuItem/index.tsx","webpack:///./src/screens/DocumentTypesScreen/DoctypeDetailScreen.tsx","webpack:///./src/screens/DocumentTypesScreen/DoctypeFilter.tsx","webpack:///./src/screens/DocumentTypesScreen/DoctypeMoreMenu.tsx","webpack:///./src/screens/DocumentTypesScreen/MasterDoctypeItem.tsx","webpack:///./src/store/masterVersionDoctypes/functions.ts"],"sourcesContent":["import React, {memo} from 'react';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {useAnimatedStyle} from 'react-native-reanimated';\nimport {ViewProps} from 'react-native';\nimport {flatStyles} from '@true/core';\n\nexport const AnimatedBottomSpace = memo((props: ViewProps) => {\n  const {aBottom} = useAnimatedSafeAreaInsets();\n  const animatedStyle = useAnimatedStyle(() => ({\n    height: aBottom.value,\n  }));\n\n  return <Animated.View {...props} style={[props.style, animatedStyle]} />;\n});\n","import React, {\n  cloneElement,\n  memo,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  AnimatedKeyboardAvoidingViewRef,\n  BottomButton,\n  MyKeyboardAvoidingView,\n  UIInput,\n  UISelectorInput,\n} from '@true/ui';\nimport {\n  Fonts,\n  getUserGroup,\n  goBack,\n  IC_ARROW,\n  styled,\n  translate,\n  useTheme,\n  useUserGroupByQuery,\n} from '@true/core';\nimport {\n  getCollections,\n  useCollections,\n  useCollectionsByQuery,\n} from '@policy/store/collections';\nimport {getStorages, useStoragesByQuery} from '@policy/store/storages';\nimport {getDoctypes, useDoctypesByQuery} from '@policy/store/doctypes';\nimport {AnimatedBottomSpace} from '../AnimatedBottomSpace';\nimport {ScrollView, View} from 'react-native';\nimport Animated, {\n  interpolate,\n  runOnJS,\n  SharedValue,\n  useAnimatedReaction,\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\n\nconst filterOpts = [\n  {label: translate('policy.bookmarked'), value: 'bookmarked'},\n  {label: translate('policy.created'), value: 'created'},\n  {label: translate('policy.reviewed'), value: 'reviewed'},\n  {label: translate('policy.published'), value: 'published'},\n  {label: translate('policy.pending'), value: 'pending'},\n  {label: translate('policy.rejected'), value: 'rejected'},\n];\nconst sortOpts = [\n  {label: translate('policy.issued'), value: 'issued'},\n  {label: translate('policy.effective'), value: 'effective'},\n];\n\ntype _TInputFilter =\n  | 'collection'\n  | 'storage'\n  | 'receiver'\n  | 'doctype'\n  | 'filter'\n  | 'sort'\n  | 'created_by'\n  | 'folder'\n  | 'created_date'\n  | 'effective_date'\n  | 'expired_date'\n  | ((params: any) => JSX.Element);\n\nexport type IInputFilterType = _TInputFilter | _TInputFilter[];\n\ninterface Props {\n  items: IInputFilterType[];\n  params: any;\n  setParams: (params: any) => any;\n  defaultParams: any;\n}\n\nexport const FilterComp = memo((props: Props) => {\n  const {items, params, setParams, defaultParams} = props;\n\n  const ref = useRef<{[id: string]: UISelectorInput}>({});\n\n  const _params = useSharedValue(params);\n\n  const setAdvancedExport = useCallback(() => {\n    for (let item of items) {\n      /* if item is advanced*/\n      if (Array.isArray(item)) {\n        for (let _type of item) {\n          /* if type is JSX.Element, return keyName\n\n\n\n          * else return default type */\n          const keyName =\n            typeof _type !== 'string'\n              ? cloneElement(_type({})).props?.keyName\n              : _type.indexOf('date') !== -1\n              ? [_type + '_from', _type + '_to']\n              : _type;\n\n          /* if there keyName in params add advanced_export */\n          if (\n            Array.isArray(keyName)\n              ? _params.value[keyName[0]] || _params.value[keyName[1]]\n              : _params.value[keyName]\n          ) {\n            _params.value = {\n              ..._params.value,\n              advanced_export: 1,\n            };\n          }\n        }\n      }\n    }\n  }, []);\n\n  useAnimatedReaction(\n    () => _params.value,\n    (__params, __prevParams) => {\n      if (\n        !!__prevParams?.collection &&\n        __params.collection !== __prevParams.collection\n      ) {\n        _params.value = {\n          ..._params.value,\n          folder: undefined,\n        };\n      }\n\n      if (JSON.stringify(__params) !== JSON.stringify(__prevParams)) {\n        runOnJS(setAdvancedExport)();\n      }\n    },\n    [],\n  );\n\n  const _onSubmit = useCallback(() => {\n    setParams(_params.value);\n    goBack();\n  }, [_params, setParams]);\n\n  const onReset = useCallback(() => {\n    setParams(defaultParams);\n    goBack();\n  }, [setParams]);\n\n  const theme = useTheme();\n\n  const keyboardRef = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useRef<ScrollView>(null);\n\n  return (\n    <SMyKeyboardAvoidingView\n      disableOnAndroid={true}\n      scrollInputAdditionalOffset={110}\n      scrollRef={scrollRef}\n      ref={keyboardRef}>\n      <ScrollView ref={scrollRef}>\n        <ListItems itemsRef={ref} params={_params} items={items} />\n        <View style={{height: 16}} />\n      </ScrollView>\n      <View style={{height: 1, backgroundColor: theme.neutral5}} />\n      <BottomButton\n        containerStyle={{\n          marginHorizontal: 16,\n          marginVertical: 12,\n          borderRadius: 20,\n        }}\n        leftContainerStyle={{\n          borderWidth: 1,\n          borderColor: theme.primaryColor,\n          borderRadius: 8,\n        }}\n        rightContainerStyle={{\n          borderRadius: 8,\n        }}\n        leftBgColor={theme.white}\n        textColor={theme.primaryColor}\n        leftText={translate('policy.reset')}\n        rightText={translate('policy.apply')}\n        onRightPress={_onSubmit}\n        onLeftPress={onReset}\n      />\n      <AnimatedBottomSpace />\n    </SMyKeyboardAvoidingView>\n  );\n});\n\nconst ListItems = memo(\n  ({\n    items,\n    params,\n    itemsRef,\n  }: {\n    items: IInputFilterType[];\n    params: SharedValue<any>;\n    itemsRef: RefObject<{[id: string]: UISelectorInput | null}>;\n  }) => {\n    return (\n      <>\n        {items.map(item => (\n          <SItemContainer>\n            <ItemInput itemsRef={itemsRef} type={item} params={params} />\n          </SItemContainer>\n        ))}\n      </>\n    );\n  },\n);\n\ninterface ItemInputProps<T> {\n  type: T;\n  params: SharedValue<any>;\n  itemsRef: RefObject<{[id: string]: UISelectorInput | null}>;\n}\n\nconst ItemInput = memo((props: ItemInputProps<IInputFilterType>) => {\n  const {type, ...rest} = props;\n  if (!Array.isArray(type))\n    return <_ItemInput {...(props as ItemInputProps<_TInputFilter>)} />;\n\n  const visible = useSharedValue(0);\n  const contentHeight = useSharedValue(0);\n  const theme = useTheme();\n\n  const aViewStyle = useAnimatedStyle(() => {\n    return {\n      height: interpolate(visible.value, [0, 1], [0, contentHeight.value]),\n      opacity: visible.value,\n    };\n  }, []);\n\n  const aIconStyle = useAnimatedStyle(\n    () => ({\n      transform: [\n        {rotate: interpolate(visible.value, [0, 1], [270, 90]) + 'deg'},\n      ],\n    }),\n    [],\n  );\n\n  return (\n    <View>\n      <SView />\n      <SAdvancedSection\n        onPress={() => {\n          visible.value = withTiming(visible.value ? 0 : 1);\n        }}>\n        <SAdvancedTitle>{translate('policy.advanced_filter')}</SAdvancedTitle>\n        <SAdvancedDropIcon style={aIconStyle} source={IC_ARROW} />\n      </SAdvancedSection>\n      <Animated.View\n        style={[aViewStyle, {overflow: 'scroll', justifyContent: 'flex-end'}]}>\n        <View\n          onLayout={e => {\n            contentHeight.value = e.nativeEvent.layout.height;\n          }}>\n          {type.map(item => (\n            <_ItemInput type={item} {...rest} />\n          ))}\n        </View>\n      </Animated.View>\n    </View>\n  );\n});\n\nconst SMyKeyboardAvoidingView = styled(MyKeyboardAvoidingView)`\n  background-color: ${p => p.theme.white};\n  margin-top: 8px;\n`;\n\nconst SView = styled.View`\n  height: 8px;\n  background-color: ${p => p.theme.neutral8};\n  width: 140%;\n  align-self: center;\n`;\n\nconst SAdvancedSection = styled.TouchableOpacity`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 0;\n`;\n\nconst SAdvancedTitle = styled.Text`\n  font-size: 16px;\n  line-height: 24px;\n  color: ${p => p.theme.neutral1};\n  font-family: ${Fonts.Medium};\n`;\n\nconst SAdvancedDropIcon = styled(Animated.Image)`\n  height: 17px;\n  width: 17px;\n`;\n\nconst _ItemInput = memo(\n  ({type, params, itemsRef}: ItemInputProps<_TInputFilter>) => {\n    if (typeof type !== 'string') {\n      return type(params);\n    }\n\n    const title = useMemo(() => {\n      if (type == 'receiver') return ['recipient'];\n      if (type == 'doctype') return ['document_type'];\n      if (type.indexOf('date') !== -1) return ['from_date', 'to_date'];\n      return [type];\n    }, [type]);\n\n    /** --------------------------------------------------\n     * Date input\n     */\n    if (type.indexOf('date') !== -1) {\n      return (\n        <>\n          <SDateTitle>{translate('policy.' + type)}</SDateTitle>\n          <SRow>\n            <UIInput.DateTime\n              style={{flex: 1}}\n              mode={'date'}\n              title={translate('policy.' + title[0])}\n              params={params}\n              keyName={type + '_from'}\n            />\n            <UIInput.DateTime\n              style={{flex: 1, marginLeft: 16}}\n              mode={'date'}\n              title={translate('policy.' + title[1])}\n              params={params}\n              keyName={type + '_to'}\n            />\n          </SRow>\n        </>\n      );\n    }\n\n    /** ---------------------------------------------\n     *  User Input\n     */\n    if (type == 'created_by') {\n      return (\n        <UIInput.UserPicker\n          title={translate('policy.' + title[0])}\n          params={params}\n          keyName={type}\n          type={'user'}\n        />\n      );\n    }\n\n    /** --------------------------------------------------\n     * Selector Input\n     */\n    const storageOpts = useStoragesByQuery('all').map(id => ({\n      label: getStorages(id)?.name || translate('policy.undefined'),\n      value: id,\n    }));\n\n    const collectionOpts = useCollectionsByQuery('all').map(id => ({\n      label: getCollections(id)?.name || translate('policy.undefined'),\n      value: id,\n    }));\n\n    const receiverOpts = useUserGroupByQuery('teams').map(id => ({\n      label: getUserGroup(id)?.name || translate('policy.undefined'),\n      value: id,\n    }));\n\n    const doctypeOpts = useDoctypesByQuery('all').map(id => ({\n      label: getDoctypes(id)?.name || translate('policy.undefined'),\n      value: id,\n    }));\n\n    /* set folder options when collection change*/\n    const [collection, setCollection] = useState('');\n\n    if (type == 'folder') {\n      useAnimatedReaction(\n        () => params.value?.collection,\n        (_collection, _prevCollection) => {\n          if (_collection !== _prevCollection) {\n            runOnJS(setCollection)(_collection);\n          }\n        },\n        [],\n      );\n    }\n\n    const folderOpts =\n      useCollections(collection)?.folders?.map(item => ({\n        label: item?.name || translate('policy.undefined'),\n        value: item?.id,\n      })) || [];\n\n    const options = useMemo(() => {\n      if (type == 'collection') return collectionOpts;\n      if (type == 'storage') return storageOpts;\n      if (type == 'receiver') return receiverOpts;\n      if (type == 'doctype') return doctypeOpts;\n      if (type == 'folder') return folderOpts;\n      if (type == 'sort') return sortOpts;\n      if (type == 'filter') return filterOpts;\n      return [];\n    }, [type, collection]) as any;\n\n    const allOption = useMemo(() => {\n      const value = undefined;\n\n      if (type == 'filter')\n        return {label: translate('policy.no_filter'), value};\n      if (type == 'sort')\n        return {label: translate('policy.created_time'), value};\n      return {label: translate('policy.all'), value};\n    }, [type]);\n\n    return (\n      <UIInput.Selector\n        ref={view => {\n          if (itemsRef.current) itemsRef.current[type] = view;\n        }}\n        title={translate('policy.' + title[0])}\n        params={params}\n        keyName={type}\n        // value={\"\"}\n        options={[allOption, ...options]}\n        hideClearButton={true}\n      />\n    );\n  },\n);\n\nconst SItemContainer = styled.View`\n  margin: 16px 16px 0 16px;\n`;\n\nconst SRow = styled.View`\n  flex-direction: row;\n`;\nconst SDateTitle = styled.Text`\n  font-size: 14px;\n  line-height: 20px;\n  font-family: ${Fonts.Regular};\n  margin-bottom: 4px;\n  margin-top: 12px;\n  color: ${p => p.theme.neutral1};\n`;\n","import React, {memo} from 'react';\nimport {styled} from '@true/core';\nimport { TextStyle, TouchableOpacityProps } from \"react-native\";\n\nexport const MenuItem = memo(\n  ({\n    source,\n    title,\n    textColor,\n    ...rest\n  }: {source?: any; title: string, textColor?: string} & TouchableOpacityProps) => {\n    return (\n      <SMenuContainer {...rest}>\n        <SMenuWrapper>\n          {source ? <SMenuIcon source={source} /> : null}\n          <SMenuTitle textColor={textColor}>{title}</SMenuTitle>\n        </SMenuWrapper>\n        <SMenuDivider />\n      </SMenuContainer>\n    );\n  },\n);\n\nconst SMenuContainer = styled.TouchableOpacity``;\n\nconst SMenuWrapper = styled.View`\n  flex-direction: row;\n  align-items: center;\n  padding: 16px;\n`;\nconst SMenuIcon = styled.Image`\n  margin-right: 8px;\n`;\n\nconst SMenuTitle = styled.Text<{textColor?: string}>`\n  color: ${p => p.textColor || p.theme.neutral1};\n`;\nconst SMenuDivider = styled.View`\n  height: 1px;\n  background-color: ${p => p.theme.neutral5};\n  margin: 0 16px;\n`;\n","import {DynamicHeader, ScreenWrapper, ScrollableTabView} from '@true/ui';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Fonts, stripSpecialCharacters, styled, translate, useNavigationParams} from '@true/core';\nimport {useDoctypes} from '@policy/store/doctypes';\nimport {PoliciesItem} from '@policy/screens/HomeScreen/PoliciesItem';\nimport {requestPolicyByDoctype} from '@policy/store/policies/functions';\nimport {requestMasterVersionDoctype} from '@policy/store/masterVersionDoctypes/functions';\nimport {getPoliciesByQuery, usePoliciesByQuery} from '@policy/store/policies';\nimport {SharedValue, useDerivedValue, useSharedValue,} from 'react-native-reanimated';\nimport {MasterDoctypeItem} from '@policy/screens/DocumentTypesScreen/MasterDoctypeItem';\nimport {getMasterVersionDoctypesByQuery, useMasterVersionDoctypesByQuery,} from '@policy/store/masterVersionDoctypes';\nimport {navigateToDoctypeFilter} from '@policy/utils';\nimport {FilterIcon} from '@policy/components/FilterIcon';\nimport {SelectedItemProvider, useSelectedItem,} from '@policy/context/SelectedItemContext';\nimport {SelectedHeader} from '@policy/screens/HomeScreen/SelectedHeader';\nimport {IDocTypes} from '@policy/store/doctypes/types';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\n\nexport interface DoctypeDetailScreenProps {\n  id: string | number;\n}\n\nexport interface IParams {\n  collection?: number | string;\n  storage?: number | string;\n}\n\nexport const DEFAULT_PARAMS = {\n  collection: undefined,\n  storage: undefined,\n};\n\nexport const DoctypeDetailScreen = memo(() => {\n  const {id} = useNavigationParams<DoctypeDetailScreenProps>();\n\n  const doctype = useDoctypes(id);\n\n  const [params, setParams] = useState<IParams>(DEFAULT_PARAMS);\n\n  const renderItem = useCallback(\n    (id: number, index?: number, isLast?: boolean) => {\n      return <PoliciesItem id={id} isLast={isLast} index={index} />;\n    },\n    [],\n  );\n  const renderItem2 = useCallback(\n    (id: number, index?: number, isLast?: boolean) => {\n      return <MasterDoctypeItem id={id} isLast={isLast} index={index} />;\n    },\n    [],\n  );\n\n  const animatedCollapseIndex = useSharedValue(0);\n\n  const animatedHeight = useSharedValue(0);\n  const animatedTop = useSharedValue(0);\n\n  return (\n    <SelectedItemProvider>\n      <ScreenWrapper isGrey={true}>\n        <DynamicHeader\n          hideSeparator={true}\n          title={stripSpecialCharacters(doctype?.name || '')}\n          rightComponent={\n            <SHeaderWrapper>\n              <FilterIcon\n                params={params}\n                onPress={() => {\n                  navigateToDoctypeFilter({\n                    params,\n                    setParams,\n                  });\n                }}\n              />\n            </SHeaderWrapper>\n          }\n          animatedCollapseIndex={animatedCollapseIndex}\n        />\n        <SViewContent>\n          <SelectedHeader\n            title={stripSpecialCharacters(doctype?.name || '')}\n            animatedHeight={animatedHeight}\n            animatedTop={animatedTop}\n          />\n          <_Comp\n            animatedCollapseIndex={animatedCollapseIndex}\n            params={params}\n            id={id}\n            renderItem={renderItem}\n            renderItem2={renderItem2}\n            animatedHeight={animatedHeight}\n            doctype={doctype}\n          />\n        </SViewContent>\n      </ScreenWrapper>\n    </SelectedItemProvider>\n  );\n});\n\nconst _Comp = memo(\n  ({\n    animatedCollapseIndex,\n    params,\n    id,\n    renderItem,\n    renderItem2,\n    doctype,\n    animatedHeight,\n  }: {\n    animatedCollapseIndex: SharedValue<number>;\n    params: IParams;\n    id: string | number;\n    renderItem: any;\n    renderItem2: any;\n    doctype?: IDocTypes;\n    animatedHeight: SharedValue<number>;\n  }) => {\n    const {selectedState, selectedIds} = useSelectedItem();\n\n    const scrollEnabled = useDerivedValue(() => selectedIds.value.length == 0);\n\n    return (\n      <ScrollableTabView.Provider\n        scrollEnabled={scrollEnabled}\n        disabledLoadData={selectedState}\n        onLayout={layout => {\n          'worklet';\n          animatedHeight.value = layout.headerHeight;\n        }}\n        onCollapse={index => {\n          'worklet';\n          animatedCollapseIndex.value = index;\n        }}\n        tabs={[\n          {\n            title: translate('policy.all_documents'),\n            content: p => (\n              <ScrollableTabView.List\n                index={p.index}\n                params={{id, ...params}}\n                requestFn={requestPolicyByDoctype}\n                getItemByQuery={getPoliciesByQuery}\n                useItemByQuery={usePoliciesByQuery}\n                query={'doctype'}\n                renderItem={renderItem}\n              />\n            ),\n          },\n          {\n            title: translate('policy.master_versions'),\n            content: p => (\n              <ScrollableTabView.List\n                index={p.index}\n                params={{id}}\n                requestFn={requestMasterVersionDoctype}\n                getItemByQuery={getMasterVersionDoctypesByQuery}\n                useItemByQuery={useMasterVersionDoctypesByQuery}\n                renderItem={renderItem2}\n              />\n            ),\n          },\n        ]}>\n        <ScrollableTabView.CollapsableTabBar>\n          <STitleWrapper>\n            <STitle numberOfLines={2}>\n              {stripSpecialCharacters(doctype?.name || '')}\n            </STitle>\n          </STitleWrapper>\n        </ScrollableTabView.CollapsableTabBar>\n        <ScrollableTabView.Content />\n      </ScrollableTabView.Provider>\n    );\n  },\n);\n\nconst SHeaderWrapper = styled.View`\n  margin-right: 16px;\n`;\n\nconst SViewContent = styled.View`\n  background-color: ${p => p.theme.neutral9};\n  flex: 1;\n`;\n\nconst STitleWrapper = styled.View`\n  padding-left: 16px;\n  background-color: ${p => p.theme.backgroundColor};\n`;\nconst STitle = styled.Text`\n  font-size: 20px;\n  line-height: 28px;\n  font-family: ${Fonts.SemiBold};\n  color: ${p => p.theme.neutral1};\n`;\n","import { styled, translate, useNavigationParams } from \"@true/core\";\nimport { DynamicHeader, ScreenWrapper } from \"@true/ui\";\nimport React, { memo } from \"react\";\nimport { DEFAULT_PARAMS, IParams } from \"@policy/screens/DocumentTypesScreen/DoctypeDetailScreen\";\nimport { FilterComp } from \"@policy/components/FilterComp\";\n\nexport interface DoctypeFilterProps {\n  params: IParams;\n  setParams: any;\n}\n\nexport const DoctypeFilter = memo(() => {\n  const {params, setParams} = useNavigationParams<DoctypeFilterProps>();\n\n  return (\n    <ScreenWrapper>\n      <DynamicHeader title={translate('policy.filter')} />\n      <FilterComp\n        items={['collection', 'storage']}\n        params={params}\n        setParams={setParams}\n        defaultParams={DEFAULT_PARAMS}\n      />\n    </ScreenWrapper>\n  );\n});\n","import React, {RefObject, useCallback} from 'react';\nimport {MyBottomSheet, useAnimatedSnapPoints} from '@true/ui';\nimport {BottomSheetModal, BottomSheetView} from '@gorhom/bottom-sheet';\nimport {\n  Colors,\n  interactManager,\n  memoForwardRef,\n  translate,\n  useAsyncFn,\n  useAutoToastError,\n  useBoolean,\n  useTheme,\n} from '@true/core';\nimport {MenuItem} from '@policy/components/MenuItem';\nimport {AnimatedBottomSpace} from '@policy/components/AnimatedBottomSpace';\nimport {navigateToEditMasterVersion} from '@policy/utils';\nimport {requestRemoveMasterVersion} from '@policy/store/masterVersionDoctypes/functions';\nimport {MyConfirmationDialog} from '@policy/components/Dialog/MyConfirmationDialog';\n\nexport const DoctypeMoreMenu = memoForwardRef(\n  (props: {id: number}, ref: RefObject<BottomSheetModal>) => {\n    const {onViewLayout, animatedSnapPoints} = useAnimatedSnapPoints();\n    const [visible, show, hide] = useBoolean();\n\n    const theme = useTheme();\n\n    const [{loading: removeLoading, error: removeError}, onRemove] = useAsyncFn(\n      async () => await requestRemoveMasterVersion({id: props.id}),\n      [props.id],\n    );\n\n    const onTrashPress = useCallback(() => {\n      show();\n    }, []);\n\n    const onEditPress = useCallback(() => {\n      interactManager(() => navigateToEditMasterVersion({id: props.id}), 300);\n      ref.current?.dismiss();\n    }, [props.id]);\n\n    useAutoToastError(removeError);\n\n    return (\n      <MyBottomSheet\n        name={'doctypes'}\n        ref={ref}\n        snapPoints={animatedSnapPoints}>\n        <BottomSheetView onLayout={onViewLayout('ok')}>\n          <MenuItem title={translate('policy.edit')} onPress={onEditPress} />\n          <MenuItem\n            textColor={Colors.red1}\n            title={translate('policy.remove')}\n            onPress={onTrashPress}\n          />\n          <AnimatedBottomSpace />\n        </BottomSheetView>\n        {/*<ConfirmationDialog*/}\n        {/*  isVisible={visible}*/}\n        {/*  onCloseRequest={hide}*/}\n        {/*  title={translate('policy.remove_master_version')}*/}\n        {/*  content={translate(*/}\n        {/*    'policy.are_you_sure_you_want_to_remove_this_master_version',*/}\n        {/*  )}*/}\n        {/*  buttons={[*/}\n        {/*    {text: translate('policy.cancel')},*/}\n        {/*    {*/}\n        {/*      text: translate('policy.confirm'),*/}\n        {/*      onPress: onRemove,*/}\n        {/*      loading: removeLoading,*/}\n        {/*      backgroundColor: theme.primaryColor,*/}\n        {/*      color: Colors.white,*/}\n        {/*    },*/}\n        {/*  ]}*/}\n        {/*/>*/}\n        <MyConfirmationDialog\n          isVisible={visible}\n          onCloseRequest={hide}\n          title={translate('policy.remove_master_version')}\n          content={translate(\n            'policy.are_you_sure_you_want_to_remove_this_master_version',\n          )}\n          onPressRightButton={onRemove}\n          colorLeftButton={theme.neutral02}\n          bgColorRightButton={theme.red1}\n          titleRightButton={translate('policy.remove')}\n        />\n      </MyBottomSheet>\n    );\n  },\n);\n","import React, {memo, useCallback, useRef} from 'react';\nimport {\n  Fonts,\n  IC_MORE,\n  stripSpecialCharacters,\n  styled,\n  translate,\n  useTheme,\n  useUser,\n} from '@true/core';\nimport {useMasterVersionDoctypes} from '@policy/store/masterVersionDoctypes';\nimport moment from 'moment';\nimport {useCollections} from '@policy/store/collections';\nimport {useDoctypes} from '@policy/store/doctypes';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {DoctypeMoreMenu} from '@policy/screens/DocumentTypesScreen/DoctypeMoreMenu';\nimport {navigateToEditMasterVersion} from '@policy/utils';\nimport {UIButton} from '@true/ui';\n\ninterface Props {\n  index?: number;\n  id: number;\n  isLast?: boolean;\n}\n\nexport const MasterDoctypeItem = memo((props: Props) => {\n  const {id} = props;\n\n  const masterVersion = useMasterVersionDoctypes(id);\n  const user = useUser(masterVersion?.user_id);\n  const collection = useCollections(masterVersion?.collection_id);\n  const doctype = useDoctypes(masterVersion?.doctype_id);\n  const theme = useTheme();\n\n  const ref = useRef<BottomSheetModal | null>(null);\n\n  const onEditPress = useCallback(() => {\n    navigateToEditMasterVersion({id});\n  }, [id]);\n\n  return (\n    <SContainer onPress={onEditPress}>\n      <STitleWrapper>\n        <STitleView>\n          <STitle numberOfLines={2}>\n            {stripSpecialCharacters(masterVersion?.name)}\n          </STitle>\n        </STitleView>\n\n        <SButton\n          imageSize={24}\n          source={IC_MORE}\n          imageStyle={{tintColor: theme.neutral2}}\n          onPress={() => ref.current?.present()}\n        />\n      </STitleWrapper>\n      <SItemWrapper>\n        <SubItem label={translate('policy.created_by')} value={user?.name} />\n        <SubItem\n          label={translate('policy.date')}\n          value={moment(masterVersion?.since, 'X').format('DD/MM/YYYY')}\n        />\n\n        <SubItem label={translate('policy.type')} value={doctype?.name} />\n        <SubItem\n          label={translate('policy.collection')}\n          value={collection?.name}\n        />\n      </SItemWrapper>\n\n      <DoctypeMoreMenu ref={ref} id={id} />\n    </SContainer>\n  );\n});\n\nconst SContainer = styled.TouchableOpacity`\n  padding: 8px 16px;\n  background-color: ${p => p.theme.backgroundColor};\n  margin-top: 8px;\n`;\nconst STitleWrapper = styled.View`\n  flex-direction: row;\n`;\n\nconst SItemWrapper = styled.View``;\n\nconst STitleView = styled.View`\n  flex: 1;\n`;\n\nconst STitle = styled.Text`\n  color: ${p => p.theme.neutral1};\n  font-family: ${Fonts.Medium};\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst SButton = styled(UIButton)``;\n\nconst SubItem = memo(\n  ({\n    label = '',\n    value = '',\n  }: {\n    label: string | undefined;\n    value: string | undefined;\n  }) => {\n    return (\n      <SSubItemContainer>\n        <SSubTitle>{label}:</SSubTitle>\n        <SSubView>\n          <SSubValue numberOfLines={2}>{value}</SSubValue>\n        </SSubView>\n      </SSubItemContainer>\n    );\n  },\n);\n\nconst SSubItemContainer = styled.View`\n  flex-direction: row;\n  padding-top: 8px;\n`;\n\nconst SSubView = styled.View`\n  flex: 1;\n`;\n\nconst SSubTitle = styled.Text`\n  color: ${p => p.theme.neutral2};\n  font-size: 12px;\n  line-height: 16px;\n  margin-right: 4px;\n  width: 90px;\n`;\n\nconst SSubValue = styled.Text`\n  color: ${p => p.theme.neutral1};\n  font-family: ${Fonts.Medium};\n  font-size: 12px;\n  line-height: 16px;\n`;\n","import { Core, Fetch } from \"@true/core\";\nimport { batch } from \"react-redux\";\nimport { IRequestPolicyDoctypeParams } from \"@policy/store/policies/functions\";\nimport { setMasterVersionDoctypesQuery, syncMasterVersionDoctypes } from \"@policy/store/masterVersionDoctypes/index\";\nimport { IMasterVersionDoctypes } from \"@policy/store/masterVersionDoctypes/types\";\n\nexport interface IRequestMasterVersionDoctypeParams {\n  id: string | number;\n  page?: number;\n}\n\nexport const requestMasterVersionDoctype = async (\n  params: IRequestPolicyDoctypeParams,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    mvs: IMasterVersionDoctypes[];\n  }>(`@${Core.systemPath}/policy/ajax/api/mobile/doc/doctype.mvs`, params);\n\n  batch(() => {\n    if (data.mvs) {\n      syncMasterVersionDoctypes(data.mvs);\n\n      const newDocs = data.mvs.map(item => item.id.toString())\n\n      setMasterVersionDoctypesQuery(prev => ({\n        ...prev,\n        all: params.page && params.page > 1\n          ? [ ...prev.all, ...newDocs]\n        : newDocs,\n      }));\n    }\n  });\n\n  return data.mvs;\n};\n\ninterface IRequestEditMasterVersion {\n  name: string;\n  collection_id: number | string;\n  doctype_id: number | string;\n  id: number | string;\n}\n\nexport const requestEditMasterVersion = async (\n  params: IRequestEditMasterVersion,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/policy/ajax/api/doc/mv/edit`, params);\n\n\n  batch(() => {\n    if (data.message == \"ok\") {\n      syncMasterVersionDoctypes(prev => [{\n        ...prev?.[params.id],\n        doctype_id: params.doctype_id as number,\n        collection_id: params.collection_id as number,\n        name: params.name\n      }]);\n    }\n  });\n\n  return data.message;\n};\n\ninterface IRequestRemoveMasterVersion {\n  id: number | string;\n}\n\nexport const requestRemoveMasterVersion = async (\n  params: IRequestRemoveMasterVersion,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/policy/ajax/api/doc/mv/remove`, params);\n\n\n  batch(() => {\n    if (data.message == \"ok\") {\n      setMasterVersionDoctypesQuery(prev => ({\n        ...prev,\n        all: prev.all.filter(id => id != params.id)\n      }))\n    }\n  });\n\n  return data.message;\n};\n"],"names":["_react","_interopRequireWildcard","require","_reactNativeSafeAreaContext","_reactNativeReanimated","_jsxRuntime","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_worklet_7203089036154_init_data","code","exports","memo","props","anonymous","aBottom","useAnimatedSafeAreaInsets","animatedStyle","useAnimatedStyle","height","value","__closure","__initData","__workletHash","jsx","View","assign","style","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_ui","_core","_collections","_storages","_doctypes","_AnimatedBottomSpace","_reactNative","_excluded","filterOpts","label","translate","sortOpts","_worklet_9029730044761_init_data","_worklet_13659997026295_init_data","ListItems","items","params","setParams","defaultParams","ref","useRef","_params","useSharedValue","setAdvancedExport","useCallback","item","Array","isArray","_type","_cloneElement$props","keyName","cloneElement","indexOf","advanced_export","useAnimatedReaction","__params","__prevParams","collection","folder","undefined","JSON","stringify","runOnJS","_onSubmit","goBack","onReset","theme","useTheme","keyboardRef","scrollRef","jsxs","SMyKeyboardAvoidingView","disableOnAndroid","scrollInputAdditionalOffset","children","ScrollView","itemsRef","backgroundColor","neutral5","BottomButton","containerStyle","marginHorizontal","marginVertical","borderRadius","leftContainerStyle","borderWidth","borderColor","primaryColor","rightContainerStyle","leftBgColor","white","textColor","leftText","rightText","onRightPress","onLeftPress","AnimatedBottomSpace","_ref","Fragment","map","SItemContainer","ItemInput","type","_worklet_8409949742507_init_data","_worklet_2526022283159_init_data","rest","_objectWithoutProperties2","_ItemInput","visible","contentHeight","aViewStyle","interpolate","opacity","aIconStyle","transform","rotate","SView","SAdvancedSection","onPress","withTiming","SAdvancedTitle","SAdvancedDropIcon","source","IC_ARROW","overflow","justifyContent","onLayout","e","nativeEvent","layout","styled","MyKeyboardAvoidingView","_taggedTemplateLiteralLoose2","p","neutral8","TouchableOpacity","Text","neutral1","Fonts","Medium","Animated","Image","_worklet_8111418951837_init_data","_worklet_4403808879510_init_data","_ref2","_useCollections","_useCollections$folde","title","useMemo","SDateTitle","SRow","UIInput","DateTime","flex","mode","marginLeft","UserPicker","storageOpts","useStoragesByQuery","id","_getStorages","getStorages","name","collectionOpts","useCollectionsByQuery","_getCollections","getCollections","receiverOpts","useUserGroupByQuery","_getUserGroup","getUserGroup","doctypeOpts","useDoctypesByQuery","_getDoctypes","getDoctypes","_useState","useState","_useState2","_slicedToArray2","setCollection","_params$value","_collection","_prevCollection","folderOpts","useCollections","folders","options","allOption","Selector","view","current","concat","_toConsumableArray2","hideClearButton","Regular","SMenuContainer","SMenuWrapper","SMenuIcon","SMenuTitle","SMenuDivider","_PoliciesItem","_functions","_functions2","_policies","_MasterDoctypeItem","_masterVersionDoctypes","_utils","_FilterIcon","_SelectedItemContext","_SelectedHeader","DEFAULT_PARAMS","storage","_worklet_5912787252731_init_data","useNavigationParams","doctype","useDoctypes","renderItem","index","isLast","PoliciesItem","renderItem2","MasterDoctypeItem","animatedCollapseIndex","animatedHeight","animatedTop","SelectedItemProvider","ScreenWrapper","isGrey","DynamicHeader","hideSeparator","stripSpecialCharacters","rightComponent","SHeaderWrapper","FilterIcon","navigateToDoctypeFilter","SViewContent","SelectedHeader","_Comp","_worklet_2514887566720_init_data","_worklet_13646161136462_init_data","_useSelectedItem","useSelectedItem","selectedState","selectedIds","scrollEnabled","useDerivedValue","length","ScrollableTabView","Provider","disabledLoadData","headerHeight","onCollapse","tabs","content","List","requestFn","requestPolicyByDoctype","getItemByQuery","getPoliciesByQuery","useItemByQuery","usePoliciesByQuery","query","requestMasterVersionDoctype","getMasterVersionDoctypesByQuery","useMasterVersionDoctypesByQuery","CollapsableTabBar","STitleWrapper","STitle","numberOfLines","Content","neutral9","SemiBold","_DoctypeDetailScreen","_FilterComp","_useNavigationParams","FilterComp","_bottomSheet","_MenuItem","_MyConfirmationDialog","memoForwardRef","_useAnimatedSnapPoint","useAnimatedSnapPoints","onViewLayout","animatedSnapPoints","_useBoolean","useBoolean","_useBoolean2","show","hide","_useAsyncFn","useAsyncFn","_asyncToGenerator2","requestRemoveMasterVersion","_useAsyncFn2","_useAsyncFn2$","removeError","loading","error","onRemove","onTrashPress","onEditPress","_ref$current","interactManager","navigateToEditMasterVersion","dismiss","useAutoToastError","MyBottomSheet","snapPoints","BottomSheetView","MenuItem","Colors","red1","MyConfirmationDialog","isVisible","onCloseRequest","onPressRightButton","colorLeftButton","neutral02","bgColorRightButton","titleRightButton","_templateObject9","_templateObject10","_moment","_interopRequireDefault","_DoctypeMoreMenu","masterVersion","useMasterVersionDoctypes","user","useUser","user_id","collection_id","doctype_id","SContainer","STitleView","SButton","imageSize","IC_MORE","imageStyle","tintColor","neutral2","present","SItemWrapper","SubItem","moment","since","format","DoctypeMoreMenu","UIButton","_ref$label","_ref$value","SSubItemContainer","SSubTitle","SSubView","SSubValue","_reactRedux","_index","data","Fetch","postWithToken","Core","systemPath","batch","mvs","syncMasterVersionDoctypes","newDocs","toString","setMasterVersionDoctypesQuery","prev","all","page","_x","apply","arguments","message","_x2","_ref3","filter","_x3"],"sourceRoot":""}