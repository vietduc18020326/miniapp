{"version":3,"file":"src_screens_DocumentTypesScreen_EditMasterVersion_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AnimatedBottomSpace.tsx","webpack:///./src/screens/DocumentTypesScreen/EditMasterVersion.tsx","webpack:///./src/store/masterVersionDoctypes/functions.ts"],"sourcesContent":["import React, {memo} from 'react';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {useAnimatedStyle} from 'react-native-reanimated';\nimport {ViewProps} from 'react-native';\nimport {flatStyles} from '@true/core';\n\nexport const AnimatedBottomSpace = memo((props: ViewProps) => {\n  const {aBottom} = useAnimatedSafeAreaInsets();\n  const animatedStyle = useAnimatedStyle(() => ({\n    height: aBottom.value,\n  }));\n\n  return <Animated.View {...props} style={[props.style, animatedStyle]} />;\n});\n","import React, {memo, useCallback} from 'react';\nimport {\n  BottomButton,\n  DynamicHeader,\n  FormScroll,\n  MyKeyboardAvoidingView,\n  ScreenWrapper,\n  UISelectorInput,\n  UITextInput,\n} from '@true/ui';\nimport {\n  goBack,\n  styled,\n  translate,\n  useAsyncFn,\n  useAutoToastError,\n  useNavigationParams,\n  useTheme,\n} from '@true/core';\nimport {useMasterVersionDoctypes} from '@policy/store/masterVersionDoctypes';\nimport {getCollections, useCollectionsByQuery} from '@policy/store/collections';\nimport {getDoctypes, useDoctypesByQuery} from '@policy/store/doctypes';\nimport {AnimatedBottomSpace} from '@policy/components/AnimatedBottomSpace';\nimport {runOnUI, useSharedValue} from 'react-native-reanimated';\nimport {requestEditMasterVersion} from '@policy/store/masterVersionDoctypes/functions';\n\nexport interface EditMasterVersionProps {\n  id: number;\n}\n\nexport const EditMasterVersion = memo(() => {\n  const {id} = useNavigationParams<EditMasterVersionProps>();\n\n  const masterVersion = useMasterVersionDoctypes(id);\n\n  const theme = useTheme();\n\n  const params = useSharedValue({\n    name: masterVersion?.name || '',\n    collection_id: masterVersion?.collection_id || '',\n    doctype_id: masterVersion?.doctype_id || '',\n  });\n\n  const collections = useCollectionsByQuery('all').map(_id => {\n    const _item = getCollections(_id);\n    return {\n      label: _item?.name,\n      value: _id,\n    };\n  }) as any;\n\n  const doctypes = useDoctypesByQuery('all').map(_id => {\n    const _item = getDoctypes(_id);\n    return {\n      label: _item?.name,\n      value: _id,\n    };\n  }) as any;\n\n  // const onChangeParam = useCallback((keyName: string, value: any) => {\n  //   setParams(prev => ({\n  //     ...prev,\n  //     [keyName]: value,\n  //   }));\n  // }, []);\n\n  const [{loading, error}, onSubmit] = useAsyncFn(async () => {\n    return await requestEditMasterVersion({id, ...params.value}).then(() =>\n      goBack(),\n    );\n  }, [params, id]);\n\n  console.log('params', params);\n\n  useAutoToastError(error);\n\n  return (\n    <ScreenWrapper>\n      <DynamicHeader title={translate('policy.edit_master_version_info')} />\n      <MyKeyboardAvoidingView>\n        <FormScroll>\n          <SWrapper>\n            <UITextInput\n              params={params}\n              title={translate('policy.master_version_name')}\n              required={true}\n              keyName={'name'}\n            />\n          </SWrapper>\n          <SWrapper>\n            <UISelectorInput\n              title={'Collection'}\n              required={true}\n              params={params}\n              keyName={'collection_id'}\n              options={collections}\n            />\n          </SWrapper>\n          <SWrapper>\n            <UISelectorInput\n              title={'Document type'}\n              required={true}\n              params={params}\n              keyName={'doctype_id'}\n              options={doctypes}\n            />\n          </SWrapper>\n        </FormScroll>\n        <SButtonWrapper>\n          <BottomButton\n            loading={loading}\n            onRightPress={onSubmit}\n            leftContainerStyle={{\n              borderRadius: 8,\n              borderColor: theme.primaryColor,\n              borderWidth: 1,\n            }}\n            rightContainerStyle={{borderRadius: 8}}\n            leftBgColor={theme.white}\n            textColor={theme.primaryColor}\n            leftText={translate('policy.reset')}\n          />\n          <AnimatedBottomSpace />\n        </SButtonWrapper>\n      </MyKeyboardAvoidingView>\n    </ScreenWrapper>\n  );\n});\n\nconst SWrapper = styled.View`\n  margin: 16px 16px 0;\n`;\n\nconst SButtonWrapper = styled.View`\n  margin: 16px 16px 0;\n`;\n","import { Core, Fetch } from \"@true/core\";\nimport { batch } from \"react-redux\";\nimport { IRequestPolicyDoctypeParams } from \"@policy/store/policies/functions\";\nimport { setMasterVersionDoctypesQuery, syncMasterVersionDoctypes } from \"@policy/store/masterVersionDoctypes/index\";\nimport { IMasterVersionDoctypes } from \"@policy/store/masterVersionDoctypes/types\";\n\nexport interface IRequestMasterVersionDoctypeParams {\n  id: string | number;\n  page?: number;\n}\n\nexport const requestMasterVersionDoctype = async (\n  params: IRequestPolicyDoctypeParams,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    mvs: IMasterVersionDoctypes[];\n  }>(`@${Core.systemPath}/policy/ajax/api/mobile/doc/doctype.mvs`, params);\n\n  batch(() => {\n    if (data.mvs) {\n      syncMasterVersionDoctypes(data.mvs);\n\n      const newDocs = data.mvs.map(item => item.id.toString())\n\n      setMasterVersionDoctypesQuery(prev => ({\n        ...prev,\n        all: params.page && params.page > 1\n          ? [ ...prev.all, ...newDocs]\n        : newDocs,\n      }));\n    }\n  });\n\n  return data.mvs;\n};\n\ninterface IRequestEditMasterVersion {\n  name: string;\n  collection_id: number | string;\n  doctype_id: number | string;\n  id: number | string;\n}\n\nexport const requestEditMasterVersion = async (\n  params: IRequestEditMasterVersion,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/policy/ajax/api/doc/mv/edit`, params);\n\n\n  batch(() => {\n    if (data.message == \"ok\") {\n      syncMasterVersionDoctypes(prev => [{\n        ...prev?.[params.id],\n        doctype_id: params.doctype_id as number,\n        collection_id: params.collection_id as number,\n        name: params.name\n      }]);\n    }\n  });\n\n  return data.message;\n};\n\ninterface IRequestRemoveMasterVersion {\n  id: number | string;\n}\n\nexport const requestRemoveMasterVersion = async (\n  params: IRequestRemoveMasterVersion,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/policy/ajax/api/doc/mv/remove`, params);\n\n\n  batch(() => {\n    if (data.message == \"ok\") {\n      setMasterVersionDoctypesQuery(prev => ({\n        ...prev,\n        all: prev.all.filter(id => id != params.id)\n      }))\n    }\n  });\n\n  return data.message;\n};\n"],"names":["_react","_interopRequireWildcard","require","_reactNativeSafeAreaContext","_reactNativeReanimated","_jsxRuntime","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_worklet_7203089036154_init_data","code","AnimatedBottomSpace","memo","props","anonymous","aBottom","useAnimatedSafeAreaInsets","animatedStyle","useAnimatedStyle","height","value","__closure","__initData","__workletHash","jsx","View","assign","style","exports","_templateObject","_templateObject2","_ui","_core","_masterVersionDoctypes","_collections","_doctypes","_AnimatedBottomSpace","_functions","EditMasterVersion","id","useNavigationParams","masterVersion","useMasterVersionDoctypes","theme","useTheme","params","useSharedValue","name","collection_id","doctype_id","collections","useCollectionsByQuery","map","_id","_item","getCollections","label","doctypes","useDoctypesByQuery","getDoctypes","_useAsyncFn","useAsyncFn","_asyncToGenerator2","requestEditMasterVersion","then","goBack","_useAsyncFn2","_slicedToArray2","_useAsyncFn2$","loading","error","onSubmit","console","log","useAutoToastError","jsxs","ScreenWrapper","children","DynamicHeader","title","translate","MyKeyboardAvoidingView","FormScroll","SWrapper","UITextInput","required","keyName","UISelectorInput","options","SButtonWrapper","BottomButton","onRightPress","leftContainerStyle","borderRadius","borderColor","primaryColor","borderWidth","rightContainerStyle","leftBgColor","white","textColor","leftText","styled","_taggedTemplateLiteralLoose2","_ref","_ref2","_ref3","_reactRedux","_index","_x","data","Fetch","postWithToken","Core","systemPath","batch","mvs","syncMasterVersionDoctypes","newDocs","item","toString","setMasterVersionDoctypesQuery","prev","all","page","concat","_toConsumableArray2","apply","arguments","_x2","message","_x3","filter"],"sourceRoot":""}