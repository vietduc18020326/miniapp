{"version":3,"file":"src_screens_DocumentTypesScreen_DoctypeFilter_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AnimatedBottomSpace.tsx","webpack:///./src/components/FilterComp/index.tsx","webpack:///./src/components/MenuItem/index.tsx","webpack:///./src/screens/DocumentTypesScreen/DoctypeDetailScreen.tsx","webpack:///./src/screens/DocumentTypesScreen/DoctypeFilter.tsx","webpack:///./src/screens/DocumentTypesScreen/DoctypeMoreMenu.tsx","webpack:///./src/screens/DocumentTypesScreen/MasterDoctypeItem.tsx","webpack:///./src/store/masterVersionDoctypes/functions.ts"],"sourcesContent":["import React, {memo} from 'react';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {useAnimatedStyle} from 'react-native-reanimated';\nimport {ViewProps} from 'react-native';\nimport {flatStyles} from '@true/core';\n\nexport const AnimatedBottomSpace = memo((props: ViewProps) => {\n  const {aBottom} = useAnimatedSafeAreaInsets();\n  const animatedStyle = useAnimatedStyle(() => ({\n    height: aBottom.value,\n  }));\n\n  return <Animated.View {...props} style={[props.style, animatedStyle]} />;\n});\n","import React, {\n  cloneElement,\n  memo,\n  RefObject,\n  useCallback,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  AnimatedKeyboardAvoidingViewRef,\n  BottomButton,\n  MyKeyboardAvoidingView,\n  UIInput,\n  UISelectorInput,\n} from '@true/ui';\nimport {\n  Fonts,\n  getUserGroup,\n  goBack,\n  IC_ARROW,\n  styled,\n  translate,\n  useTheme,\n  useUserGroupByQuery,\n} from '@true/core';\nimport {\n  getCollections,\n  useCollections,\n  useCollectionsByQuery,\n} from '@policy/store/collections';\nimport {getStorages, useStoragesByQuery} from '@policy/store/storages';\nimport {getDoctypes, useDoctypesByQuery} from '@policy/store/doctypes';\nimport {AnimatedBottomSpace} from '../AnimatedBottomSpace';\nimport {ScrollView, View} from 'react-native';\nimport Animated, {\n  interpolate,\n  runOnJS,\n  SharedValue,\n  useAnimatedReaction,\n  useAnimatedStyle,\n  useSharedValue,\n  withTiming,\n} from 'react-native-reanimated';\n\nconst filterOpts = [\n  {label: translate('policy.bookmarked'), value: 'bookmarked'},\n  {label: translate('policy.created'), value: 'created'},\n  {label: translate('policy.reviewed'), value: 'reviewed'},\n  {label: translate('policy.published'), value: 'published'},\n  {label: translate('policy.pending'), value: 'pending'},\n  {label: translate('policy.rejected'), value: 'rejected'},\n];\nconst sortOpts = [\n  {label: translate('policy.issued'), value: 'issued'},\n  {label: translate('policy.effective'), value: 'effective'},\n];\n\ntype _TInputFilter =\n  | 'collection'\n  | 'storage'\n  | 'receiver'\n  | 'doctype'\n  | 'filter'\n  | 'sort'\n  | 'created_by'\n  | 'folder'\n  | 'created_date'\n  | 'effective_date'\n  | 'expired_date'\n  | ((params: any) => JSX.Element);\n\nexport type IInputFilterType = _TInputFilter | _TInputFilter[];\n\ninterface Props {\n  items: IInputFilterType[];\n  params: any;\n  setParams: (params: any) => any;\n  defaultParams: any;\n}\n\nexport const FilterComp = memo((props: Props) => {\n  const {items, params, setParams, defaultParams} = props;\n\n  const ref = useRef<{[id: string]: UISelectorInput}>({});\n\n  const _params = useSharedValue(params);\n\n  const setAdvancedExport = useCallback(() => {\n    for (let item of items) {\n      /* if item is advanced*/\n      if (Array.isArray(item)) {\n        for (let _type of item) {\n          /* if type is JSX.Element, return keyName\n\n\n\n          * else return default type */\n          const keyName =\n            typeof _type !== 'string'\n              ? cloneElement(_type({})).props?.keyName\n              : _type.indexOf('date') !== -1\n              ? [_type + '_from', _type + '_to']\n              : _type;\n\n          /* if there keyName in params add advanced_export */\n          if (\n            Array.isArray(keyName)\n              ? _params.value[keyName[0]] || _params.value[keyName[1]]\n              : _params.value[keyName]\n          ) {\n            _params.value = {\n              ..._params.value,\n              advanced_export: 1,\n            };\n          }\n        }\n      }\n    }\n  }, []);\n\n  useAnimatedReaction(\n    () => _params.value,\n    (__params, __prevParams) => {\n      if (\n        !!__prevParams?.collection &&\n        __params.collection !== __prevParams.collection\n      ) {\n        _params.value = {\n          ..._params.value,\n          folder: undefined,\n        };\n      }\n\n      if (JSON.stringify(__params) !== JSON.stringify(__prevParams)) {\n        runOnJS(setAdvancedExport)();\n      }\n    },\n    [],\n  );\n\n  const _onSubmit = useCallback(() => {\n    setParams(_params.value);\n    goBack();\n  }, [_params, setParams]);\n\n  const onReset = useCallback(() => {\n    setParams(defaultParams);\n    goBack();\n  }, [setParams]);\n\n  const theme = useTheme();\n\n  const keyboardRef = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useRef<ScrollView>(null);\n\n  return (\n    <SMyKeyboardAvoidingView\n      disableOnAndroid={true}\n      scrollInputAdditionalOffset={110}\n      scrollRef={scrollRef}\n      ref={keyboardRef}>\n      <ScrollView ref={scrollRef}>\n        <ListItems itemsRef={ref} params={_params} items={items} />\n        <View style={{height: 16}} />\n      </ScrollView>\n      <View style={{height: 1, backgroundColor: theme.neutral5}} />\n      <BottomButton\n        containerStyle={{\n          marginHorizontal: 16,\n          marginVertical: 12,\n          borderRadius: 20,\n        }}\n        leftContainerStyle={{\n          borderWidth: 1,\n          borderColor: theme.primaryColor,\n          borderRadius: 8,\n        }}\n        rightContainerStyle={{\n          borderRadius: 8,\n        }}\n        leftBgColor={theme.white}\n        textColor={theme.primaryColor}\n        leftText={translate('policy.reset')}\n        rightText={translate('policy.apply')}\n        onRightPress={_onSubmit}\n        onLeftPress={onReset}\n      />\n      <AnimatedBottomSpace />\n    </SMyKeyboardAvoidingView>\n  );\n});\n\nconst ListItems = memo(\n  ({\n    items,\n    params,\n    itemsRef,\n  }: {\n    items: IInputFilterType[];\n    params: SharedValue<any>;\n    itemsRef: RefObject<{[id: string]: UISelectorInput | null}>;\n  }) => {\n    return (\n      <>\n        {items.map(item => (\n          <SItemContainer>\n            <ItemInput itemsRef={itemsRef} type={item} params={params} />\n          </SItemContainer>\n        ))}\n      </>\n    );\n  },\n);\n\ninterface ItemInputProps<T> {\n  type: T;\n  params: SharedValue<any>;\n  itemsRef: RefObject<{[id: string]: UISelectorInput | null}>;\n}\n\nconst ItemInput = memo((props: ItemInputProps<IInputFilterType>) => {\n  const {type, ...rest} = props;\n  if (!Array.isArray(type))\n    return <_ItemInput {...(props as ItemInputProps<_TInputFilter>)} />;\n\n  const visible = useSharedValue(0);\n  const contentHeight = useSharedValue(0);\n  const theme = useTheme();\n\n  const aViewStyle = useAnimatedStyle(() => {\n    return {\n      height: interpolate(visible.value, [0, 1], [0, contentHeight.value]),\n      opacity: visible.value,\n    };\n  }, []);\n\n  const aIconStyle = useAnimatedStyle(\n    () => ({\n      transform: [\n        {rotate: interpolate(visible.value, [0, 1], [270, 90]) + 'deg'},\n      ],\n    }),\n    [],\n  );\n\n  return (\n    <View>\n      <SView />\n      <SAdvancedSection\n        onPress={() => {\n          visible.value = withTiming(visible.value ? 0 : 1);\n        }}>\n        <SAdvancedTitle>{translate('policy.advanced_filter')}</SAdvancedTitle>\n        <SAdvancedDropIcon style={aIconStyle} source={IC_ARROW} />\n      </SAdvancedSection>\n      <Animated.View\n        style={[aViewStyle, {overflow: 'scroll', justifyContent: 'flex-end'}]}>\n        <View\n          onLayout={e => {\n            contentHeight.value = e.nativeEvent.layout.height;\n          }}>\n          {type.map(item => (\n            <_ItemInput type={item} {...rest} />\n          ))}\n        </View>\n      </Animated.View>\n    </View>\n  );\n});\n\nconst SMyKeyboardAvoidingView = styled(MyKeyboardAvoidingView)`\n  background-color: ${p => p.theme.white};\n  margin-top: 8px;\n`;\n\nconst SView = styled.View`\n  height: 8px;\n  background-color: ${p => p.theme.neutral8};\n  width: 140%;\n  align-self: center;\n`;\n\nconst SAdvancedSection = styled.TouchableOpacity`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding: 8px 0;\n`;\n\nconst SAdvancedTitle = styled.Text`\n  font-size: 16px;\n  line-height: 24px;\n  color: ${p => p.theme.neutral1};\n  font-family: ${Fonts.Medium};\n`;\n\nconst SAdvancedDropIcon = styled(Animated.Image)`\n  height: 17px;\n  width: 17px;\n`;\n\nconst _ItemInput = memo(\n  ({type, params, itemsRef}: ItemInputProps<_TInputFilter>) => {\n    if (typeof type !== 'string') {\n      return type(params);\n    }\n\n    const title = useMemo(() => {\n      if (type == 'receiver') return ['recipient'];\n      if (type == 'doctype') return ['document_type'];\n      if (type.indexOf('date') !== -1) return ['from_date', 'to_date'];\n      return [type];\n    }, [type]);\n\n    /** --------------------------------------------------\n     * Date input\n     */\n    if (type.indexOf('date') !== -1) {\n      return (\n        <>\n          <SDateTitle>{translate('policy.' + type)}</SDateTitle>\n          <SRow>\n            <UIInput.DateTime\n              style={{flex: 1}}\n              mode={'date'}\n              title={translate('policy.' + title[0])}\n              params={params}\n              keyName={type + '_from'}\n            />\n            <UIInput.DateTime\n              style={{flex: 1, marginLeft: 16}}\n              mode={'date'}\n              title={translate('policy.' + title[1])}\n              params={params}\n              keyName={type + '_to'}\n            />\n          </SRow>\n        </>\n      );\n    }\n\n    /** ---------------------------------------------\n     *  User Input\n     */\n    if (type == 'created_by') {\n      return (\n        <UIInput.UserPicker\n          title={translate('policy.' + title[0])}\n          params={params}\n          keyName={type}\n          type={'user'}\n        />\n      );\n    }\n\n    /** --------------------------------------------------\n     * Selector Input\n     */\n    const storageOpts = useStoragesByQuery('all').map(id => ({\n      label: getStorages(id)?.name || translate('policy.undefined'),\n      value: id,\n    }));\n\n    const collectionOpts = useCollectionsByQuery('all').map(id => ({\n      label: getCollections(id)?.name || translate('policy.undefined'),\n      value: id,\n    }));\n\n    const receiverOpts = useUserGroupByQuery('teams').map(id => ({\n      label: getUserGroup(id)?.name || translate('policy.undefined'),\n      value: id,\n    }));\n\n    const doctypeOpts = useDoctypesByQuery('all').map(id => ({\n      label: getDoctypes(id)?.name || translate('policy.undefined'),\n      value: id,\n    }));\n\n    /* set folder options when collection change*/\n    const [collection, setCollection] = useState('');\n\n    if (type == 'folder') {\n      useAnimatedReaction(\n        () => params.value?.collection,\n        (_collection, _prevCollection) => {\n          if (_collection !== _prevCollection) {\n            runOnJS(setCollection)(_collection);\n          }\n        },\n        [],\n      );\n    }\n\n    const folderOpts =\n      useCollections(collection)?.folders?.map(item => ({\n        label: item?.name || translate('policy.undefined'),\n        value: item?.id,\n      })) || [];\n\n    const options = useMemo(() => {\n      if (type == 'collection') return collectionOpts;\n      if (type == 'storage') return storageOpts;\n      if (type == 'receiver') return receiverOpts;\n      if (type == 'doctype') return doctypeOpts;\n      if (type == 'folder') return folderOpts;\n      if (type == 'sort') return sortOpts;\n      if (type == 'filter') return filterOpts;\n      return [];\n    }, [type, collection]) as any;\n\n    const allOption = useMemo(() => {\n      const value = undefined;\n\n      if (type == 'filter')\n        return {label: translate('policy.no_filter'), value};\n      if (type == 'sort')\n        return {label: translate('policy.created_time'), value};\n      return {label: translate('policy.all'), value};\n    }, [type]);\n\n    return (\n      <UIInput.Selector\n        ref={view => {\n          if (itemsRef.current) itemsRef.current[type] = view;\n        }}\n        title={translate('policy.' + title[0])}\n        params={params}\n        keyName={type}\n        // value={\"\"}\n        options={[allOption, ...options]}\n        hideClearButton={true}\n      />\n    );\n  },\n);\n\nconst SItemContainer = styled.View`\n  margin: 16px 16px 0 16px;\n`;\n\nconst SRow = styled.View`\n  flex-direction: row;\n`;\nconst SDateTitle = styled.Text`\n  font-size: 14px;\n  line-height: 20px;\n  font-family: ${Fonts.Regular};\n  margin-bottom: 4px;\n  margin-top: 12px;\n  color: ${p => p.theme.neutral1};\n`;\n","import React, {memo} from 'react';\nimport {styled} from '@true/core';\nimport { TextStyle, TouchableOpacityProps } from \"react-native\";\n\nexport const MenuItem = memo(\n  ({\n    source,\n    title,\n    textColor,\n    ...rest\n  }: {source?: any; title: string, textColor?: string} & TouchableOpacityProps) => {\n    return (\n      <SMenuContainer {...rest}>\n        <SMenuWrapper>\n          {source ? <SMenuIcon source={source} /> : null}\n          <SMenuTitle textColor={textColor}>{title}</SMenuTitle>\n        </SMenuWrapper>\n        <SMenuDivider />\n      </SMenuContainer>\n    );\n  },\n);\n\nconst SMenuContainer = styled.TouchableOpacity``;\n\nconst SMenuWrapper = styled.View`\n  flex-direction: row;\n  align-items: center;\n  padding: 16px;\n`;\nconst SMenuIcon = styled.Image`\n  margin-right: 8px;\n`;\n\nconst SMenuTitle = styled.Text<{textColor?: string}>`\n  color: ${p => p.textColor || p.theme.neutral1};\n`;\nconst SMenuDivider = styled.View`\n  height: 1px;\n  background-color: ${p => p.theme.neutral5};\n  margin: 0 16px;\n`;\n","import {DynamicHeader, ScreenWrapper, ScrollableTabView} from '@true/ui';\nimport React, {memo, useCallback, useState} from 'react';\nimport {Fonts, stripSpecialCharacters, styled, translate, useNavigationParams} from '@true/core';\nimport {useDoctypes} from '@policy/store/doctypes';\nimport {PoliciesItem} from '@policy/screens/HomeScreen/PoliciesItem';\nimport {requestPolicyByDoctype} from '@policy/store/policies/functions';\nimport {requestMasterVersionDoctype} from '@policy/store/masterVersionDoctypes/functions';\nimport {getPoliciesByQuery, usePoliciesByQuery} from '@policy/store/policies';\nimport {SharedValue, useDerivedValue, useSharedValue,} from 'react-native-reanimated';\nimport {MasterDoctypeItem} from '@policy/screens/DocumentTypesScreen/MasterDoctypeItem';\nimport {getMasterVersionDoctypesByQuery, useMasterVersionDoctypesByQuery,} from '@policy/store/masterVersionDoctypes';\nimport {navigateToDoctypeFilter} from '@policy/utils';\nimport {FilterIcon} from '@policy/components/FilterIcon';\nimport {SelectedItemProvider, useSelectedItem,} from '@policy/context/SelectedItemContext';\nimport {SelectedHeader} from '@policy/screens/HomeScreen/SelectedHeader';\nimport {IDocTypes} from '@policy/store/doctypes/types';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\n\nexport interface DoctypeDetailScreenProps {\n  id: string | number;\n}\n\nexport interface IParams {\n  collection?: number | string;\n  storage?: number | string;\n}\n\nexport const DEFAULT_PARAMS = {\n  collection: undefined,\n  storage: undefined,\n};\n\nexport const DoctypeDetailScreen = memo(() => {\n  const {id} = useNavigationParams<DoctypeDetailScreenProps>();\n\n  const doctype = useDoctypes(id);\n\n  const [params, setParams] = useState<IParams>(DEFAULT_PARAMS);\n\n  const renderItem = useCallback(\n    (id: number, index?: number, isLast?: boolean) => {\n      return <PoliciesItem id={id} isLast={isLast} index={index} />;\n    },\n    [],\n  );\n  const renderItem2 = useCallback(\n    (id: number, index?: number, isLast?: boolean) => {\n      return <MasterDoctypeItem id={id} isLast={isLast} index={index} />;\n    },\n    [],\n  );\n\n  const animatedCollapseIndex = useSharedValue(0);\n\n  const animatedHeight = useSharedValue(0);\n  const animatedTop = useSharedValue(0);\n\n  return (\n    <SelectedItemProvider>\n      <ScreenWrapper isGrey={true}>\n        <DynamicHeader\n          hideSeparator={true}\n          title={stripSpecialCharacters(doctype?.name || '')}\n          rightComponent={\n            <SHeaderWrapper>\n              <FilterIcon\n                params={params}\n                onPress={() => {\n                  navigateToDoctypeFilter({\n                    params,\n                    setParams,\n                  });\n                }}\n              />\n            </SHeaderWrapper>\n          }\n          animatedCollapseIndex={animatedCollapseIndex}\n        />\n        <SViewContent>\n          <SelectedHeader\n            title={stripSpecialCharacters(doctype?.name || '')}\n            animatedHeight={animatedHeight}\n            animatedTop={animatedTop}\n          />\n          <_Comp\n            animatedCollapseIndex={animatedCollapseIndex}\n            params={params}\n            id={id}\n            renderItem={renderItem}\n            renderItem2={renderItem2}\n            animatedHeight={animatedHeight}\n            doctype={doctype}\n          />\n        </SViewContent>\n      </ScreenWrapper>\n    </SelectedItemProvider>\n  );\n});\n\nconst _Comp = memo(\n  ({\n    animatedCollapseIndex,\n    params,\n    id,\n    renderItem,\n    renderItem2,\n    doctype,\n    animatedHeight,\n  }: {\n    animatedCollapseIndex: SharedValue<number>;\n    params: IParams;\n    id: string | number;\n    renderItem: any;\n    renderItem2: any;\n    doctype?: IDocTypes;\n    animatedHeight: SharedValue<number>;\n  }) => {\n    const {selectedState, selectedIds} = useSelectedItem();\n\n    const scrollEnabled = useDerivedValue(() => selectedIds.value.length == 0);\n\n    return (\n      <ScrollableTabView.Provider\n        scrollEnabled={scrollEnabled}\n        disabledLoadData={selectedState}\n        onLayout={layout => {\n          'worklet';\n          animatedHeight.value = layout.headerHeight;\n        }}\n        onCollapse={index => {\n          'worklet';\n          animatedCollapseIndex.value = index;\n        }}\n        tabs={[\n          {\n            title: translate('policy.all_documents'),\n            content: p => (\n              <ScrollableTabView.List\n                index={p.index}\n                params={{id, ...params}}\n                requestFn={requestPolicyByDoctype}\n                getItemByQuery={getPoliciesByQuery}\n                useItemByQuery={usePoliciesByQuery}\n                query={'doctype'}\n                renderItem={renderItem}\n              />\n            ),\n          },\n          {\n            title: translate('policy.master_versions'),\n            content: p => (\n              <ScrollableTabView.List\n                index={p.index}\n                params={{id}}\n                requestFn={requestMasterVersionDoctype}\n                getItemByQuery={getMasterVersionDoctypesByQuery}\n                useItemByQuery={useMasterVersionDoctypesByQuery}\n                renderItem={renderItem2}\n              />\n            ),\n          },\n        ]}>\n        <ScrollableTabView.CollapsableTabBar>\n          <STitleWrapper>\n            <STitle numberOfLines={2}>\n              {stripSpecialCharacters(doctype?.name || '')}\n            </STitle>\n          </STitleWrapper>\n        </ScrollableTabView.CollapsableTabBar>\n        <ScrollableTabView.Content />\n      </ScrollableTabView.Provider>\n    );\n  },\n);\n\nconst SHeaderWrapper = styled.View`\n  margin-right: 16px;\n`;\n\nconst SViewContent = styled.View`\n  background-color: ${p => p.theme.neutral9};\n  flex: 1;\n`;\n\nconst STitleWrapper = styled.View`\n  padding-left: 16px;\n  background-color: ${p => p.theme.backgroundColor};\n`;\nconst STitle = styled.Text`\n  font-size: 20px;\n  line-height: 28px;\n  font-family: ${Fonts.SemiBold};\n  color: ${p => p.theme.neutral1};\n`;\n","import { styled, translate, useNavigationParams } from \"@true/core\";\nimport { DynamicHeader, ScreenWrapper } from \"@true/ui\";\nimport React, { memo } from \"react\";\nimport { DEFAULT_PARAMS, IParams } from \"@policy/screens/DocumentTypesScreen/DoctypeDetailScreen\";\nimport { FilterComp } from \"@policy/components/FilterComp\";\n\nexport interface DoctypeFilterProps {\n  params: IParams;\n  setParams: any;\n}\n\nexport const DoctypeFilter = memo(() => {\n  const {params, setParams} = useNavigationParams<DoctypeFilterProps>();\n\n  return (\n    <ScreenWrapper>\n      <DynamicHeader title={translate('policy.filter')} />\n      <FilterComp\n        items={['collection', 'storage']}\n        params={params}\n        setParams={setParams}\n        defaultParams={DEFAULT_PARAMS}\n      />\n    </ScreenWrapper>\n  );\n});\n","import React, {RefObject, useCallback} from 'react';\nimport {MyBottomSheet, useAnimatedSnapPoints} from '@true/ui';\nimport {BottomSheetModal, BottomSheetView} from '@gorhom/bottom-sheet';\nimport {\n  Colors,\n  interactManager,\n  memoForwardRef,\n  translate,\n  useAsyncFn,\n  useAutoToastError,\n  useBoolean,\n  useTheme,\n} from '@true/core';\nimport {MenuItem} from '@policy/components/MenuItem';\nimport {AnimatedBottomSpace} from '@policy/components/AnimatedBottomSpace';\nimport {navigateToEditMasterVersion} from '@policy/utils';\nimport {requestRemoveMasterVersion} from '@policy/store/masterVersionDoctypes/functions';\nimport {MyConfirmationDialog} from '@policy/components/Dialog/MyConfirmationDialog';\n\nexport const DoctypeMoreMenu = memoForwardRef(\n  (props: {id: number}, ref: RefObject<BottomSheetModal>) => {\n    const {onViewLayout, animatedSnapPoints} = useAnimatedSnapPoints();\n    const [visible, show, hide] = useBoolean();\n\n    const theme = useTheme();\n\n    const [{loading: removeLoading, error: removeError}, onRemove] = useAsyncFn(\n      async () => await requestRemoveMasterVersion({id: props.id}),\n      [props.id],\n    );\n\n    const onTrashPress = useCallback(() => {\n      show();\n    }, []);\n\n    const onEditPress = useCallback(() => {\n      interactManager(() => navigateToEditMasterVersion({id: props.id}), 300);\n      ref.current?.dismiss();\n    }, [props.id]);\n\n    useAutoToastError(removeError);\n\n    return (\n      <MyBottomSheet\n        name={'doctypes'}\n        ref={ref}\n        snapPoints={animatedSnapPoints}>\n        <BottomSheetView onLayout={onViewLayout('ok')}>\n          <MenuItem title={translate('policy.edit')} onPress={onEditPress} />\n          <MenuItem\n            textColor={Colors.red1}\n            title={translate('policy.remove')}\n            onPress={onTrashPress}\n          />\n          <AnimatedBottomSpace />\n        </BottomSheetView>\n        {/*<ConfirmationDialog*/}\n        {/*  isVisible={visible}*/}\n        {/*  onCloseRequest={hide}*/}\n        {/*  title={translate('policy.remove_master_version')}*/}\n        {/*  content={translate(*/}\n        {/*    'policy.are_you_sure_you_want_to_remove_this_master_version',*/}\n        {/*  )}*/}\n        {/*  buttons={[*/}\n        {/*    {text: translate('policy.cancel')},*/}\n        {/*    {*/}\n        {/*      text: translate('policy.confirm'),*/}\n        {/*      onPress: onRemove,*/}\n        {/*      loading: removeLoading,*/}\n        {/*      backgroundColor: theme.primaryColor,*/}\n        {/*      color: Colors.white,*/}\n        {/*    },*/}\n        {/*  ]}*/}\n        {/*/>*/}\n        <MyConfirmationDialog\n          isVisible={visible}\n          onCloseRequest={hide}\n          title={translate('policy.remove_master_version')}\n          content={translate(\n            'policy.are_you_sure_you_want_to_remove_this_master_version',\n          )}\n          onPressRightButton={onRemove}\n          colorLeftButton={theme.neutral02}\n          bgColorRightButton={theme.red1}\n          titleRightButton={translate('policy.remove')}\n        />\n      </MyBottomSheet>\n    );\n  },\n);\n","import React, {memo, useCallback, useRef} from 'react';\nimport {\n  Fonts,\n  IC_MORE,\n  stripSpecialCharacters,\n  styled,\n  translate,\n  useTheme,\n  useUser,\n} from '@true/core';\nimport {useMasterVersionDoctypes} from '@policy/store/masterVersionDoctypes';\nimport moment from 'moment';\nimport {useCollections} from '@policy/store/collections';\nimport {useDoctypes} from '@policy/store/doctypes';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {DoctypeMoreMenu} from '@policy/screens/DocumentTypesScreen/DoctypeMoreMenu';\nimport {navigateToEditMasterVersion} from '@policy/utils';\nimport {UIButton} from '@true/ui';\n\ninterface Props {\n  index?: number;\n  id: number;\n  isLast?: boolean;\n}\n\nexport const MasterDoctypeItem = memo((props: Props) => {\n  const {id} = props;\n\n  const masterVersion = useMasterVersionDoctypes(id);\n  const user = useUser(masterVersion?.user_id);\n  const collection = useCollections(masterVersion?.collection_id);\n  const doctype = useDoctypes(masterVersion?.doctype_id);\n  const theme = useTheme();\n\n  const ref = useRef<BottomSheetModal | null>(null);\n\n  const onEditPress = useCallback(() => {\n    navigateToEditMasterVersion({id});\n  }, [id]);\n\n  return (\n    <SContainer onPress={onEditPress}>\n      <STitleWrapper>\n        <STitleView>\n          <STitle numberOfLines={2}>\n            {stripSpecialCharacters(masterVersion?.name)}\n          </STitle>\n        </STitleView>\n\n        <SButton\n          imageSize={24}\n          source={IC_MORE}\n          imageStyle={{tintColor: theme.neutral2}}\n          onPress={() => ref.current?.present()}\n        />\n      </STitleWrapper>\n      <SItemWrapper>\n        <SubItem label={translate('policy.created_by')} value={user?.name} />\n        <SubItem\n          label={translate('policy.date')}\n          value={moment(masterVersion?.since, 'X').format('DD/MM/YYYY')}\n        />\n\n        <SubItem label={translate('policy.type')} value={doctype?.name} />\n        <SubItem\n          label={translate('policy.collection')}\n          value={collection?.name}\n        />\n      </SItemWrapper>\n\n      <DoctypeMoreMenu ref={ref} id={id} />\n    </SContainer>\n  );\n});\n\nconst SContainer = styled.TouchableOpacity`\n  padding: 8px 16px;\n  background-color: ${p => p.theme.backgroundColor};\n  margin-top: 8px;\n`;\nconst STitleWrapper = styled.View`\n  flex-direction: row;\n`;\n\nconst SItemWrapper = styled.View``;\n\nconst STitleView = styled.View`\n  flex: 1;\n`;\n\nconst STitle = styled.Text`\n  color: ${p => p.theme.neutral1};\n  font-family: ${Fonts.Medium};\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst SButton = styled(UIButton)``;\n\nconst SubItem = memo(\n  ({\n    label = '',\n    value = '',\n  }: {\n    label: string | undefined;\n    value: string | undefined;\n  }) => {\n    return (\n      <SSubItemContainer>\n        <SSubTitle>{label}:</SSubTitle>\n        <SSubView>\n          <SSubValue numberOfLines={2}>{value}</SSubValue>\n        </SSubView>\n      </SSubItemContainer>\n    );\n  },\n);\n\nconst SSubItemContainer = styled.View`\n  flex-direction: row;\n  padding-top: 8px;\n`;\n\nconst SSubView = styled.View`\n  flex: 1;\n`;\n\nconst SSubTitle = styled.Text`\n  color: ${p => p.theme.neutral2};\n  font-size: 12px;\n  line-height: 16px;\n  margin-right: 4px;\n  width: 90px;\n`;\n\nconst SSubValue = styled.Text`\n  color: ${p => p.theme.neutral1};\n  font-family: ${Fonts.Medium};\n  font-size: 12px;\n  line-height: 16px;\n`;\n","import { Core, Fetch } from \"@true/core\";\nimport { batch } from \"react-redux\";\nimport { IRequestPolicyDoctypeParams } from \"@policy/store/policies/functions\";\nimport { setMasterVersionDoctypesQuery, syncMasterVersionDoctypes } from \"@policy/store/masterVersionDoctypes/index\";\nimport { IMasterVersionDoctypes } from \"@policy/store/masterVersionDoctypes/types\";\n\nexport interface IRequestMasterVersionDoctypeParams {\n  id: string | number;\n  page?: number;\n}\n\nexport const requestMasterVersionDoctype = async (\n  params: IRequestPolicyDoctypeParams,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    mvs: IMasterVersionDoctypes[];\n  }>(`@${Core.systemPath}/policy/ajax/api/mobile/doc/doctype.mvs`, params);\n\n  batch(() => {\n    if (data.mvs) {\n      syncMasterVersionDoctypes(data.mvs);\n\n      const newDocs = data.mvs.map(item => item.id.toString())\n\n      setMasterVersionDoctypesQuery(prev => ({\n        ...prev,\n        all: params.page && params.page > 1\n          ? [ ...prev.all, ...newDocs]\n        : newDocs,\n      }));\n    }\n  });\n\n  return data.mvs;\n};\n\ninterface IRequestEditMasterVersion {\n  name: string;\n  collection_id: number | string;\n  doctype_id: number | string;\n  id: number | string;\n}\n\nexport const requestEditMasterVersion = async (\n  params: IRequestEditMasterVersion,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/policy/ajax/api/doc/mv/edit`, params);\n\n\n  batch(() => {\n    if (data.message == \"ok\") {\n      syncMasterVersionDoctypes(prev => [{\n        ...prev?.[params.id],\n        doctype_id: params.doctype_id as number,\n        collection_id: params.collection_id as number,\n        name: params.name\n      }]);\n    }\n  });\n\n  return data.message;\n};\n\ninterface IRequestRemoveMasterVersion {\n  id: number | string;\n}\n\nexport const requestRemoveMasterVersion = async (\n  params: IRequestRemoveMasterVersion,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/policy/ajax/api/doc/mv/remove`, params);\n\n\n  batch(() => {\n    if (data.message == \"ok\") {\n      setMasterVersionDoctypesQuery(prev => ({\n        ...prev,\n        all: prev.all.filter(id => id != params.id)\n      }))\n    }\n  });\n\n  return data.message;\n};\n"],"names":["_react","_interopRequireWildcard","require","_reactNativeSafeAreaContext","_reactNativeReanimated","_jsxRuntime","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_worklet_7203089036154_init_data","code","AnimatedBottomSpace","memo","props","anonymous","aBottom","useAnimatedSafeAreaInsets","animatedStyle","useAnimatedStyle","height","value","__closure","__initData","__workletHash","jsx","View","assign","style","exports","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_ui","_core","_collections","_storages","_doctypes","_AnimatedBottomSpace","_reactNative","_excluded","filterOpts","label","translate","sortOpts","_worklet_9029730044761_init_data","_worklet_13659997026295_init_data","FilterComp","items","params","setParams","defaultParams","ref","useRef","_params","useSharedValue","setAdvancedExport","useCallback","item","Array","isArray","_type","_cloneElement$props","keyName","cloneElement","indexOf","advanced_export","useAnimatedReaction","__params","__prevParams","collection","folder","undefined","JSON","stringify","runOnJS","_onSubmit","goBack","onReset","theme","useTheme","keyboardRef","scrollRef","jsxs","SMyKeyboardAvoidingView","disableOnAndroid","scrollInputAdditionalOffset","children","ScrollView","ListItems","itemsRef","backgroundColor","neutral5","BottomButton","containerStyle","marginHorizontal","marginVertical","borderRadius","leftContainerStyle","borderWidth","borderColor","primaryColor","rightContainerStyle","leftBgColor","white","textColor","leftText","rightText","onRightPress","onLeftPress","_ref","Fragment","map","SItemContainer","ItemInput","type","_worklet_8409949742507_init_data","_worklet_2526022283159_init_data","rest","_objectWithoutProperties2","_ItemInput","visible","contentHeight","aViewStyle","interpolate","opacity","aIconStyle","transform","rotate","SView","SAdvancedSection","onPress","withTiming","SAdvancedTitle","SAdvancedDropIcon","source","IC_ARROW","overflow","justifyContent","onLayout","e","nativeEvent","layout","styled","MyKeyboardAvoidingView","_taggedTemplateLiteralLoose2","p","neutral8","TouchableOpacity","Text","neutral1","Fonts","Medium","Animated","Image","_worklet_8111418951837_init_data","_worklet_4403808879510_init_data","_ref2","_useCollections","_useCollections$folde","title","useMemo","SDateTitle","SRow","UIInput","DateTime","flex","mode","marginLeft","UserPicker","storageOpts","useStoragesByQuery","id","_getStorages","getStorages","name","collectionOpts","useCollectionsByQuery","_getCollections","getCollections","receiverOpts","useUserGroupByQuery","_getUserGroup","getUserGroup","doctypeOpts","useDoctypesByQuery","_getDoctypes","getDoctypes","_useState","useState","_useState2","_slicedToArray2","setCollection","_params$value","_collection","_prevCollection","folderOpts","useCollections","folders","options","allOption","Selector","view","current","concat","_toConsumableArray2","hideClearButton","Regular","MenuItem","SMenuContainer","SMenuWrapper","SMenuIcon","SMenuTitle","SMenuDivider","_PoliciesItem","_functions","_functions2","_policies","_MasterDoctypeItem","_masterVersionDoctypes","_utils","_FilterIcon","_SelectedItemContext","_SelectedHeader","DEFAULT_PARAMS","storage","DoctypeDetailScreen","useNavigationParams","doctype","useDoctypes","renderItem","index","isLast","PoliciesItem","renderItem2","MasterDoctypeItem","animatedCollapseIndex","animatedHeight","animatedTop","SelectedItemProvider","ScreenWrapper","isGrey","DynamicHeader","hideSeparator","stripSpecialCharacters","rightComponent","SHeaderWrapper","FilterIcon","navigateToDoctypeFilter","SViewContent","SelectedHeader","_Comp","_worklet_5912787252731_init_data","_worklet_2514887566720_init_data","_worklet_13646161136462_init_data","_useSelectedItem","useSelectedItem","selectedState","selectedIds","scrollEnabled","useDerivedValue","length","ScrollableTabView","Provider","disabledLoadData","headerHeight","onCollapse","tabs","content","List","requestFn","requestPolicyByDoctype","getItemByQuery","getPoliciesByQuery","useItemByQuery","usePoliciesByQuery","query","requestMasterVersionDoctype","getMasterVersionDoctypesByQuery","useMasterVersionDoctypesByQuery","CollapsableTabBar","STitleWrapper","STitle","numberOfLines","Content","neutral9","SemiBold","_DoctypeDetailScreen","_FilterComp","DoctypeFilter","_useNavigationParams","_bottomSheet","_MenuItem","_MyConfirmationDialog","DoctypeMoreMenu","memoForwardRef","_useAnimatedSnapPoint","useAnimatedSnapPoints","onViewLayout","animatedSnapPoints","_useBoolean","useBoolean","_useBoolean2","show","hide","_useAsyncFn","useAsyncFn","_asyncToGenerator2","requestRemoveMasterVersion","_useAsyncFn2","_useAsyncFn2$","removeError","loading","error","onRemove","onTrashPress","onEditPress","_ref$current","interactManager","navigateToEditMasterVersion","dismiss","useAutoToastError","MyBottomSheet","snapPoints","BottomSheetView","Colors","red1","MyConfirmationDialog","isVisible","onCloseRequest","onPressRightButton","colorLeftButton","neutral02","bgColorRightButton","titleRightButton","_templateObject9","_templateObject10","_moment","_interopRequireDefault","_DoctypeMoreMenu","masterVersion","useMasterVersionDoctypes","user","useUser","user_id","collection_id","doctype_id","SContainer","STitleView","SButton","imageSize","IC_MORE","imageStyle","tintColor","neutral2","present","SItemWrapper","SubItem","moment","since","format","UIButton","_ref$label","_ref$value","SSubItemContainer","SSubTitle","SSubView","SSubValue","_ref3","_reactRedux","_index","_x","data","Fetch","postWithToken","Core","systemPath","batch","mvs","syncMasterVersionDoctypes","newDocs","toString","setMasterVersionDoctypesQuery","prev","all","page","apply","arguments","_x2","message","_x3","filter"],"sourceRoot":""}