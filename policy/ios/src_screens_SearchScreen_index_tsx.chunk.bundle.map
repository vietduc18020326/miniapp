{"version":3,"file":"src_screens_SearchScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/screens/SearchScreen/index.tsx"],"sourcesContent":["import React, {memo, useCallback, useState} from 'react';\nimport {\n  EmptyHeader,\n  FullScreenWrapper,\n  ScrollableTabView,\n  SearchBar,\n} from '@true/ui';\nimport {goBack, IC_ARROW, styled, translate} from '@true/core';\nimport {navigateToSearchFilter} from '@policy/utils';\nimport {\n  IRequestSearchPolicyParams,\n  requestSearchPolicy,\n} from '@policy/store/policies/functions';\nimport {getPoliciesByQuery, usePoliciesByQuery} from '@policy/store/policies';\nimport {PoliciesItem} from '@policy/screens/HomeScreen/PoliciesItem';\nimport {FilterIcon} from '@policy/components/FilterIcon';\nimport {\n  SelectedItemProvider,\n  useSelectedItem,\n} from '@policy/context/SelectedItemContext';\nimport {SelectedHeader} from '@policy/screens/HomeScreen/SelectedHeader';\nimport {useDerivedValue} from 'react-native-reanimated';\n\nexport interface SearchScreenProps {}\n\nexport const defaultParams: IRequestSearchPolicyParams = {\n  storage: undefined,\n  receiver: undefined,\n  collection: undefined,\n  folder: undefined,\n  doctype: undefined,\n  created_date_from: '',\n  created_date_to: '',\n  effective_date_from: '',\n  effective_date_to: '',\n  expired_date_from: '',\n  expired_date_to: '',\n  q: '',\n  created_by: undefined,\n};\n\nconst _SearchScreen = memo(() => {\n  const [params, setParams] = useState(defaultParams);\n\n  const {selectedState, selectedIds} = useSelectedItem();\n\n  const scrollEnable = useDerivedValue(() => selectedIds.value.length == 0);\n\n  const renderItem = useCallback(\n    (policyId: string | number, index?: number, isLast?: boolean) => {\n      return <PoliciesItem id={policyId as number} isLast={isLast} />;\n    },\n    [],\n  );\n\n  return (\n    <FullScreenWrapper isGrey={true}>\n      <SEmptyHeader>\n        <SRow>\n          <SBackBtn onPress={goBack}>\n            <SBackIc source={IC_ARROW} />\n          </SBackBtn>\n          <SView>\n            <SearchBar\n              containerStyle={{\n                height: 40,\n                marginTop: 0,\n                marginBottom: 0,\n              }}\n              onSearchTextChange={e => {\n                setParams(prev => ({\n                  ...prev,\n                  q: e,\n                }));\n              }}\n            />\n          </SView>\n          <FilterIcon\n            params={params}\n            onPress={() =>\n              navigateToSearchFilter({\n                params,\n                setParams,\n              })\n            }\n          />\n        </SRow>\n      </SEmptyHeader>\n      <SViewContent>\n        <SelectedHeader title={translate('policy.search')} />\n        <ScrollableTabView.Provider\n          disabledLoadData={selectedState}\n          scrollEnabled={scrollEnable}\n          params={params}\n          requestFn={requestSearchPolicy}\n          query={'search'}\n          getItemByQuery={getPoliciesByQuery}\n          useItemByQuery={usePoliciesByQuery}\n          renderItem={renderItem}\n          tabs={[\n            {\n              title: translate('policy.sent_to_me'),\n              content: p => (\n                <ScrollableTabView.List index={0} tab={'documents'} />\n              ),\n            },\n            {\n              title: translate('policy.followings'),\n              content: p => (\n                <ScrollableTabView.List index={1} tab={'following'} />\n              ),\n            },\n            {\n              title: translate('policy.created_by_me'),\n              content: p => <ScrollableTabView.List index={2} tab={'sent'} />,\n            },\n          ]}>\n          <ScrollableTabView.TabBar />\n          <ScrollableTabView.Content />\n        </ScrollableTabView.Provider>\n      </SViewContent>\n    </FullScreenWrapper>\n  );\n});\n\nexport const SearchScreen = memo(() => {\n  return (\n    <SelectedItemProvider>\n      <_SearchScreen />\n    </SelectedItemProvider>\n  );\n});\n\nconst SEmptyHeader = styled(EmptyHeader)`\n  background-color: ${p => p.theme.backgroundColor};\n`;\n\nconst SViewContent = styled.View`\n  background-color: ${p => p.theme.neutral9};\n  flex: 1;\n`;\n\nconst SRow = styled.View`\n  flex-direction: row;\n  padding: 0 16px;\n  align-items: center;\n`;\n\nconst SBackBtn = styled.TouchableOpacity.attrs(p => ({\n  hitSlop: {\n    top: 8,\n    bottom: 8,\n    left: 8,\n    right: 8,\n  },\n}))``;\n\nconst SBackIc = styled.Image``;\nconst SView = styled.View`\n  flex: 1;\n  margin-right: 8px;\n`;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_react","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_ui","_core","_utils","_functions","_policies","_PoliciesItem","_FilterIcon","_SelectedItemContext","_SelectedHeader","_reactNativeReanimated","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","defaultParams","exports","storage","undefined","receiver","collection","folder","doctype","created_date_from","created_date_to","effective_date_from","effective_date_to","expired_date_from","expired_date_to","q","created_by","_worklet_5912787252731_init_data","code","_SearchScreen","memo","anonymous","_useState","useState","_useState2","_slicedToArray2","params","setParams","_useSelectedItem","useSelectedItem","selectedState","selectedIds","scrollEnable","useDerivedValue","value","length","__closure","__initData","__workletHash","renderItem","useCallback","policyId","index","isLast","jsx","PoliciesItem","id","jsxs","FullScreenWrapper","isGrey","children","SEmptyHeader","SRow","SBackBtn","onPress","goBack","SBackIc","source","IC_ARROW","SView","SearchBar","containerStyle","height","marginTop","marginBottom","onSearchTextChange","e","prev","assign","FilterIcon","navigateToSearchFilter","SViewContent","SelectedHeader","title","translate","ScrollableTabView","Provider","disabledLoadData","scrollEnabled","requestFn","requestSearchPolicy","query","getItemByQuery","getPoliciesByQuery","useItemByQuery","usePoliciesByQuery","tabs","content","p","List","tab","TabBar","Content","SelectedItemProvider","styled","EmptyHeader","_taggedTemplateLiteralLoose2","theme","backgroundColor","View","neutral9","TouchableOpacity","attrs","hitSlop","top","bottom","left","right","Image"],"sourceRoot":""}