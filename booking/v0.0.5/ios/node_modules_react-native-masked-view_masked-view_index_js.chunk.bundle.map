{"version":3,"file":"node_modules_react-native-masked-view_masked-view_index_js.chunk.bundle","mappings":"oOAAA,IAAAA,EAAAC,EAAAC,EAAA,QAAyCC,EAAAA,QAE1BC,EAAAA,O,iMCQfC,EACwE,SAAAC,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAG,QAAAH,GAAA,IAAAI,EAAAC,EAAAJ,GAAA,GAAAG,GAAAA,EAAAE,IAAAN,GAAA,OAAAI,EAAAG,IAAAP,GAAA,IAAAQ,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAd,EAAA,eAAAc,GAAAH,OAAAI,UAAAC,eAAAC,KAAAjB,EAAAc,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAb,EAAAc,GAAA,KAAAI,IAAAA,EAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAd,EAAAc,EAAA,QAAAN,EAAAL,QAAAH,EAAAI,GAAAA,EAAAe,IAAAnB,EAAAQ,GAAAA,CAAA,CADxEY,CAAAxB,EAAA,QACAyB,EAAAzB,EAAA,OAAwE0B,EAAA1B,EAAA,OAAA2B,EAAA,oCAAAlB,EAAAL,GAAA,sBAAAwB,QAAA,gBAAAvB,EAAA,IAAAuB,QAAApB,EAAA,IAAAoB,QAAA,OAAAnB,EAAA,SAAAL,GAAA,OAAAA,EAAAI,EAAAH,CAAA,GAAAD,EAAA,UAAAyB,EAAAC,GAAA,IAAAC,EAAA,kCAAAC,UAAAA,QAAAC,UAAA,YAAAD,QAAAC,UAAAC,KAAA,+BAAAC,MAAA,oBAAAC,QAAAjB,UAAAkB,QAAAhB,KAAAW,QAAAC,UAAAG,QAAA,6BAAAhC,GAAA,UAAAkC,GAAA,sBAAAC,EAAAC,GAAA,EAAAC,EAAAlC,SAAAuB,GAAA,GAAAC,EAAA,KAAAW,GAAA,EAAAD,EAAAlC,SAAA,MAAAoC,YAAAJ,EAAAP,QAAAC,UAAAO,EAAAI,UAAAF,EAAA,MAAAH,EAAAC,EAAAK,MAAA,KAAAD,WAAA,SAAAE,EAAAvC,SAAA,KAAAgC,EAAA,EAExE,IAAMQ,GAAgB,EAAAC,EAAAA,wBAA4B,iBAyCnB/C,EAAAA,QAAA,SAAAgD,IAAA,EAAAC,EAAA3C,SAAAL,EAAA+C,GAAA,IAAAE,EAAAtB,EAAA3B,GAAA,SAAAA,IAAA,IAAAkD,GAAA,EAAAC,EAAA9C,SAAA,KAAAL,GAAA,QAAAoD,EAAAV,UAAAW,OAAAC,EAAA,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAAF,EAAAE,GAAAd,UAAAc,GACO,OADPN,EAAAD,EAAA9B,KAAAwB,MAAAM,EAAA,OAAAQ,OAAAH,KAC7BI,6BAA8B,EAAKR,CAAC,CAwBnC,OAxBkC,EAAAS,EAAAtD,SAAAL,EAAA,EAAA4D,IAAA,SAAAC,MAEnC,WACE,IAAAC,EAAqDC,KAAKC,MAAlDC,EAAWH,EAAXG,YAAaC,EAAQJ,EAARI,SAAaC,GAAc,EAAAC,EAAA/D,SAAAyD,EAAArC,GAEhD,OAAKxB,EAAMoE,eAAeJ,IAYxB,EAAAzC,EAAA8C,MAACzB,EAAahC,OAAA0D,OAAA,GAAKJ,EAAc,CAAAD,SAAA,EAC/B,EAAA1C,EAAAgD,KAACjD,EAAAkD,KAAI,CAACC,cAAc,OAAOC,MAAOC,EAAAA,WAAWC,aAAaX,SACvDD,IAEFC,OAfEH,KAAKL,8BACRoB,QAAQC,KACN,mHAGFhB,KAAKL,6BAA8B,IAE9B,EAAAlC,EAAAgD,KAACjD,EAAAkD,KAAI5D,OAAA0D,OAAA,GAAKJ,EAAc,CAAAD,SAAGA,KAWtC,KAAClE,CAAA,CAzB4B,CAASC,EAAM+E,U","sources":["webpack:///./node_modules/@react-native-masked-view/masked-view/index.js","webpack:///./node_modules/@react-native-masked-view/masked-view/js/MaskedView.js"],"sourcesContent":["import MaskedView from './js/MaskedView';\n\nexport default MaskedView;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport * as React from 'react';\nimport { View, StyleSheet, requireNativeComponent } from 'react-native';\n\nconst RNCMaskedView = requireNativeComponent<any>('RNCMaskedView');\n\nimport type { MaskedViewProps } from './MaskedViewTypes';\n\n/**\n * Renders the child view with a mask specified in the `maskElement` prop.\n *\n * ```\n * import React from 'react';\n * import { Text, View } from 'react-native';\n * import MaskedView from 'react-native-masked-view';\n *\n * class MyMaskedView extends React.Component {\n *   render() {\n *     return (\n *       <MaskedView\n *         style={{ flex: 1 }}\n *         maskElement={\n *           <View style={styles.maskContainerStyle}>\n *             <Text style={styles.maskTextStyle}>\n *               Basic Mask\n *             </Text>\n *           </View>\n *         }\n *       >\n *         <View style={{ flex: 1, backgroundColor: 'blue' }} />\n *       </MaskedView>\n *     );\n *   }\n * }\n * ```\n *\n * The above example will render a view with a blue background that fills its\n * parent, and then mask that view with text that says \"Basic Mask\".\n *\n * The alpha channel of the view rendered by the `maskElement` prop determines how\n * much of the view's content and background shows through. Fully or partially\n * opaque pixels allow the underlying content to show through but fully\n * transparent pixels block that content.\n *\n */\nexport default class MaskedView extends React.Component<MaskedViewProps> {\n  _hasWarnedInvalidRenderMask = false;\n\n  render(): React.Node {\n    const { maskElement, children, ...otherViewProps } = this.props;\n\n    if (!React.isValidElement(maskElement)) {\n      if (!this._hasWarnedInvalidRenderMask) {\n        console.warn(\n          'MaskedView: Invalid `maskElement` prop was passed to MaskedView. ' +\n            'Expected a React Element. No mask will render.',\n        );\n        this._hasWarnedInvalidRenderMask = true;\n      }\n      return <View {...otherViewProps}>{children}</View>;\n    }\n\n    return (\n      <RNCMaskedView {...otherViewProps}>\n        <View pointerEvents=\"none\" style={StyleSheet.absoluteFill}>\n          {maskElement}\n        </View>\n        {children}\n      </RNCMaskedView>\n    );\n  }\n}\n"],"names":["_MaskedView","_interopRequireDefault","require","exports","MaskedView","React","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_reactNative","_jsxRuntime","_excluded","WeakMap","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_isNativeReflectConstruct","result","Super","_getPrototypeOf2","NewTarget","constructor","arguments","apply","_possibleConstructorReturn2","RNCMaskedView","requireNativeComponent","_React$Component","_inherits2","_super","_this","_classCallCheck2","_len","length","args","Array","_key","concat","_hasWarnedInvalidRenderMask","_createClass2","key","value","_this$props","this","props","maskElement","children","otherViewProps","_objectWithoutProperties2","isValidElement","jsxs","assign","jsx","View","pointerEvents","style","StyleSheet","absoluteFill","console","warn","Component"],"sourceRoot":""}