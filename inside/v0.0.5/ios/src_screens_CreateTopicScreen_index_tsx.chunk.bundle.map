{"version":3,"file":"src_screens_CreateTopicScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AvatarWithSelectChannel/index.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx","webpack:///./src/screens/CreateTopicScreen/index.tsx","webpack:///./src/store/topics/function.tsx","webpack:///./src/store/topics/type.ts"],"sourcesContent":["import React, { memo, RefObject } from \"react\";\nimport { styled, useMe } from \"@true/core\";\nimport { Avatar, UIButton, UIText, UITextStyle } from \"@true/ui\";\nimport { BottomSheetModal } from \"@gorhom/bottom-sheet\";\nimport { useAnimatedStyle, useSharedValue, useWorkletCallback } from \"react-native-reanimated\";\nimport { LayoutChangeEvent } from \"react-native\";\nimport { Icons } from \"@true/asset\";\n\nexport const AvatarWithSelectChannel = memo(function AvatarWithSelectChannel({\n                                                                               bottomSheetRef,\n                                                                               label,\n                                                                               typePost\n                                                                             }: {\n  bottomSheetRef: RefObject<BottomSheetModal>;\n  label: string;\n  typePost: string;\n}) {\n  const me = useMe();\n  const widthButton = useSharedValue(200);\n\n  const animatedStyled = useAnimatedStyle(\n    () => ({\n      width: widthButton.value\n    }),\n    []\n  );\n  const onViewLayout = useWorkletCallback(\n    (e: LayoutChangeEvent) => {\n      widthButton.value = e.nativeEvent.layout.width;\n    },\n    [widthButton]\n  );\n\n  return (\n    <SRow>\n      <Avatar size={48} userKey={me?.id || \"0\"} disableClick={true} />\n      <SView>\n        <UIText.BodyMedium500 onLayout={onViewLayout}>\n          {me?.name} create {typePost}\n        </UIText.BodyMedium500>\n        <SButtonSelect\n          style={animatedStyled}\n          title={label ? label : \"Select channel\"}\n          onPress={() => {\n            bottomSheetRef.current?.present();\n          }}>\n          <SExpandIcon source={Icons.Outlined.CHEVRON_DOWN_SMALL} />\n        </SButtonSelect>\n      </SView>\n    </SRow>\n  );\n});\n\nconst SRow = styled.View`\n  flex-direction: row;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst SView = styled.View`\n  justify-content: center;\n  gap: 4px;\n`;\nconst SButtonSelect = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_400,\n    color: p.theme.neutral2,\n    width: \"85%\"\n  },\n  textProps: {\n    numberOfLines: 1\n  }\n}))`\n  flex-direction: row;\n  border-radius: 40px;\n  border-width: 1px;\n  border-color: ${p => p.theme.neutral5};\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  padding-left: 16px;\n  padding-right: 8px;\n`;\n\nconst SExpandIcon = styled.Image`\n  width: 24px;\n  height: 24px;\n  tint-color: ${p => p.theme.neutral2};\n`;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {Icons} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={Icons.Outlined.CHEVRON_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  Fonts,\n  goBack,\n  styled,\n  ToastService,\n  useAutoToastError,\n  useBoolean,\n  useNavigationParams,\n} from '@true/core';\nimport Animated, {\n  runOnUI,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport {\n  AnimatedKeyboardAvoidingViewRef,\n  FullScreenWrapper,\n  MyKeyboardAvoidingView,\n  UIInput,\n  UIText,\n  UITextInput,\n} from '@true/ui';\nimport {AnimatedBottomSpace} from '@/components/AnimatedBottomSpace';\nimport {DiscardDialog} from '@/components/DiscardDialog';\nimport {useAsyncFn} from '@/hooks/useAsyncFn';\nimport {ICreateTopic, initCreateTopic} from '@/store/topics/type';\nimport {getTopics} from '@/store/topics';\nimport {requestCreateTopic, requestEditTopic} from '@/store/topics/function';\nimport {getChannels, useChannelsByQuery} from '@/store/channels';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {BottomSheetMenu} from '@/components/BottomSheets';\nimport {MenuItem} from '@/components/MenuItem';\nimport {AvatarWithSelectChannel} from '@/components/AvatarWithSelectChannel';\nimport {HeaderCreatePost} from '@/screens/CreatePostScreen/HeaderCreatePost';\nimport LoadingModal from '@/components/LoadingModal';\nimport {CheckboxWithText} from '@/components/CheckboxWithText';\n\nexport interface CreateTopicScreenParams {\n  id: number;\n}\n\nexport const CreateTopicScreen = memo(function CreateTopicScreen() {\n  const {id} = useNavigationParams<CreateTopicScreenParams>();\n  const ref = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useAnimatedRef<any>();\n  const params = useSharedValue<ICreateTopic>(initCreateTopic);\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n  const bottomSheetRef = useRef<BottomSheetModal | null>(null);\n  const [label, setLabel] = useState('');\n\n  const channelsOption = useChannelsByQuery('joined').map(id => ({\n    label: getChannels(id)?.name || 'Undefined channel',\n    value: id,\n  }));\n\n  const [{loading, error: createError}, onPressSubmit] =\n    useAsyncFn(async () => {\n      if (id !== -1) {\n        await requestEditTopic(params.value);\n      } else {\n        await requestCreateTopic(params.value);\n        ToastService.show('Create topic successfully');\n      }\n      goBack();\n    }, [id, params]);\n  useAutoToastError(createError);\n\n  const onGoBack = useCallback(() => {\n    goBack();\n  }, []);\n\n  useEffect(() => {\n    let _params = {\n      ...initCreateTopic,\n    };\n    if (id > 0) {\n      const topic = getTopics(id);\n      _params = {\n        channel_id: 0,\n        id: topic?.id,\n        content: topic?.content || '',\n        name: topic?.name || '',\n        'file[]': topic?.files,\n        followers: topic?.followers,\n        privacy: topic?.privacy,\n      };\n    }\n    params.value = _params;\n  }, [id, params]);\n\n  const animatedActiveBtn = useDerivedValue(() => {\n    return !!params.value.content;\n  }, []);\n\n  const renderItem = useCallback(\n    (item: any, index: number) => {\n      return (\n        <MenuItem\n          key={index}\n          title={item.label}\n          onPress={() => {\n            onChangeValue('channel_id', item.value);\n            setLabel(item.label);\n            bottomSheetRef.current?.dismiss();\n          }}\n        />\n      );\n    },\n    [bottomSheetRef],\n  );\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        'worklet';\n\n        params.value = {\n          ...params.value,\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n\n  return (\n    <FullScreenWrapper isGrey>\n      <MyKeyboardAvoidingView ref={ref} scrollRef={scrollRef}>\n        <LoadingModal isVisible={loading} />\n        <HeaderCreatePost\n          title={id === -1 ? 'Create a topic' : 'Edit topic'}\n          onPress={onPressSubmit}\n          active={animatedActiveBtn}\n          id={id}\n          loading={loading}\n          onGoBack={onGoBack}\n        />\n        <SScrollView ref={scrollRef} keyboardShouldPersistTaps={'handled'}>\n          <SContainer>\n            <SWhiteBox>\n              <AvatarWithSelectChannel\n                bottomSheetRef={bottomSheetRef}\n                label={label}\n                typePost={'an event'}\n              />\n              <UIInput.Text\n                title={'Title'}\n                keyName={'name'}\n                params={params}\n                placeholder={'---'}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n                required\n              />\n              <UITextInput\n                title={'Content'}\n                keyName={'content'}\n                params={params}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n              />\n              <UIInput.Attachment\n                title={'Attach files or Images'}\n                keyName={'file[]'}\n                params={params}\n                onChangeValue={onChangeValue}\n              />\n              <UIInput.UserPicker\n                title={'Followers'}\n                keyName={'followers'}\n                params={params}\n                type={'user'}\n              />\n            </SWhiteBox>\n            <SWhiteBox>\n              <UIText.HeaderMedium>Advanced settings</UIText.HeaderMedium>\n              <CheckboxWithText\n                params={params}\n                keyName={'privacy'}\n                title={'Only visible to selected followers'}\n              />\n              <AnimatedBottomSpace />\n            </SWhiteBox>\n          </SContainer>\n        </SScrollView>\n      </MyKeyboardAvoidingView>\n      <DiscardDialog\n        title={'Discard change'}\n        content={\n          'You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.'\n        }\n        visible={visibleDialog}\n        onClose={hideDialog}\n      />\n      <BottomSheetMenu\n        name={'channel'}\n        ref={bottomSheetRef}\n        items={channelsOption}\n        renderMenuItem={renderItem}\n        titleHeader={'Select channel'}\n      />\n    </FullScreenWrapper>\n  );\n});\n\nconst SContainer = styled(Animated.View)`\n  flex: 1;\n  gap: 8px;\n`;\n\nconst SWhiteBox = styled.View`\n  margin-top: 8px;\n  background-color: white;\n  padding: 12px 16px;\n  gap: 8px;\n`;\nconst SScrollView = styled.ScrollView`\n  flex: 1;\n`;\n","import {Core, Fetch} from '@true/core';\nimport {batch} from 'react-redux';\nimport {ICreateTopic, ITopic} from '@/store/topics/type';\nimport {setTopicsQuery, syncTopics} from '@/store/topics/index';\n\nexport const requestTopicsChannel = async (params: {path: string}) => {\n  const {data} = await Fetch.postWithToken<{\n    topics: ITopic[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/channel/update/topic?path=${params.path}`,\n  );\n  batch(() => {\n    if (data.topics.length) {\n      syncTopics(data.topics);\n      setTopicsQuery(prev => ({\n        ...prev,\n        [params.path]: data.topics.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.topics;\n};\nexport const requestMyTopicsChannel = async (params: {path: string}) => {\n  const {data} = await Fetch.postWithToken<{\n    topics: ITopic[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/channel/update/topic?path=${params.path}&created=mine`,\n  );\n  batch(() => {\n    if (data.topics.length) {\n      syncTopics(data.topics);\n      setTopicsQuery(prev => ({\n        ...prev,\n        [`created_${params.path}`]: data.topics.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.topics;\n};\nexport const requestCreateTopic = async (params: ICreateTopic) => {\n  const {data} = await Fetch.postWithToken<{topic: ITopic}>(\n    `@${Core.systemPath}/inside/ajax/api/topic/create`,\n    params,\n  );\n  batch(() => {\n    if (data.topic) {\n      syncTopics([data.topic]);\n      setTopicsQuery(prev => ({\n        ...prev,\n        ['all']: [data.topic.id.toString(), ...(prev['all'] || [])],\n      }));\n    }\n  });\n};\n\nexport const requestEditTopic = async (params: ICreateTopic) => {\n  const {data} = await Fetch.postWithToken<{topic: ITopic}>(\n    `@${Core.systemPath}/inside/ajax/api/topic/edit`,\n    params,\n  );\n  batch(() => {\n    if (data.topic) {\n      syncTopics([data.topic]);\n    }\n  });\n};\n","import {IReaction} from '@/store/updates/type';\n\nexport interface ITopic {\n  id: string;\n  name: string;\n  content: string;\n  metatype: 'topic';\n  username: string;\n  followers: number[];\n  channel_id: number;\n  since: number;\n  last_update: number;\n  user_id: number;\n  seens: number[];\n  link: string;\n  files: any[];\n  reactions: IReaction[];\n  hid: string;\n  token: string;\n  type: 'topics';\n  privacy: number;\n  stats: any;\n  liked: number;\n}\nexport interface ICreateTopic {\n  id?: string;\n  name: string;\n  content: string;\n  channel_id: number;\n  followers?: number[];\n  privacy?: number;\n  'file[]'?: any;\n}\nexport const initCreateTopic: ICreateTopic = {\n  name: '',\n  content: '',\n  channel_id: 0,\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_core","_ui","_reactNativeReanimated","_asset","_jsxRuntime","WeakMap","_worklet_8674385749251_init_data","code","_worklet_14097579138961_init_data","SRow","exports","memo","_ref","anonymous","bottomSheetRef","label","typePost","me","useMe","widthButton","useSharedValue","animatedStyled","useAnimatedStyle","width","value","__closure","__initData","__workletHash","onViewLayout","useWorkletCallback","nativeEvent","layout","jsxs","children","jsx","Avatar","size","userKey","id","disableClick","SView","UIText","BodyMedium500","onLayout","name","SButtonSelect","style","title","onPress","_bottomSheetRef$curre","current","present","SExpandIcon","source","Icons","Outlined","CHEVRON_DOWN_SMALL","styled","View","_taggedTemplateLiteralLoose2","UIButton","attrs","p","textStyle","assign","UITextStyle","body_medium_400","color","theme","neutral2","textProps","numberOfLines","neutral5","Image","_helper","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","HeaderWrapper","props","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","paddingTop","useTheme","active","onGoBack","loading","animatedBtnStyle","backgroundColor","interpolateColor","neutral3","primaryColor","animatedProps","useAnimatedProps","pointerEvents","FlexCenter","gap","CHEVRON_LEFT","goBack","HeaderLarge","SCreateBtn","Animated","neutral4","body_medium_500","_AnimatedBottomSpace","_DiscardDialog","_useAsyncFn3","_type","_topics","_function","_channels","_BottomSheets","_MenuItem","_AvatarWithSelectChannel","_HeaderCreatePost","_LoadingModal","_interopRequireDefault","_CheckboxWithText","_worklet_3835743809214_init_data","_worklet_690685769123_init_data","SContainer","useNavigationParams","ref","useRef","scrollRef","useAnimatedRef","params","initCreateTopic","_useBoolean","useBoolean","_useBoolean2","_slicedToArray2","visibleDialog","hideDialog","_useState","useState","_useState2","setLabel","channelsOption","useChannelsByQuery","map","_getChannels","getChannels","_useAsyncFn","useAsyncFn","_asyncToGenerator2","requestEditTopic","requestCreateTopic","ToastService","show","_useAsyncFn2","_useAsyncFn2$","createError","error","onPressSubmit","useAutoToastError","useCallback","useEffect","_params","topic","getTopics","channel_id","content","files","followers","privacy","animatedActiveBtn","useDerivedValue","renderItem","item","index","MenuItem","onChangeValue","dismiss","key","runOnUI","_key","_value","_defineProperty2","FullScreenWrapper","isGrey","MyKeyboardAvoidingView","isVisible","HeaderCreatePost","SScrollView","keyboardShouldPersistTaps","SWhiteBox","AvatarWithSelectChannel","UIInput","Text","keyName","placeholder","defaultValue","required","UITextInput","Attachment","UserPicker","type","HeaderMedium","CheckboxWithText","AnimatedBottomSpace","DiscardDialog","visible","onClose","BottomSheetMenu","items","renderMenuItem","titleHeader","ScrollView","_ref2","_ref3","_ref4","_reactRedux","_index","data","Fetch","postWithToken","Core","systemPath","path","batch","topics","length","syncTopics","setTopicsQuery","prev","toString","_x","apply","arguments","_x2","concat","_toConsumableArray2","_x3","_x4"],"sourceRoot":""}