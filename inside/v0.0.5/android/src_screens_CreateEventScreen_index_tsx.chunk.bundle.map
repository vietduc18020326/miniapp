{"version":3,"file":"src_screens_CreateEventScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AvatarWithSelectChannel/index.tsx","webpack:///./src/screens/CreateEventScreen/MyInputBackground.tsx","webpack:///./src/screens/CreateEventScreen/index.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx","webpack:///./src/store/events/function.tsx","webpack:///./src/store/events/type.ts"],"sourcesContent":["import React, { memo, RefObject } from \"react\";\nimport { styled, useMe } from \"@true/core\";\nimport { Avatar, UIButton, UIText, UITextStyle } from \"@true/ui\";\nimport { BottomSheetModal } from \"@gorhom/bottom-sheet\";\nimport { useAnimatedStyle, useSharedValue, useWorkletCallback } from \"react-native-reanimated\";\nimport { LayoutChangeEvent } from \"react-native\";\nimport { Icons } from \"@true/asset\";\n\nexport const AvatarWithSelectChannel = memo(function AvatarWithSelectChannel({\n                                                                               bottomSheetRef,\n                                                                               label,\n                                                                               typePost\n                                                                             }: {\n  bottomSheetRef: RefObject<BottomSheetModal>;\n  label: string;\n  typePost: string;\n}) {\n  const me = useMe();\n  const widthButton = useSharedValue(200);\n\n  const animatedStyled = useAnimatedStyle(\n    () => ({\n      width: widthButton.value\n    }),\n    []\n  );\n  const onViewLayout = useWorkletCallback(\n    (e: LayoutChangeEvent) => {\n      widthButton.value = e.nativeEvent.layout.width;\n    },\n    [widthButton]\n  );\n\n  return (\n    <SRow>\n      <Avatar size={48} userKey={me?.id || \"0\"} disableClick={true} />\n      <SView>\n        <UIText.BodyMedium500 onLayout={onViewLayout}>\n          {me?.name} create {typePost}\n        </UIText.BodyMedium500>\n        <SButtonSelect\n          style={animatedStyled}\n          title={label ? label : \"Select channel\"}\n          onPress={() => {\n            bottomSheetRef.current?.present();\n          }}>\n          <SExpandIcon source={Icons.Outlined.CHEVRON_DOWN_SMALL} />\n        </SButtonSelect>\n      </SView>\n    </SRow>\n  );\n});\n\nconst SRow = styled.View`\n  flex-direction: row;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst SView = styled.View`\n  justify-content: center;\n  gap: 4px;\n`;\nconst SButtonSelect = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_400,\n    color: p.theme.neutral2,\n    width: \"85%\"\n  },\n  textProps: {\n    numberOfLines: 1\n  }\n}))`\n  flex-direction: row;\n  border-radius: 40px;\n  border-width: 1px;\n  border-color: ${p => p.theme.neutral5};\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  padding-left: 16px;\n  padding-right: 8px;\n`;\n\nconst SExpandIcon = styled.Image`\n  width: 24px;\n  height: 24px;\n  tint-color: ${p => p.theme.neutral2};\n`;\n","import {memo, useCallback, useMemo, useState} from 'react';\nimport {Fonts, styled} from '@true/core';\nimport {openCameraRollScreen} from '@/utils';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {Icons} from '@true/asset';\nimport {BG_TEMPLATE} from '@/components/PostThumbnail/type';\nimport {getTemplateImage} from '@/services/BgTemplateService';\nimport {SharedValue} from 'react-native-reanimated';\n\ninterface MyInputLogoProps {\n  onSelectedImage: (image: ImageDTO) => void;\n  image: string | undefined;\n}\n\nexport const MyInputBackground = memo(function (props: MyInputLogoProps) {\n  const {onSelectedImage, image} = props;\n  const [imageUri, setImageUri] = useState('');\n\n  const onSelect = useCallback(\n    (image: ImageDTO) => {\n      setImageUri(image.url);\n      onSelectedImage(image);\n    },\n    [onSelectedImage],\n  );\n  const onPress = useCallback(() => {\n    openCameraRollScreen({\n      onSubmit: onSelect,\n    });\n  }, []);\n\n  const source = useMemo(() => {\n    const _image = imageUri ? imageUri : image;\n\n    return Object.values(BG_TEMPLATE).includes(_image as BG_TEMPLATE)\n      ? getTemplateImage(_image as BG_TEMPLATE)\n      : {uri: _image};\n  }, [imageUri, image]);\n\n  return (\n    <SContainer>\n      <STitle>Background</STitle>\n      <SBackgroundWrapper resizeMode={'cover'} source={source}>\n        {imageUri || image ? (\n          <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n            <STextAction hasImage={imageUri || image}>Change</STextAction>\n          </SButtonAction>\n        ) : (\n          <>\n            <SIconPhoto>\n              <SImageGallery source={Icons.Outlined.PHOTO} />\n              <SText>Upload your background</SText>\n            </SIconPhoto>\n            <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n              <STextAction>Choose file</STextAction>\n            </SButtonAction>\n          </>\n        )}\n      </SBackgroundWrapper>\n    </SContainer>\n  );\n});\nconst SContainer = styled.TouchableOpacity`\n  justify-content: center;\n  border-radius: 4px;\n  border: 1px solid #ebebeb;\n  padding: 0 16px 12px 16px;\n`;\n\nconst STitle = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n  margin-top: 8px;\n  margin-bottom: 4px;\n`;\n\nconst SBackgroundWrapper = styled.ImageBackground`\n  background-color: ${p => p.theme.neutral9};\n  min-height: 180px;\n  border-radius: 8px;\n`;\n\nconst SText = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n`;\n\nconst SButtonAction = styled.TouchableOpacity<{hasImage?: string}>`\n  width: 120px;\n  height: 40px;\n  padding: 4px 16px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: ${p => (p.hasImage ? 'rgba(0, 0, 0, 0.65)' : '#EAEAEA')};\n  margin-top: ${p => (p.hasImage ? 68 : 12)}px;\n  align-self: center;\n`;\nconst SIconPhoto = styled.View`\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n  margin-top: 36px;\n`;\nconst SImageGallery = styled.Image`\n  width: 32px;\n  height: 32px;\n  tint-color: ${p => p.theme.neutral2};\n`;\nconst STextAction = styled.Text<{hasImage?: string}>`\n  font-family: ${Fonts.Medium};\n  font-size: 14px;\n  line-height: 24px;\n  color: ${p => (p.hasImage ? p.theme.white : p.theme.neutral2)};\n`;\n","import {\n  AnimatedKeyboardAvoidingViewRef,\n  FullScreenWrapper,\n  MyKeyboardAvoidingView,\n  ScreenWrapper,\n  UIInput,\n  UITextInput,\n} from '@true/ui';\nimport React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  Fonts,\n  getUser,\n  goBack,\n  styled,\n  ToastService,\n  useAutoToastError,\n  useBoolean,\n  useNavigationParams,\n} from '@true/core';\nimport Animated, {\n  runOnUI,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport {ICreateEvent, initCreateEvent} from '@/store/events/type';\nimport {getChannels, useChannelsByQuery} from '@/store/channels';\nimport {AnimatedBottomSpace} from '@/components/AnimatedBottomSpace';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IBase64, uploadImage} from '@/utils/helper';\nimport {Buffer} from 'buffer';\nimport moment from 'moment';\nimport {useAsyncFn} from '@/hooks/useAsyncFn';\nimport {DiscardDialog} from '@/components/DiscardDialog';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {MenuItem} from '@/components/MenuItem';\nimport {BottomSheetMenu} from '@/components/BottomSheets';\nimport {requestCreateEvent, requestEditEvent} from '@/store/events/function';\nimport {MyInputBackground} from '@/screens/CreateEventScreen/MyInputBackground';\nimport {AvatarWithSelectChannel} from '@/components/AvatarWithSelectChannel';\nimport {useUpdates} from '@/store/updates';\nimport {HeaderCreatePost} from '@/screens/CreatePostScreen/HeaderCreatePost';\nimport {ETypeUpdate} from '@/store/updates/type';\nimport {CheckboxWithText} from '@/components/CheckboxWithText';\nimport LoadingModal from '@/components/LoadingModal';\n\nexport interface CreateEventScreenParams {\n  id: number;\n}\n\nexport const CreateEventScreen = memo(function () {\n  const {id} = useNavigationParams<CreateEventScreenParams>();\n\n  const params = useSharedValue<ICreateEvent>(initCreateEvent);\n  const ref = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useAnimatedRef<any>();\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n  const bottomSheetRef = useRef<BottomSheetModal | null>(null);\n  const [label, setLabel] = useState('');\n  const event = useUpdates(id)?.attachment;\n  const imageRef = useRef<ImageDTO | null>(null);\n\n  const channelsOption = useChannelsByQuery('joined').map(id => ({\n    label: getChannels(id)?.name || 'Undefined channel',\n    value: id,\n  }));\n\n  const onSelectBackground = useCallback(async (image: ImageDTO) => {\n    imageRef.current = image;\n    onChangeValue('cover-bg', image.url);\n  }, []);\n\n  const [{loading, error: createError}, onPressSubmit] =\n    useAsyncFn(async () => {\n      let imageUrl = params.value['cover-bg'];\n      if (imageRef.current) {\n        imageUrl = await uploadImage(imageRef.current);\n      }\n\n      const _params = {\n        ...params.value,\n        'cover-bg': imageUrl,\n      };\n      if (id !== -1) {\n        await requestEditEvent(_params, id);\n      } else {\n        await requestCreateEvent(_params);\n        ToastService.show('Create event successfully');\n      }\n      goBack();\n    }, [id, imageRef.current, params]);\n  useAutoToastError(createError);\n\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        'worklet';\n\n        params.value = {\n          ...params.value,\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n\n  const onGoBack = useCallback(() => {\n    console.log('ss');\n    goBack();\n  }, []);\n\n  useEffect(() => {\n    let _params = {\n      ...initCreateEvent,\n    };\n    if (event) {\n      const coverImage: IBase64 = JSON.parse(\n        Buffer.from(\n          event?.cover ||\n            'eyJ0eXBlIjoiIiwiY29sb3IiOiIiLCJvcGFjaXR5IjowLCJwZXJjZW50IjoxMDAsImltYWdlIjoiIiwidGV4dHMiOltdfQ',\n          'base64',\n        ).toString('utf-8') || '',\n      );\n      const listGuest = event?.followers\n        .map((id: any) => `@${getUser(id)?.username}`)\n        .join(' ');\n      const listOwners = event?.owners\n        .map((id: any) => `@${getUser(id)?.username}`)\n        .join(' ');\n      setLabel(getChannels(event?.channel_id)?.name || '');\n      _params = {\n        id: event?.id,\n        address: event?.address || '',\n        channel_id: event?.channel_id || 0,\n        content: event?.content,\n        'cover-bg': coverImage.image,\n        guests: listGuest,\n        name: event?.name || '',\n        'file[]': event?.files || [],\n        owners: listOwners,\n        'time-date': moment(event?.time * 1000).format('DD/MM/YYYY'),\n        'time-time': moment(event?.time * 1000).format('hh:mm'),\n      };\n    }\n    params.value = _params;\n  }, [event]);\n\n  const animatedActiveBtn = useDerivedValue(() => {\n    return !!params.value.channel_id;\n  }, []);\n\n  const renderItem = useCallback(\n    (item: any, index: number) => {\n      return (\n        <MenuItem\n          key={index}\n          title={item.label}\n          onPress={() => {\n            onChangeValue('channel_id', item.value);\n            setLabel(item.label);\n            bottomSheetRef.current?.dismiss();\n          }}\n        />\n      );\n    },\n    [bottomSheetRef],\n  );\n\n  return (\n    <FullScreenWrapper isGrey>\n      <MyKeyboardAvoidingView ref={ref} scrollRef={scrollRef}>\n        <HeaderCreatePost\n          onPress={onPressSubmit}\n          title={'Create an event'}\n          active={animatedActiveBtn}\n          id={id}\n          loading={loading}\n          onGoBack={onGoBack}\n        />\n        <LoadingModal isVisible={loading} />\n        <SScrollView ref={scrollRef} keyboardShouldPersistTaps={'handled'}>\n          <SContainer>\n            <SField>\n              <STitle>General information</STitle>\n              <AvatarWithSelectChannel\n                bottomSheetRef={bottomSheetRef}\n                label={label}\n                typePost={'an event'}\n              />\n              <CheckboxWithText\n                params={params}\n                keyName={'privacy'}\n                title={'Only attendees can view this event'}\n              />\n              <MyInputBackground\n                onSelectedImage={onSelectBackground}\n                image={params.value['cover-bg']}\n              />\n              <UIInput.Text\n                title={'Title'}\n                keyName={'name'}\n                params={params}\n                placeholder={'---'}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n                required\n              />\n              {/*<SWrapperInputDate>*/}\n              {/*  <UIInput.DateTime*/}\n              {/*    title={'Date'}*/}\n              {/*    keyName={'time-date'}*/}\n              {/*    control={control}*/}\n              {/*    placeholder={'---'}*/}\n              {/*    defaultValue={''}*/}\n              {/*    required*/}\n              {/*    isDateTimeInput*/}\n              {/*    modeDateTime={'date'}*/}\n              {/*    style={{flex: 1}}*/}\n              {/*  />*/}\n              {/*  <CustomInput*/}\n              {/*    title={'Time'}*/}\n              {/*    keyName={'time-time'}*/}\n              {/*    control={control}*/}\n              {/*    placeholder={'---'}*/}\n              {/*    defaultValue={''}*/}\n              {/*    required*/}\n              {/*    isDateTimeInput*/}\n              {/*    modeDateTime={'time'}*/}\n              {/*    style={{flex: 1, marginLeft: 12}}*/}\n              {/*  />*/}\n              {/*</SWrapperInputDate>*/}\n              <UIInput.Text\n                title={'Location'}\n                keyName={'address'}\n                params={params}\n                placeholder={'---'}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n              />\n              <UITextInput\n                title={'Content'}\n                keyName={'content'}\n                params={params}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n              />\n              <UIInput.Attachment\n                title={'Attach files or Images'}\n                keyName={'file[]'}\n                params={params}\n                onChangeValue={onChangeValue}\n              />\n            </SField>\n            <SField>\n              <STitle>Attendees</STitle>\n              <UIInput.UserPicker\n                title={'Managers'}\n                keyName={'owners'}\n                params={params}\n                multiple\n                onChangeValue={onChangeValue}\n                type={'user'}\n              />\n              <UIInput.UserPicker\n                title={'Invited guests'}\n                type={'user'}\n                keyName={'guests'}\n                multiple\n                params={params}\n                onChangeValue={onChangeValue}\n              />\n              <CheckboxWithText\n                params={params}\n                keyName={'added_by_guests'}\n                title={'Allow guests to add more guests'}\n              />\n            </SField>\n            <AnimatedBottomSpace />\n          </SContainer>\n        </SScrollView>\n        <DiscardDialog\n          title={'Discard change'}\n          content={\n            'You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.'\n          }\n          visible={visibleDialog}\n          onClose={hideDialog}\n        />\n        <BottomSheetMenu\n          name={'channel'}\n          ref={bottomSheetRef}\n          items={channelsOption}\n          renderMenuItem={renderItem}\n          titleHeader={'Select channel'}\n        />\n      </MyKeyboardAvoidingView>\n    </FullScreenWrapper>\n  );\n});\n\nconst SContainer = styled(Animated.View)`\n  flex: 1;\n  padding: 12px 16px;\n`;\n\nconst SField = styled.View`\n  background-color: ${p => p.theme.white};\n  gap: 12px;\n`;\n\nconst STitle = styled.Text`\n  font-family: ${Fonts.Medium};\n  font-size: 16px;\n  line-height: 24px;\n  color: ${p => p.theme.neutral1};\n`;\n\nconst SScrollView = styled.ScrollView`\n  flex: 1;\n  background-color: white;\n  margin-top: 8px;\n`;\nexport default CreateEventScreen;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {Icons} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={Icons.Outlined.CHEVRON_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n","import {Core, Fetch, ToastService} from '@true/core';\nimport {ICreateEvent, IEvent} from '@/store/events/type';\nimport {batch} from 'react-redux';\nimport {setEventsQuery, syncEvents} from '@/store/events/index';\nimport {getUpdates, syncUpdates} from '@/store/updates';\n\nexport const requestPublicEvents = async () => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(`@${Core.systemPath}/inside/ajax/api/event/gets`);\n\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        ['all']: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\n\nexport const requestJoinedEvents = async () => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(`@${Core.systemPath}/inside/ajax/api/event/joined`);\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        ['joined']: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\n\nexport const requestEvent = async (params: {event_id: string | number}) => {\n  const {data} = await Fetch.postWithToken<{\n    event: IEvent;\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/event/get?event_id=${params.event_id}`,\n  );\n\n  batch(() => {\n    if (data.event) {\n      syncEvents([data.event]);\n    }\n  });\n  return data.event;\n};\n\nexport const requestCreateEvent = async (params: ICreateEvent) => {\n  const {data} = await Fetch.postWithToken<{\n    event: IEvent;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/create`, params);\n  batch(() => {\n    if (data.event) {\n      syncEvents([data.event]);\n      setEventsQuery(prev => ({\n        ...prev,\n        ['all']: [data.event.id.toString(), ...(prev['all'] || [])],\n      }));\n    }\n  });\n};\n\nexport const requestEditEvent = async (\n  params: ICreateEvent,\n  updateId?: number,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    event: IEvent;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/edit`, params);\n  batch(() => {\n    if (data.event) {\n      if (updateId && updateId > 0) {\n        const update = getUpdates(updateId);\n        update &&\n          syncUpdates([\n            {\n              ...update,\n              attachment: data.event as any,\n            },\n          ]);\n      }\n      syncEvents([data.event]);\n    }\n  });\n};\n\nexport const requestRemoveEvent = async (params: {id: number}) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/remove`, params);\n  batch(() => {\n    if (data.message === 'ok') {\n      setEventsQuery(prev => ({\n        ...prev,\n        ['all']: (prev['all'] || []).filter(\n          item => item !== params.id.toString(),\n        ),\n      }));\n    }\n  });\n};\n\nexport const requestAttendEvent = async (params: {\n  id: string | number;\n  data: IEvent;\n  myId: string | number;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/attendee/attend`, params);\n  if (data.message == 'ok') {\n    syncEvents([\n      {\n        ...params.data,\n        attendees: [\n          ...new Set([...params.data.attendees, Number(params.myId)]),\n        ],\n      },\n    ]);\n    ToastService.show('Attend event successfully');\n  }\n};\n\nexport const requestInviteEvent = async (params: {\n  id: string | number;\n  data?: IEvent;\n  channel_id: string | number;\n  ids: number[];\n  guests: string;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/attendee/invite`, params);\n  if (data.message == 'ok' && params.data) {\n    syncEvents([\n      {\n        ...params.data,\n        attendees: [...new Set([...params.data.attendees, ...params.ids])],\n      },\n    ]);\n    ToastService.show('Invite event successfully');\n  }\n};\nexport const requestEventsChannel = async (params: {\n  path: string;\n  q?: string;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/channel/update/event?path=${\n      params.path\n    }${params?.q ? '&q=' + params.q : ''}`,\n  );\n  console.log('asd');\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        [params.path]: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\nexport const requestEventsJoinedChannel = async (params: {\n  path: string;\n  q?: string;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/channel/update/event?path=${\n      params.path\n    }&state=joined${params?.q ? '&q=' + params.q : ''}`,\n  );\n  batch(() => {\n    if (data.events.length) {\n      // syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        [`joined_${params.path}`]: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\n\nexport const requestEventsProfile = async (params: {username: string}) => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/profile/get?tail=events&username=${params.username}`,\n  );\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        [params.username]: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return;\n};\n","import {IReaction} from '@/store/updates/type';\n\nexport interface IEvent {\n  id: number;\n  name: string;\n  content: string;\n  cover: any;\n  time: number;\n  address: string;\n  user_id: number;\n  hid: string;\n  token: string;\n  type: string;\n  reactions: IReaction[];\n  files: any[];\n  link: string;\n  followers: number[];\n  attendees: number[];\n  invites: number[];\n  owners: string[];\n  update_id: number;\n  channel_id: number;\n  since: number;\n  data: any;\n  privacy: number;\n  config: any;\n  stats: any;\n  acl: any;\n}\nexport interface ICreateEvent {\n  id?: number;\n  channel_id: number;\n  guests?: string;\n  owners?: string;\n  content?: string;\n  name: string;\n  'time-time': string;\n  address?: string;\n  privacy?: 1 | 0;\n  added_by_guests?: 1 | 0;\n  'file[]'?: any; //base64\n  'time-date': string;\n  'cover-color'?: string;\n  'cover-type'?: 'image' | 'template' | '';\n  'cover-bg'?: string;\n  'cover-opacity'?: number;\n  'cover-percent'?: number;\n}\n\nexport const initCreateEvent: ICreateEvent = {\n  channel_id: 0,\n  name: '',\n  'time-time': '',\n  'time-date': '',\n  owners: '',\n  guests: '',\n  added_by_guests: 1,\n  privacy: 0,\n  'cover-type': 'image',\n  'cover-bg': '',\n  'cover-opacity': 1,\n  'cover-percent': 100,\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_core","_ui","_reactNativeReanimated","_asset","_jsxRuntime","WeakMap","_worklet_8674385749251_init_data","code","_worklet_14097579138961_init_data","SRow","exports","memo","_ref","anonymous","bottomSheetRef","label","typePost","me","useMe","widthButton","useSharedValue","animatedStyled","useAnimatedStyle","width","value","__closure","__initData","__workletHash","onViewLayout","useWorkletCallback","nativeEvent","layout","jsxs","children","jsx","Avatar","size","userKey","id","disableClick","SView","UIText","BodyMedium500","onLayout","name","SButtonSelect","style","title","onPress","_bottomSheetRef$curre","current","present","SExpandIcon","source","Icons","Outlined","CHEVRON_DOWN_SMALL","styled","View","_taggedTemplateLiteralLoose2","UIButton","attrs","p","textStyle","assign","UITextStyle","body_medium_400","color","theme","neutral2","textProps","numberOfLines","neutral5","Image","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_utils","_type","_BgTemplateService","SContainer","props","onSelectedImage","image","_useState","useState","_useState2","_slicedToArray2","imageUri","setImageUri","onSelect","useCallback","url","openCameraRollScreen","onSubmit","useMemo","_image","values","BG_TEMPLATE","includes","getTemplateImage","uri","STitle","SBackgroundWrapper","resizeMode","SButtonAction","hasImage","STextAction","Fragment","SIconPhoto","SImageGallery","PHOTO","SText","TouchableOpacity","Text","Fonts","Regular","ImageBackground","neutral9","Medium","white","_channels","_AnimatedBottomSpace","_helper","_buffer","_moment","_interopRequireDefault","_useAsyncFn3","_DiscardDialog","_MenuItem","_BottomSheets","_function","_MyInputBackground","_AvatarWithSelectChannel","_updates","_HeaderCreatePost","_CheckboxWithText","_LoadingModal","_worklet_690685769123_init_data","_worklet_15277953691302_init_data","CreateEventScreen","_useUpdates","useNavigationParams","params","initCreateEvent","ref","useRef","scrollRef","useAnimatedRef","_useBoolean","useBoolean","_useBoolean2","visibleDialog","hideDialog","setLabel","event","useUpdates","attachment","imageRef","channelsOption","useChannelsByQuery","map","_getChannels","getChannels","onSelectBackground","_asyncToGenerator2","onChangeValue","_x","apply","arguments","_useAsyncFn","useAsyncFn","imageUrl","uploadImage","_params","requestEditEvent","requestCreateEvent","ToastService","show","goBack","_useAsyncFn2","_useAsyncFn2$","loading","createError","error","onPressSubmit","useAutoToastError","key","runOnUI","_key","_value","_defineProperty2","onGoBack","console","log","useEffect","_getChannels2","coverImage","JSON","parse","Buffer","from","cover","toString","listGuest","followers","_getUser","getUser","username","join","listOwners","owners","_getUser2","channel_id","address","content","guests","files","moment","time","format","animatedActiveBtn","useDerivedValue","renderItem","item","index","MenuItem","dismiss","FullScreenWrapper","isGrey","MyKeyboardAvoidingView","HeaderCreatePost","active","isVisible","SScrollView","keyboardShouldPersistTaps","SField","AvatarWithSelectChannel","CheckboxWithText","keyName","MyInputBackground","UIInput","placeholder","defaultValue","required","UITextInput","Attachment","UserPicker","multiple","type","AnimatedBottomSpace","DiscardDialog","visible","onClose","BottomSheetMenu","items","renderMenuItem","titleHeader","Animated","neutral1","ScrollView","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","HeaderWrapper","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","paddingTop","useTheme","animatedBtnStyle","backgroundColor","interpolateColor","neutral3","primaryColor","animatedProps","useAnimatedProps","pointerEvents","FlexCenter","gap","CHEVRON_LEFT","HeaderLarge","SCreateBtn","neutral4","body_medium_500","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_reactRedux","_index","data","Fetch","postWithToken","Core","systemPath","batch","events","length","syncEvents","setEventsQuery","prev","event_id","concat","_toConsumableArray2","_x2","updateId","update","getUpdates","syncUpdates","_x3","_x4","message","filter","_x5","attendees","Set","Number","myId","_x6","ids","_x7","path","q","_x8","_x9","_x10","added_by_guests","privacy"],"sourceRoot":""}