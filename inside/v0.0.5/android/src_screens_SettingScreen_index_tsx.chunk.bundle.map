{"version":3,"file":"src_screens_SettingScreen_index_tsx.chunk.bundle","mappings":"oNAGkDA,EAAAC,EAAAC,EAAAC,EAAAC,E,cAHlDC,EAAAC,EAAA,MACAC,EAAAD,EAAA,OAEAE,EAAAF,EAAA,OAAkDG,EAAAH,EAAA,OAoB5CI,GAbkBC,EAAAA,aAAG,EAAAC,EAAAA,OAAK,SAAUC,GACxC,IAAOC,EAAkBD,EAAlBC,MAAOC,EAAWF,EAAXE,QACd,OACE,EAAAN,EAAAO,KAACN,EAAU,CAACK,QAASA,EAAQE,UAC3B,EAAAR,EAAAS,MAACC,EAAa,CAAAF,SAAA,EACZ,EAAAR,EAAAO,KAACI,EAAS,CAAAH,SAAEH,KACZ,EAAAL,EAAAO,KAACK,EAAU,CAAAJ,UACT,EAAAR,EAAAO,KAACM,EAAW,CAACC,OAAQC,EAAAA,6BAK/B,IACmBC,EAAAA,OAAOC,iBAAgB1B,IAAAA,GAAA,EAAA2B,EAAAC,SAAA,wGAOpCR,EAAYK,EAAAA,OAAOI,KAAI5B,IAAAA,GAAA,EAAA0B,EAAAC,SAAA,oHACZE,EAAAA,MAAMC,SAOjBV,EAAaI,EAAAA,OAAOO,KAAI9B,IAAAA,GAAA,EAAAyB,EAAAC,SAAA,6HAOxBT,EAAgBM,EAAAA,OAAOO,KAAI7B,IAAAA,GAAA,EAAAwB,EAAAC,SAAA,gMAU3BN,EAAcG,EAAAA,OAAOQ,MAAK7B,IAAAA,GAAA,EAAAuB,EAAAC,SAAA,0C,mHCzCY5B,EAAAC,EAAAC,EAAAC,E,cAd5C+B,EAAA5B,EAAA,OACAC,EAa4C,SAAA4B,EAAAC,GAAA,IAAAA,GAAAD,GAAAA,EAAAE,WAAA,OAAAF,EAAA,UAAAA,GAAA,iBAAAA,GAAA,mBAAAA,EAAA,OAAAP,QAAAO,GAAA,IAAAG,EAAAC,EAAAH,GAAA,GAAAE,GAAAA,EAAAE,IAAAL,GAAA,OAAAG,EAAAG,IAAAN,GAAA,IAAAO,EAAA,CAAAC,UAAA,MAAAC,EAAAC,OAAAC,gBAAAD,OAAAE,yBAAA,QAAAC,KAAAb,EAAA,eAAAa,GAAAH,OAAAI,UAAAC,eAAAC,KAAAhB,EAAAa,GAAA,KAAAI,EAAAR,EAAAC,OAAAE,yBAAAZ,EAAAa,GAAA,KAAAI,IAAAA,EAAAX,KAAAW,EAAAC,KAAAR,OAAAC,eAAAJ,EAAAM,EAAAI,GAAAV,EAAAM,GAAAb,EAAAa,EAAA,QAAAN,EAAAd,QAAAO,EAAAG,GAAAA,EAAAe,IAAAlB,EAAAO,GAAAA,CAAA,CAb5CY,CAAAhD,EAAA,QACAD,EAAAC,EAAA,MACAiD,EAAAjD,EAAA,OACAE,EAAAF,EAAA,OACAkD,EAAAlD,EAAA,OAOAmD,EAAAnD,EAAA,OACAoD,EAAApD,EAAA,OACAqD,EAAArD,EAAA,OAA4CG,EAAAH,EAAA,gBAAAiC,EAAAJ,GAAA,sBAAAyB,QAAA,gBAAAxB,EAAA,IAAAwB,QAAAtB,EAAA,IAAAsB,QAAA,OAAArB,EAAA,SAAAJ,GAAA,OAAAA,EAAAG,EAAAF,CAAA,GAAAD,EAAA,CAElBxB,EAAAA,eAAG,EAAAC,EAAAA,OAAK,WAEhC,OACE,EAAAH,EAAAO,KAACkB,EAAA2B,cAAa,CAACC,QAAQ,EAAK7C,UAC1B,EAAAR,EAAAS,MAACR,EAAU,CAAAO,SAAA,EACT,EAAAR,EAAAO,KAACyC,EAAAM,aAAY,CAACjD,MAAO,WAAYkD,UAAU,EAAOC,QAAM,KACxD,EAAAxD,EAAAS,MAACqC,EAAAW,WAAU,CAACC,SAAS,EAAMlD,SAAA,EACzB,EAAAR,EAAAS,MAACkD,EAAgB,CAAAnD,SAAA,EACf,EAAAR,EAAAS,MAACyC,EAAAU,WAAU,CAACC,MAAO,CAAEC,kBAAmB,GAAIC,gBAAiB,IAAKvD,SAAA,EAChE,EAAAR,EAAAO,KAACyD,EAAM,CAAClD,OAAQmD,EAAAA,iBAChB,EAAAjE,EAAAO,KAAC2D,EAAY,CAAA1D,SAAC,gBAEhB,EAAAR,EAAAO,KAAC0C,EAAAkB,YAAW,CACV9D,MAAO,UACPC,QAAS8D,EAAAA,+BAEX,EAAApE,EAAAO,KAAC0C,EAAAkB,YAAW,CACV9D,MAAO,WACPC,QAAS+D,EAAAA,qCAGb,EAAArE,EAAAS,MAACkD,EAAgB,CAAAnD,SAAA,EACf,EAAAR,EAAAS,MAACyC,EAAAU,WAAU,CAACC,MAAO,CAAEC,kBAAmB,GAAIC,gBAAiB,IAAKvD,SAAA,EAChE,EAAAR,EAAAO,KAACyD,EAAM,CAAClD,OAAQwD,EAAAA,MAAMC,OAAOC,gBAC7B,EAAAxE,EAAAO,KAAC2D,EAAY,CAAA1D,SAAC,oBAEhB,EAAAR,EAAAO,KAAC0C,EAAAkB,YAAW,CACV9D,MAAO,sBACPC,QAASmE,EAAAA,+BAEX,EAAAzE,EAAAO,KAAC0C,EAAAkB,YAAW,CACV9D,MAAO,cACPC,QAASoE,EAAAA,gCAEX,EAAA1E,EAAAO,KAAC0C,EAAAkB,YAAW,CACV9D,MAAO,cACPC,QAASqE,EAAAA,uCAOvB,IA3CO,IA4CD1E,EAAae,EAAAA,OAAOO,KAAIhC,IAAAA,GAAA,EAAA2B,EAAAC,SAAA,sBAIxBwC,EAAmB3C,EAAAA,OAAOO,KAAI/B,IAAAA,GAAA,EAAA0B,EAAAC,SAAA,6DAI9B+C,EAAelD,EAAAA,OAAOI,KAAI3B,IAAAA,GAAA,EAAAyB,EAAAC,SAAA,wIACfE,EAAAA,MAAMC,SAQjB0C,EAAShD,EAAAA,OAAOQ,MAAK9B,IAAAA,GAAA,EAAAwB,EAAAC,SAAA,0C","sources":["webpack:///./src/screens/SettingScreen/ItemSetting.tsx","webpack:///./src/screens/SettingScreen/index.tsx"],"sourcesContent":["import {Fonts} from '@true/core';\nimport {memo} from 'react';\nimport {styled} from '@true/core';\nimport { IC_OUTLINED_BACKWARD} from '@true/asset';\n\ninterface ItemMenuProps {\n  title: string;\n  onPress: () => void;\n}\n\nexport const ItemSetting = memo(function (props: ItemMenuProps) {\n  const {title, onPress} = props;\n  return (\n    <SContainer onPress={onPress}>\n      <SecondSection>\n        <STextItem>{title}</STextItem>\n        <SIconArrow>\n          <SArrowImage source={IC_OUTLINED_BACKWARD} />\n        </SIconArrow>\n      </SecondSection>\n    </SContainer>\n  );\n});\nconst SContainer = styled.TouchableOpacity`\n  flex-direction: row;\n  padding-top: 16px;\n  padding-left: 16px;\n  padding-right: 16px;\n`;\n\nconst STextItem = styled.Text`\n  font-family: ${Fonts.Regular};\n  \n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  color: #22313f;\n`;\nconst SIconArrow = styled.View`\n  width: 16px;\n  height: 16px;\n  align-items: center;\n  justify-content: center;\n  transform: rotate(180deg);\n`;\nconst SecondSection = styled.View`\n  flex: 1;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  padding-bottom: 16px;\n  border-bottom-width: 1px;\n  border-bottom-color: #ebebeb;\n`;\n\nconst SArrowImage = styled.Image`\n  width: 16px;\n  height: 16px;\n`;\n","import { ScreenWrapper } from \"@true/ui\";\nimport React, { memo } from \"react\";\nimport { Fonts, styled } from \"@true/core\";\nimport { ScrollView } from \"react-native\";\nimport { IC_FILLED_HUB, Icons } from \"@true/asset\";\nimport {\n  navigateToBoardLetterSetting,\n  navigateToCoreValueSetting,\n  navigateToEditCompanyScreen,\n  navigateToPermissionSetting,\n  navigateToSettingChannelScreen\n} from \"@/utils\";\nimport { CustomHeader } from \"@/components/CustomHeader\";\nimport { ItemSetting } from \"@/screens/SettingScreen/ItemSetting\";\nimport { FlexCenter } from \"@/utils/helper\";\n\nexport const SettingScreen = memo(function SettingScreen() {\n\n  return (\n    <ScreenWrapper isGrey={true}>\n      <SContainer>\n        <CustomHeader title={\"Settings\"} isSearch={false} isBack />\n        <ScrollView bounces={false}>\n          <SWhiteBackground>\n            <FlexCenter style={{ paddingHorizontal: 16, paddingVertical: 16 }}>\n              <SImage source={IC_FILLED_HUB} />\n              <STextSection>Channel</STextSection>\n            </FlexCenter>\n            <ItemSetting\n              title={\"Company\"}\n              onPress={navigateToEditCompanyScreen}\n            />\n            <ItemSetting\n              title={\"Channels\"}\n              onPress={navigateToSettingChannelScreen}\n            />\n          </SWhiteBackground>\n          <SWhiteBackground>\n            <FlexCenter style={{ paddingHorizontal: 16, paddingVertical: 16 }}>\n              <SImage source={Icons.Filled.SHIELD_CHECK} />\n              <STextSection>Permissions</STextSection>\n            </FlexCenter>\n            <ItemSetting\n              title={\"Channel permissions\"}\n              onPress={navigateToPermissionSetting}\n            />\n            <ItemSetting\n              title={\"CEO letters\"}\n              onPress={navigateToBoardLetterSetting}\n            />\n            <ItemSetting\n              title={\"Core values\"}\n              onPress={navigateToCoreValueSetting}\n            />\n          </SWhiteBackground>\n        </ScrollView>\n      </SContainer>\n    </ScreenWrapper>\n  );\n});\nconst SContainer = styled.View`\n  flex: 1;\n`;\n\nconst SWhiteBackground = styled.View`\n  background-color: white;\n  margin-bottom: 8px;\n`;\nconst STextSection = styled.Text`\n  font-family: ${Fonts.Regular};\n\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  color: #22313f;\n  margin-left: 12px;\n`;\nconst SImage = styled.Image`\n  width: 24px;\n  height: 24px;\n`;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_core","require","_react","_asset","_jsxRuntime","SContainer","exports","memo","props","title","onPress","jsx","children","jsxs","SecondSection","STextItem","SIconArrow","SArrowImage","source","IC_OUTLINED_BACKWARD","styled","TouchableOpacity","_taggedTemplateLiteralLoose2","default","Text","Fonts","Regular","View","Image","_ui","e","r","__esModule","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","_reactNative","_utils","_CustomHeader","_ItemSetting","_helper","WeakMap","ScreenWrapper","isGrey","CustomHeader","isSearch","isBack","ScrollView","bounces","SWhiteBackground","FlexCenter","style","paddingHorizontal","paddingVertical","SImage","IC_FILLED_HUB","STextSection","ItemSetting","navigateToEditCompanyScreen","navigateToSettingChannelScreen","Icons","Filled","SHIELD_CHECK","navigateToPermissionSetting","navigateToBoardLetterSetting","navigateToCoreValueSetting"],"sourceRoot":""}