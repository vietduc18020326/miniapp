{"version":3,"file":"src_screens_CreatePostScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AvatarWithSelectChannel/index.tsx","webpack:///./src/screens/CreateEventScreen/MyInputBackground.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx","webpack:///./src/screens/CreatePostScreen/index.tsx"],"sourcesContent":["import React, { memo, RefObject } from \"react\";\nimport { styled, useMe } from \"@true/core\";\nimport { Avatar, UIButton, UIText, UITextStyle } from \"@true/ui\";\nimport { BottomSheetModal } from \"@gorhom/bottom-sheet\";\nimport { useAnimatedStyle, useSharedValue, useWorkletCallback } from \"react-native-reanimated\";\nimport { LayoutChangeEvent } from \"react-native\";\nimport { Icons } from \"@true/asset\";\n\nexport const AvatarWithSelectChannel = memo(function AvatarWithSelectChannel({\n                                                                               bottomSheetRef,\n                                                                               label,\n                                                                               typePost\n                                                                             }: {\n  bottomSheetRef: RefObject<BottomSheetModal>;\n  label: string;\n  typePost: string;\n}) {\n  const me = useMe();\n  const widthButton = useSharedValue(200);\n\n  const animatedStyled = useAnimatedStyle(\n    () => ({\n      width: widthButton.value\n    }),\n    []\n  );\n  const onViewLayout = useWorkletCallback(\n    (e: LayoutChangeEvent) => {\n      widthButton.value = e.nativeEvent.layout.width;\n    },\n    [widthButton]\n  );\n\n  return (\n    <SRow>\n      <Avatar size={48} userKey={me?.id || \"0\"} disableClick={true} />\n      <SView>\n        <UIText.BodyMedium500 onLayout={onViewLayout}>\n          {me?.name} create {typePost}\n        </UIText.BodyMedium500>\n        <SButtonSelect\n          style={animatedStyled}\n          title={label ? label : \"Select channel\"}\n          onPress={() => {\n            bottomSheetRef.current?.present();\n          }}>\n          <SExpandIcon source={Icons.Outlined.CHEVRON_DOWN_SMALL} />\n        </SButtonSelect>\n      </SView>\n    </SRow>\n  );\n});\n\nconst SRow = styled.View`\n  flex-direction: row;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst SView = styled.View`\n  justify-content: center;\n  gap: 4px;\n`;\nconst SButtonSelect = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_400,\n    color: p.theme.neutral2,\n    width: \"85%\"\n  },\n  textProps: {\n    numberOfLines: 1\n  }\n}))`\n  flex-direction: row;\n  border-radius: 40px;\n  border-width: 1px;\n  border-color: ${p => p.theme.neutral5};\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  padding-left: 16px;\n  padding-right: 8px;\n`;\n\nconst SExpandIcon = styled.Image`\n  width: 24px;\n  height: 24px;\n  tint-color: ${p => p.theme.neutral2};\n`;\n","import {memo, useCallback, useMemo, useState} from 'react';\nimport {Fonts, styled} from '@true/core';\nimport {openCameraRollScreen} from '@/utils';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {Icons} from '@true/asset';\nimport {BG_TEMPLATE} from '@/components/PostThumbnail/type';\nimport {getTemplateImage} from '@/services/BgTemplateService';\nimport {SharedValue} from 'react-native-reanimated';\n\ninterface MyInputLogoProps {\n  onSelectedImage: (image: ImageDTO) => void;\n  image: string | undefined;\n}\n\nexport const MyInputBackground = memo(function (props: MyInputLogoProps) {\n  const {onSelectedImage, image} = props;\n  const [imageUri, setImageUri] = useState('');\n\n  const onSelect = useCallback(\n    (image: ImageDTO) => {\n      setImageUri(image.url);\n      onSelectedImage(image);\n    },\n    [onSelectedImage],\n  );\n  const onPress = useCallback(() => {\n    openCameraRollScreen({\n      onSubmit: onSelect,\n    });\n  }, []);\n\n  const source = useMemo(() => {\n    const _image = imageUri ? imageUri : image;\n\n    return Object.values(BG_TEMPLATE).includes(_image as BG_TEMPLATE)\n      ? getTemplateImage(_image as BG_TEMPLATE)\n      : {uri: _image};\n  }, [imageUri, image]);\n\n  return (\n    <SContainer>\n      <STitle>Background</STitle>\n      <SBackgroundWrapper resizeMode={'cover'} source={source}>\n        {imageUri || image ? (\n          <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n            <STextAction hasImage={imageUri || image}>Change</STextAction>\n          </SButtonAction>\n        ) : (\n          <>\n            <SIconPhoto>\n              <SImageGallery source={Icons.Outlined.PHOTO} />\n              <SText>Upload your background</SText>\n            </SIconPhoto>\n            <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n              <STextAction>Choose file</STextAction>\n            </SButtonAction>\n          </>\n        )}\n      </SBackgroundWrapper>\n    </SContainer>\n  );\n});\nconst SContainer = styled.TouchableOpacity`\n  justify-content: center;\n  border-radius: 4px;\n  border: 1px solid #ebebeb;\n  padding: 0 16px 12px 16px;\n`;\n\nconst STitle = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n  margin-top: 8px;\n  margin-bottom: 4px;\n`;\n\nconst SBackgroundWrapper = styled.ImageBackground`\n  background-color: ${p => p.theme.neutral9};\n  min-height: 180px;\n  border-radius: 8px;\n`;\n\nconst SText = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n`;\n\nconst SButtonAction = styled.TouchableOpacity<{hasImage?: string}>`\n  width: 120px;\n  height: 40px;\n  padding: 4px 16px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: ${p => (p.hasImage ? 'rgba(0, 0, 0, 0.65)' : '#EAEAEA')};\n  margin-top: ${p => (p.hasImage ? 68 : 12)}px;\n  align-self: center;\n`;\nconst SIconPhoto = styled.View`\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n  margin-top: 36px;\n`;\nconst SImageGallery = styled.Image`\n  width: 32px;\n  height: 32px;\n  tint-color: ${p => p.theme.neutral2};\n`;\nconst STextAction = styled.Text<{hasImage?: string}>`\n  font-family: ${Fonts.Medium};\n  font-size: 14px;\n  line-height: 24px;\n  color: ${p => (p.hasImage ? p.theme.white : p.theme.neutral2)};\n`;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {Icons} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={Icons.Outlined.CHEVRON_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  AnimatedKeyboardAvoidingViewRef,\n  FullScreenWrapper,\n  MyKeyboardAvoidingView,\n  UIInput,\n  UIText,\n  UITextInput,\n  UIUserPickerInput,\n} from '@true/ui';\nimport {AnimatedBottomSpace} from '@/components/AnimatedBottomSpace';\nimport {\n  goBack,\n  styled,\n  ToastService,\n  useAsyncFn,\n  useAutoToastError,\n  useBoolean,\n  useNavigationParams,\n} from '@true/core';\nimport {\n  runOnUI,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport {\n  ETypeUpdate,\n  ICreatePost,\n  initParamCreatePost,\n} from '@/store/updates/type';\nimport {HeaderCreatePost} from '@/screens/CreatePostScreen/HeaderCreatePost';\nimport {getChannels, useChannelsByQuery} from '@/store/channels';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IBase64, uploadImage} from '@/utils/helper';\nimport {getUpdates} from '@/store/updates';\nimport {Buffer} from 'buffer';\nimport {DiscardDialog} from '@/components/DiscardDialog';\nimport {requestCreatePost, requestEditPost} from '@/store/updates/function';\nimport {MyInputBackground} from '@/screens/CreateEventScreen/MyInputBackground';\nimport {BottomSheetMenu} from '@/components/BottomSheets';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {MenuItem} from '@/components/MenuItem';\nimport {AvatarWithSelectChannel} from '@/components/AvatarWithSelectChannel';\nimport LoadingModal from '@/components/LoadingModal';\nimport {View} from 'react-native';\n\nexport interface CreatePostScreenParams {\n  type: 'update' | 'styled' | 'welcome' | 'idea' | 'announcement' | 'external';\n  channel_id?: string;\n  id?: number;\n}\n\nexport const CreatePostScreen = memo(function () {\n  const {type, id, channel_id} = useNavigationParams<CreatePostScreenParams>();\n  const ref = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useAnimatedRef<any>();\n  const params = useSharedValue<ICreatePost>(initParamCreatePost);\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n  const bottomSheetRef = useRef<BottomSheetModal | null>(null);\n  const channelsOption = useChannelsByQuery('joined').map(id => ({\n    label: getChannels(id)?.name || 'Undefined channel',\n    value: id,\n  }));\n  const [label, setLabel] = useState('');\n  const imageRef = useRef<ImageDTO | null>(null);\n\n  useEffect(() => {\n    if (channelsOption && channelsOption.length > 0) {\n      const selectedChannel = channelsOption.find(\n        item => item.value === params.value.channel_id.toString(),\n      );\n      if (selectedChannel) {\n        setLabel(selectedChannel.label);\n      }\n    }\n  }, [params, setLabel, channelsOption]);\n\n  const onSelectBackground = useCallback(\n    (image: ImageDTO) => {\n      imageRef.current = image;\n      params.value['image-bg'] = image.url;\n    },\n    [imageRef, params],\n  );\n\n  const [{loading, error: createError}, onPressSubmit] =\n    useAsyncFn(async () => {\n      let imageUrl = params.value['image-bg'];\n      if (imageRef.current) {\n        imageUrl = await uploadImage(imageRef.current);\n      }\n      const _params = {\n        ...params.value,\n        metatype: type,\n        'image-bg': imageUrl,\n      };\n      if (id) {\n        await requestEditPost(_params);\n      } else {\n        await requestCreatePost(_params);\n        ToastService.show('Create post successfully');\n      }\n      goBack();\n    }, [id, imageRef, params]);\n  useAutoToastError(createError);\n\n  const onGoBack = useCallback(() => {\n    console.log('aaa');\n    goBack();\n  }, []);\n\n  useEffect(() => {\n    let _params: ICreatePost = {\n      ...initParamCreatePost,\n    };\n    if (id) {\n      const update = getUpdates(id);\n      const coverImage: IBase64 = JSON.parse(\n        Buffer.from(\n          update?.image ||\n            'eyJ0eXBlIjoiIiwiY29sb3IiOiIiLCJvcGFjaXR5IjowLCJwZXJjZW50IjoxMDAsImltYWdlIjoiIiwidGV4dHMiOltdfQ',\n          'base64',\n        ).toString('utf-8') || '',\n      );\n      _params = {\n        id: update?.id,\n        channel_id: update?.channel_id || 0,\n        metatype: type,\n        content: update?.content || '',\n        'file[]': [],\n        // schedule?:number,\n        // schedule_date?:number,\n        // schedule_shift?:string,\n        // usernames?:string,\n        name: update?.name || '',\n        'image-bg': coverImage?.image,\n      };\n    }\n    params.value = _params;\n  }, [params, type]);\n\n  const animatedActiveBtn = useDerivedValue(() => {\n    if (channel_id) {\n      return !!params.value.content;\n    }\n\n    return !!params.value.content;\n  }, [channel_id]);\n\n  const renderItem = useCallback(\n    (item: any, index: number) => {\n      return (\n        <MenuItem\n          key={index}\n          title={item.label}\n          onPress={() => {\n            onChangeValue('channel_id', item.value);\n            setLabel(item.label);\n            bottomSheetRef.current?.dismiss();\n          }}\n        />\n      );\n    },\n    [bottomSheetRef],\n  );\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        'worklet';\n\n        params.value = {\n          ...params.value,\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n\n  return (\n    <FullScreenWrapper isGrey>\n      <MyKeyboardAvoidingView ref={ref} scrollRef={scrollRef}>\n        <HeaderCreatePost\n          title={id ? 'Edit update' : 'Create update'}\n          active={animatedActiveBtn}\n          onPress={onPressSubmit}\n          loading={loading}\n          id={id}\n          onGoBack={onGoBack}\n        />\n        <LoadingModal isVisible={loading} />\n        <SScrollView ref={scrollRef} keyboardShouldPersistTaps={'handled'}>\n          <SContainer>\n            <View\n              style={{\n                gap: 12,\n              }}>\n              <UIText.HeaderMedium>General information</UIText.HeaderMedium>\n              <AvatarWithSelectChannel\n                bottomSheetRef={bottomSheetRef}\n                label={label}\n                typePost={type}\n              />\n              <SContentContainer>\n                {type === ETypeUpdate.ANNOUNCEMENT ||\n                type === ETypeUpdate.WELCOME ? (\n                  <MyInputBackground\n                    onSelectedImage={onSelectBackground}\n                    image={params.value['image-bg']}\n                  />\n                ) : null}\n                {type == ETypeUpdate.ANNOUNCEMENT ||\n                type === ETypeUpdate.IDEA ? (\n                  <UIInput.Text\n                    keyName={'name'}\n                    params={params}\n                    title={type === 'announcement' ? 'Title' : 'The idea'}\n                    onChangeValue={onChangeValue}\n                    placeholder={'---'}\n                    required\n                  />\n                ) : null}\n                {type == ETypeUpdate.WELCOME ? (\n                  <UIInput.UserPicker\n                    title={'Select people'}\n                    type={'user'}\n                    keyName={'usernames'}\n                    params={params}\n                    onChangeValue={onChangeValue}\n                    multiple\n                    placeholder={'---'}\n                    required\n                  />\n                ) : null}\n\n                {type == ETypeUpdate.UPDATE || type === ETypeUpdate.IDEA ? (\n                  <SUITextInput\n                    title={\n                      type === 'idea'\n                        ? 'Extra description'\n                        : 'Share with your team'\n                    }\n                    keyName={'content'}\n                    params={params}\n                    placeholder={'---'}\n                    defaultValue={''}\n                    // minHeight={320}\n                    required\n                    multiline\n                  />\n                ) : (\n                  <UITextInput\n                    title={'Content'}\n                    keyName={'content'}\n                    params={params}\n                    defaultValue={''}\n                    required\n                  />\n                )}\n                {/*Pinned to channel*/}\n                <UIInput.Attachment\n                  title={'Attach files or Images'}\n                  keyName={'file[]'}\n                  params={params}\n                  onChangeValue={onChangeValue}\n                />\n              </SContentContainer>\n            </View>\n            <AnimatedBottomSpace />\n          </SContainer>\n        </SScrollView>\n        <DiscardDialog\n          title={'Discard change'}\n          content={\n            'You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.'\n          }\n          visible={visibleDialog}\n          onClose={hideDialog}\n        />\n        <BottomSheetMenu\n          name={'channel'}\n          ref={bottomSheetRef}\n          items={channelsOption}\n          renderMenuItem={renderItem}\n          titleHeader={'Select channel'}\n        />\n      </MyKeyboardAvoidingView>\n    </FullScreenWrapper>\n  );\n});\n\nconst SContainer = styled.View`\n  padding: 12px 16px;\n`;\nconst SContentContainer = styled.View`\n  gap: 8px;\n`;\nconst SScrollView = styled.ScrollView`\n  flex: 1;\n  background-color: white;\n  margin-top: 8px;\n`;\nconst SUITextInput = styled(UITextInput).attrs(p => ({\n  textStyle: {\n    minHeight: 320,\n  },\n}))``;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","e","r","__esModule","default","t","_getRequireWildcardCache","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_interopRequireWildcard","require","_core","_ui","_reactNativeReanimated","_asset","_jsxRuntime","WeakMap","_worklet_8674385749251_init_data","code","_worklet_14097579138961_init_data","SRow","exports","memo","_ref","anonymous","bottomSheetRef","label","typePost","me","useMe","widthButton","useSharedValue","animatedStyled","useAnimatedStyle","width","value","__closure","__initData","__workletHash","onViewLayout","useWorkletCallback","nativeEvent","layout","jsxs","children","jsx","Avatar","size","userKey","id","disableClick","SView","UIText","BodyMedium500","onLayout","name","SButtonSelect","style","title","onPress","_bottomSheetRef$curre","current","present","SExpandIcon","source","Icons","Outlined","CHEVRON_DOWN_SMALL","styled","View","_taggedTemplateLiteralLoose2","UIButton","attrs","p","textStyle","assign","UITextStyle","body_medium_400","color","theme","neutral2","textProps","numberOfLines","neutral5","Image","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_utils","_type","_BgTemplateService","SContainer","props","onSelectedImage","image","_useState","useState","_useState2","_slicedToArray2","imageUri","setImageUri","onSelect","useCallback","url","openCameraRollScreen","onSubmit","useMemo","_image","values","BG_TEMPLATE","includes","getTemplateImage","uri","STitle","SBackgroundWrapper","resizeMode","SButtonAction","hasImage","STextAction","Fragment","SIconPhoto","SImageGallery","PHOTO","SText","TouchableOpacity","Text","Fonts","Regular","ImageBackground","neutral9","Medium","white","_helper","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","HeaderWrapper","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","paddingTop","useTheme","active","onGoBack","loading","animatedBtnStyle","backgroundColor","interpolateColor","neutral3","primaryColor","animatedProps","useAnimatedProps","pointerEvents","FlexCenter","gap","CHEVRON_LEFT","goBack","HeaderLarge","SCreateBtn","Animated","neutral4","body_medium_500","_AnimatedBottomSpace","_HeaderCreatePost","_channels","_updates","_buffer","_DiscardDialog","_function","_MyInputBackground","_BottomSheets","_MenuItem","_AvatarWithSelectChannel","_LoadingModal","_interopRequireDefault","_reactNative","_worklet_2192383653013_init_data","_worklet_690685769123_init_data","_useNavigationParams","useNavigationParams","type","channel_id","ref","useRef","scrollRef","useAnimatedRef","params","initParamCreatePost","_useBoolean","useBoolean","_useBoolean2","visibleDialog","hideDialog","channelsOption","useChannelsByQuery","map","_getChannels","getChannels","setLabel","imageRef","useEffect","length","selectedChannel","find","item","toString","onSelectBackground","_useAsyncFn","useAsyncFn","_asyncToGenerator2","imageUrl","uploadImage","_params","metatype","requestEditPost","requestCreatePost","ToastService","show","_useAsyncFn2","_useAsyncFn2$","createError","error","onPressSubmit","useAutoToastError","console","log","update","getUpdates","coverImage","JSON","parse","Buffer","from","content","animatedActiveBtn","useDerivedValue","renderItem","index","MenuItem","onChangeValue","dismiss","key","runOnUI","_key","_value","_defineProperty2","FullScreenWrapper","isGrey","MyKeyboardAvoidingView","HeaderCreatePost","isVisible","SScrollView","keyboardShouldPersistTaps","HeaderMedium","AvatarWithSelectChannel","SContentContainer","ETypeUpdate","ANNOUNCEMENT","WELCOME","MyInputBackground","IDEA","UIInput","keyName","placeholder","required","UserPicker","multiple","UPDATE","SUITextInput","defaultValue","multiline","UITextInput","Attachment","AnimatedBottomSpace","DiscardDialog","visible","onClose","BottomSheetMenu","items","renderMenuItem","titleHeader","ScrollView","minHeight"],"sourceRoot":""}