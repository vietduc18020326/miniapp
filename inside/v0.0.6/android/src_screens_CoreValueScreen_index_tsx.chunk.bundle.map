{"version":3,"file":"src_screens_CoreValueScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/screens/CoreValueScreen/CoreValueThumbnail.tsx","webpack:///./src/screens/CoreValueScreen/index.tsx","webpack:///./src/store/corevalues/function.ts"],"sourcesContent":["import {memo, useCallback} from 'react';\nimport {useCoreValues} from '@/store/corevalues';\nimport {styled, useTheme} from '@true/core';\nimport {Fonts} from '@true/core';\nimport {HTMLRenderer} from '@true/ui';\nimport {formatPlainText, navigateToDetailPostScreen} from '@/utils';\nimport {Dimensions, Text, View} from 'react-native';\nimport {SvgXml} from 'react-native-svg';\nimport {SvgIcon} from '@/utils/Svgts';\nimport SeeMore from '@/components/Text/SeeMore';\n\ninterface CoreValueThumbnailProps {\n  id: number;\n  index: number;\n}\n\nexport const CoreValueThumbnail = memo(function (\n  props: CoreValueThumbnailProps,\n) {\n  const {id, index} = props;\n  const data = useCoreValues(id);\n  const theme = useTheme();\n  const onNavigateToDetail = useCallback(() => {\n    navigateToDetailPostScreen({\n      id: data?.update_id || 0,\n    });\n  }, []);\n  return (\n    <SContainer onPress={onNavigateToDetail}>\n      <SImageBackground backgroundColor={data?.icon.split(' ')[1]} />\n      <SStyleSvg backgroundColor={data?.icon.split(' ')[1]}>\n        <SvgXml\n          // @ts-ignore\n          xml={SvgIcon[data?.icon.split(' ')[0] || 'icon_home']}\n          width={24}\n          height={24}\n          fill={'#FFFFFF'}\n        />\n      </SStyleSvg>\n      <STitle>{`0${index}. ${data?.name}`}</STitle>\n      <View\n        style={{\n          overflow: 'hidden',\n          paddingTop: 4,\n        }}>\n        <SeeMore\n          id={'corevalue' + id.toString()}\n          numberOfLines={4}\n          style={{fontSize: 14, lineHeight: 20, color: theme.neutral1}}\n          linkStyle={{fontSize: 14, lineHeight: 20}}>\n          {formatPlainText(data?.content || '')}\n        </SeeMore>\n      </View>\n    </SContainer>\n  );\n});\n\nconst margin = 12;\nconst widthScreen = Dimensions.get('window').width;\nconst width = widthScreen / 2 - margin * 2;\n\nconst SContainer = styled.TouchableOpacity`\n  width: ${width}px;\n  height: ${width * 1.2}px;\n  border-radius: 8px;\n  padding: 12px;\n  margin-top: 12px;\n`;\nconst STitle = styled.Text`\n  font-family: ${Fonts.Regular};\n\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 28px;\n  color: #242424;\n`;\nconst SImageBackground = styled.View<{backgroundColor?: string}>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${p => p.backgroundColor || '#2A91D6'};\n  opacity: 0.1;\n  border-radius: 8px;\n`;\nconst SStyleSvg = styled.View<{backgroundColor?: string}>`\n  width: 36px;\n  height: 36px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  background-color: ${p => p.backgroundColor || '#7A8DED'};\n  margin-bottom: 8px;\n`;\n","import {memo, useCallback, useEffect, useMemo} from 'react';\nimport {ActivityIndicator} from 'react-native';\nimport {styled, useAsyncFn, useMe} from '@true/core';\nimport {FlashList} from '@shopify/flash-list';\nimport {ScreenWrapper} from '@true/ui';\nimport {requestCoreValues} from '@/store/corevalues/function';\nimport {CoreValueThumbnail} from '@/screens/CoreValueScreen/CoreValueThumbnail';\nimport {useCoreValuesByQuery} from '@/store/corevalues';\nimport {CustomHeader} from '@/components/CustomHeader';\nimport {navigateToCreateCoreValueScreen} from '@/utils';\nimport {EUserRole} from '@/utils/helper';\nimport {EmptyView} from '@/components/EmptyView';\n\nexport const CoreValueScreen = memo(function () {\n  const listCoreValues = useCoreValuesByQuery('all');\n  const me = useMe();\n  const renderItem = useCallback(({item, index}: any) => {\n    return <CoreValueThumbnail id={item} index={index + 1} />;\n  }, []);\n  const isAdmin = useMemo(() => {\n    return Number(me?.role) === EUserRole.ADMIN;\n  }, []);\n  const [{loading}, refreshLetter] = useAsyncFn(async () => {\n    await requestCoreValues();\n    return;\n  }, []);\n\n  const onCreate = useCallback(() => {\n    navigateToCreateCoreValueScreen({\n      id: -1,\n    });\n  }, [me]);\n\n  useEffect(() => {\n    requestCoreValues().then();\n  }, []);\n\n  return (\n    <ScreenWrapper>\n      <CustomHeader\n        isBack\n        title={'Core values'}\n        onCreate={onCreate}\n        isSearch={false}\n        hideCreateButton={!isAdmin}\n        isDivider\n      />\n      <SContainer>\n        <SFlashList\n          data={listCoreValues}\n          renderItem={renderItem}\n          numColumns={2}\n          keyExtractor={keyExtractor}\n          refreshing={loading}\n          onRefresh={refreshLetter}\n          onEndReachedThreshold={1}\n          removeClippedSubviews={true}\n          // ListHeaderComponent={renderHeader}\n          ListEmptyComponent={\n            <EmptyView text={'No core values at the moment'} />\n          }\n        />\n      </SContainer>\n    </ScreenWrapper>\n  );\n});\n\nconst SFlashList = styled(FlashList)`\n  flex: 1;\n`;\nconst keyExtractor = (item: any) => item;\nconst SContainer = styled.View`\n  flex: 1;\n  background-color: white;\n  padding-left: 20px;\n`;\nexport default CoreValueScreen;\n","import { Core, Fetch } from \"@true/core\";\nimport { batch } from \"react-redux\";\nimport { ICoreValue, ICreateCoreValue } from \"@/store/corevalues/type\";\nimport { setCoreValuesQuery, syncCoreValues } from \"@/store/corevalues/index\";\n\nexport const requestCoreValues = async () => {\n  const { data } = await Fetch.postWithToken<{\n    core_values: ICoreValue[];\n  }>(`@${Core.systemPath}/inside/ajax/api/company/corevalue/gets`);\n\n  batch(() => {\n    if (data[\"core_values\"].length) {\n      syncCoreValues(data.core_values);\n      setCoreValuesQuery(prev => ({\n        ...prev,\n        [\"all\"]: data[\"core_values\"].map(item => item.id.toString())\n      }));\n    }\n  });\n  return data[\"core_values\"];\n};\nexport const requestCoreValueId = async (params: {\n  corevalue_id: string | number;\n}) => {\n  const { data } = await Fetch.postWithToken<{\n    cv: ICoreValue;\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/company/corevalue/get?corevalue_id=${params.corevalue_id}`\n  );\n\n  batch(() => {\n    if (data.cv) {\n      syncCoreValues([data.cv]);\n    }\n  });\n  return data.cv;\n};\nexport const requestCreateCoreValues = async (params: ICreateCoreValue) => {\n  const { data } = await Fetch.postWithToken(\n    `@${Core.systemPath}/inside/ajax/api/company/corevalue/create`,\n    params\n  );\n  // batch(() => {\n  //   // syncLetters([data.event]);\n  //   set(prev => ({\n  //     ...prev,\n  //     ['all']: [data.event.id, ...prev.all],\n  //   }));\n  // });\n};\n\nexport const requestEditCoreValues = async (params: ICreateCoreValue) => {\n  const { data } = await Fetch.postWithToken(\n    `@${Core.systemPath}/inside/ajax/api/company/corevalue/edit`,\n    params\n  );\n  // batch(() => {\n  //   if (data.event) {\n  //     syncEvents([data.event]);\n  //   }\n  // });\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","require","_corevalues","_core","_utils","_reactNative","_reactNativeSvg","_Svgts","_SeeMore","_interopRequireDefault","_jsxRuntime","width","exports","memo","props","id","index","data","useCoreValues","theme","useTheme","onNavigateToDetail","useCallback","navigateToDetailPostScreen","update_id","jsxs","SContainer","onPress","children","jsx","SImageBackground","backgroundColor","icon","split","SStyleSvg","SvgXml","xml","SvgIcon","height","fill","STitle","name","View","style","overflow","paddingTop","default","toString","numberOfLines","fontSize","lineHeight","color","neutral1","linkStyle","formatPlainText","content","Dimensions","get","margin","styled","TouchableOpacity","_taggedTemplateLiteralLoose2","Text","Fonts","Regular","p","_flashList","_ui","_function","_CoreValueThumbnail","_CustomHeader","_helper","_EmptyView","CoreValueScreen","listCoreValues","useCoreValuesByQuery","me","useMe","renderItem","_ref","item","CoreValueThumbnail","isAdmin","useMemo","Number","role","EUserRole","ADMIN","_useAsyncFn","useAsyncFn","_asyncToGenerator2","requestCoreValues","_useAsyncFn2","_slicedToArray2","loading","refreshLetter","onCreate","navigateToCreateCoreValueScreen","useEffect","then","ScreenWrapper","CustomHeader","isBack","title","isSearch","hideCreateButton","isDivider","SFlashList","numColumns","keyExtractor","refreshing","onRefresh","onEndReachedThreshold","removeClippedSubviews","ListEmptyComponent","EmptyView","text","FlashList","_ref2","_ref3","_ref4","_reactRedux","_index","Fetch","postWithToken","Core","systemPath","batch","length","syncCoreValues","core_values","setCoreValuesQuery","prev","Object","assign","_defineProperty2","map","apply","arguments","params","corevalue_id","cv","_x","_x2","_x3"],"sourceRoot":""}