{"version":3,"file":"src_screens_AddMemberScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/screens/AddMemberScreen/index.tsx"],"sourcesContent":["import React, {memo, useCallback, useRef} from 'react';\nimport {\n  interpolateColor,\n  runOnUI,\n  useAnimatedStyle,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport {StyleSheet} from 'react-native';\nimport {\n  Colors,\n  Fonts,\n  getUser,\n  getUserByQuery,\n  getUserGroup,\n  goBack,\n  styled,\n  useAsyncFn,\n  useAutoToastError,\n  useNavigationParams,\n  useTheme,\n} from '@true/core';\nimport {\n  AnimatedBottomSpace,\n  AnimatedKeyboardAvoidingViewRef,\n  FullScreenWrapper,\n  LeftModalHeader,\n  MyKeyboardAvoidingView,\n  UIBottomButton,\n  UIButton,\n  UIUserPickerInput,\n} from '@true/ui';\nimport {IC_OUTLINED_RIGHT} from '@true/asset';\n\nexport interface AddMemberScreenProps {\n  ids: number[];\n  onSubmit: (ids: number[], usernameIds: string) => void;\n}\n\nexport const AddMemberScreen = memo(() => {\n  const {ids, onSubmit} = useNavigationParams<AddMemberScreenProps>();\n  const offset = useSharedValue(100);\n  const ref = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useRef<any>(null);\n  const inputRef = useRef<any>(null);\n  const theme = useTheme();\n  const followers = ids;\n  const params = useSharedValue({\n    followers: (followers && followers) || [],\n    groups: [],\n  });\n\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      if (key === 'groups') {\n        let _followers = params.value.followers;\n        value\n          .map((groupId: any) => {\n            const group = getUserGroup(groupId);\n            if (group && group.metatype === 'group') {\n              _followers = _followers.concat(\n                // @ts-ignore\n                getUserByQuery(`userGroup/${groupId}`),\n              );\n            }\n          })\n          .filter(Boolean);\n        params.value = {\n          ...params.value,\n          followers: [...new Set(_followers)],\n        };\n\n        return;\n      }\n      runOnUI((_key, _value) => {\n        'worklet';\n        params.value = {\n          ...params.value,\n          // @ts-ignore\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n\n  const [{loading: shareLoading, error: shareError}, onRequestAdd] =\n    useAsyncFn(async () => {\n      let _followers: any[] = params.value.followers;\n\n      const _followersUserName = [...new Set(_followers)].map(\n        id => '@' + getUser(id)?.username,\n      );\n      onSubmit(_followers, _followersUserName.join(' '));\n      goBack();\n    }, [params]);\n\n  const animatedButtonStyle = useAnimatedStyle(() => {\n    const disabled = !params.value['followers'] ? 1 : 0;\n    return {\n      backgroundColor: interpolateColor(\n        disabled,\n        [0, 1],\n        [theme.primaryColor, theme.neutral3],\n      ),\n    };\n  });\n\n  useAutoToastError(shareError);\n\n  return (\n    <FullScreenWrapper>\n      <LeftModalHeader hideSeparator={false} title={'Invite members'} />\n      <MyKeyboardAvoidingView\n        ref={ref}\n        scrollRef={scrollRef}\n        scrollInputAdditionalOffset={offset}>\n        <SScrollView ref={scrollRef} keyboardShouldPersistTaps={'handled'}>\n          {/*<SContainer>*/}\n          {/*  <STitle>{translate('truesign.share_template_hint')}</STitle>*/}\n          {/*</SContainer>*/}\n\n          <SContainer>\n            <UIUserPickerInput\n              type={'user'}\n              keyName={'followers'}\n              multiple={true}\n              title={'Invite members'}\n              onChangeValue={onChangeValue}\n              params={params}\n            />\n          </SContainer>\n\n          <SViewHidden>\n            <UIUserPickerInput\n              type={'group'}\n              keyName={'groups'}\n              multiple={true}\n              title={'Invite members groups'}\n              onChangeValue={onChangeValue}\n              ref={inputRef}\n            />\n          </SViewHidden>\n          <SContainer>\n            <UIButton\n              title={'Select group users'}\n              textStyle={styles.textStyleGroup}\n              source={IC_OUTLINED_RIGHT}\n              imageSize={14}\n              imageStyle={styles.imageStyle}\n              onPress={() => {\n                inputRef?.current?.bottomSheetRef?.current?.present();\n              }}\n            />\n          </SContainer>\n          <AnimatedBottomSpace />\n        </SScrollView>\n      </MyKeyboardAvoidingView>\n\n      <SBottomButton\n        buttons={[\n          {\n            title: 'Cancel',\n            onPress: goBack,\n            textColor: theme.primaryColor,\n            backgroundColor: 'white',\n            style: {\n              borderWidth: 1,\n              borderColor: theme.primaryColor,\n            },\n            textStyle: styles.textStyle,\n          },\n          {\n            title: 'Add',\n            loading: shareLoading,\n            onPress: onRequestAdd,\n            textColor: 'white',\n            backgroundColor: theme.primaryColor,\n            textStyle: styles.textStyle,\n            style: animatedButtonStyle,\n          },\n        ]}\n      />\n    </FullScreenWrapper>\n  );\n});\n\nconst styles = StyleSheet.create({\n  textStyle: {\n    fontFamily: Fonts.Medium,\n    fontSize: 16,\n    lineHeight: 24,\n    marginRight: 8,\n  },\n  textStyleGroup: {color: Colors.blue1},\n  imageStyle: {tintColor: Colors.blue1, justifyContent: 'center'},\n});\n\nconst SScrollView = styled.ScrollView``;\n\nconst SContainer = styled.View`\n  flex: 1;\n  padding: 20px 16px 0 16px;\n`;\n\nconst SViewHidden = styled.View`\n  overflow: hidden;\n  height: 0;\n`;\n\nconst SBottomButton = styled(UIBottomButton)`\n  padding: 8px 16px;\n  margin: 0;\n  background-color: ${p => p.theme.backgroundColor};\n  border-top-width: 1px;\n  border-color: ${p => p.theme.neutral06};\n`;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_reactNativeReanimated","_reactNative","_core","_ui","_asset","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","_worklet_690685769123_init_data","code","location","sourceMap","version","_worklet_10218680782661_init_data","AddMemberScreen","memo","_e","anonymous","_useNavigationParams","useNavigationParams","ids","onSubmit","offset","useSharedValue","ref","useRef","scrollRef","inputRef","theme","useTheme","followers","params","groups","onChangeValue","useCallback","value","_followers","map","groupId","group","getUserGroup","metatype","concat","getUserByQuery","filter","Boolean","assign","_toConsumableArray2","Set","runOnUI","global","Error","_key","_value","_defineProperty2","__closure","__initData","__workletHash","__stackDetails","_useAsyncFn","useAsyncFn","_asyncToGenerator2","_followersUserName","id","_getUser","getUser","username","join","goBack","_useAsyncFn2","_slicedToArray2","_useAsyncFn2$","shareLoading","loading","shareError","error","onRequestAdd","animatedButtonStyle","useAnimatedStyle","disabled","backgroundColor","interpolateColor","primaryColor","neutral3","useAutoToastError","jsxs","FullScreenWrapper","children","jsx","LeftModalHeader","hideSeparator","title","MyKeyboardAvoidingView","scrollInputAdditionalOffset","SScrollView","keyboardShouldPersistTaps","SContainer","UIUserPickerInput","type","keyName","multiple","SViewHidden","UIButton","textStyle","styles","textStyleGroup","source","IC_OUTLINED_RIGHT","imageSize","imageStyle","onPress","_inputRef$current","_inputRef$current$bot","_inputRef$current$bot2","current","bottomSheetRef","present","AnimatedBottomSpace","SBottomButton","buttons","textColor","style","borderWidth","borderColor","exports","StyleSheet","create","fontFamily","Fonts","Medium","fontSize","lineHeight","marginRight","color","Colors","blue1","tintColor","justifyContent","styled","ScrollView","_taggedTemplateLiteralLoose2","View","UIBottomButton","p","neutral06"],"sourceRoot":""}