{"version":3,"file":"vendors-node_modules_multiple-platform_applist_src_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/@multiple-platform/applist/src/assets/icons/ic_inside_logo.png","webpack:///./node_modules/@multiple-platform/applist/src/assets/icons/ic_policy_logo.png","webpack:///./node_modules/@multiple-platform/applist/src/assets/icons/ic_qa_logo.png","webpack:///./node_modules/@multiple-platform/applist/src/assets/icons/ic_wesign_logo.png","webpack:///./node_modules/@multiple-platform/applist/src/AppItem.tsx","webpack:///./node_modules/@multiple-platform/applist/src/assets/index.ts","webpack:///./node_modules/@multiple-platform/applist/src/constant/index.ts","webpack:///./node_modules/@multiple-platform/applist/src/index.tsx","webpack:///./node_modules/@multiple-platform/applist/src/utils/index.ts","webpack:///./node_modules/@multiple-platform/applist/src/utils/statusBar.ts","webpack:///./node_modules/react-native-super-grid/FlatGrid.js","webpack:///./node_modules/react-native-super-grid/SectionGrid.js","webpack:///./node_modules/react-native-super-grid/index.js","webpack:///./node_modules/react-native-super-grid/utils.js"],"sourcesContent":["var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');\nmodule.exports = AssetRegistry.registerAsset({\n  __packager_asset: true,\n  scales: [1,2,3],\n  name: \"ic_inside_logo\",\n  type: \"png\",\n  hash: \"90ce5efbfb9cd6f434f0a1af26df85d2,05eec93fc03f39b6d690faa534fb71ba,7048d80b263f98ff00144a4037a296a9\",\n  httpServerLocation: \"assets/node_modules/@multiple-platform/applist/src/assets/icons\",\n  \n  height: 206,\n  width: 206,\n});","var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');\nmodule.exports = AssetRegistry.registerAsset({\n  __packager_asset: true,\n  scales: [1,2,3],\n  name: \"ic_policy_logo\",\n  type: \"png\",\n  hash: \"7a801f7067a7766ff75a0d2bdf3239d4,dbf8be3a1dba831c6b2acc7ec3110c8a,f4f2e96a5af17ec1170c0eec50dc1c9d\",\n  httpServerLocation: \"assets/node_modules/@multiple-platform/applist/src/assets/icons\",\n  \n  height: 206,\n  width: 206,\n});","var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');\nmodule.exports = AssetRegistry.registerAsset({\n  __packager_asset: true,\n  scales: [1,2,3],\n  name: \"ic_qa_logo\",\n  type: \"png\",\n  hash: \"5830f8bea433ea9553ffa96c52ead7b9,cc1a30f7010e42f7fcf360c95e01f5ff,0de911daa094899ac0e7e60cbabbb8b7\",\n  httpServerLocation: \"assets/node_modules/@multiple-platform/applist/src/assets/icons\",\n  \n  height: 206,\n  width: 206,\n});","var AssetRegistry = require('react-native/Libraries/Image/AssetRegistry');\nmodule.exports = AssetRegistry.registerAsset({\n  __packager_asset: true,\n  scales: [1,2,3],\n  name: \"ic_wesign_logo\",\n  type: \"png\",\n  hash: \"47953f5ef5069dac6c63581c04adf432,a00851ed5caab2fb548854f038dba393,a2fbce8709798d9e647f59de5d8e2756\",\n  httpServerLocation: \"assets/node_modules/@multiple-platform/applist/src/assets/icons\",\n  \n  height: 206,\n  width: 206,\n});","import React, { memo, useCallback } from \"react\";\nimport {styled, createReplace} from \"@true/core\";\nimport { APP_ITEM_SIZE, APPS } from \"./constant\";\nimport {changeStatusBar} from \"./utils\"\n\nexport const AppItem = memo(({item}: {item: string}) => {\n\n  const onPress = useCallback(() => {\n    changeStatusBar('dark')\n    createReplace(APPS[item].title)()\n  }, [item])\n\n  return <SContainer onPress={onPress}>\n    <SIcon source={APPS[item].logo}/>\n    <SText>\n      {APPS[item].title}\n    </SText>\n  </SContainer>\n})\n\nconst SContainer = styled.TouchableOpacity`\n  justify-content: center;\n  align-items: center;\n`\nconst SIcon = styled.Image`\n  width: ${APP_ITEM_SIZE}px;\n  height: ${APP_ITEM_SIZE}px;\n`\nconst SText = styled.Text`\n  \n`\n","export const IC_INSIDE_LOGO = require(\"./icons/ic_inside_logo.png\")\nexport const IC_POLICY = require(\"./icons/ic_policy_logo.png\")\nexport const IC_WESIGN_LOGO = require(\"./icons/ic_wesign_logo.png\")\nexport const IC_QA_LOGO = require(\"./icons/ic_qa_logo.png\")\n","import {IC_POLICY, IC_QA_LOGO, IC_INSIDE_LOGO, IC_WESIGN_LOGO} from \"../assets\"\n\nexport const APPS: {[id: string]: {title: string, logo: any}} = {\n  policy: {\n    title: \"Policy\",\n    logo: IC_POLICY,\n  },\n  qa: {\n    title: \"QA\",\n    logo: IC_QA_LOGO\n  },\n  wesign: {\n    title: \"WeSign\",\n    logo: IC_WESIGN_LOGO\n  },\n  inside: {\n    title: \"Inside\",\n    logo: IC_INSIDE_LOGO\n  },\n}\n\nexport const APP_ITEM_SIZE = 70\n","import React, { memo, useCallback, useEffect } from \"react\";\nimport { LeftModalHeader, ScreenWrapper } from \"@true/ui\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport { AppItem } from \"./AppItem\";\nimport { APP_ITEM_SIZE } from \"./constant\";\nimport { changeStatusBar } from \"./utils\";\nimport { useNavigation } from \"@true/core\";\n\nexport default memo(() => {\n  const renderItem = useCallback(({item}: {item: string}) => {\n    return <AppItem item={item} />\n  }, [])\n\n  const navigation = useNavigation();\n\n  useEffect(() => {\n    navigation.addListener(\"focus\", () => {\n      changeStatusBar('dark')\n    })\n  }, [])\n\n  return <ScreenWrapper>\n    <LeftModalHeader title={\"Apps\"} hideCloseIcon={true} />\n    <FlatGrid\n      itemDimension={APP_ITEM_SIZE}\n      data={[\"policy\", \"qa\", \"wesign\", \"inside\"]}\n      renderItem={renderItem} />\n  </ScreenWrapper>\n})\n\n","export  * from \"./statusBar\"\n","import { StatusBar } from \"react-native\";\n\nexport const changeStatusBar = (content: 'dark' | 'light') => {\n  StatusBar.pushStackEntry({\n    barStyle: content+'-content' as any,\n    animated: true,\n  });\n}\n","import React, {\n  forwardRef, memo, useState, useCallback, useMemo, useEffect,\n} from 'react';\nimport {\n  View, Dimensions, FlatList,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { chunkArray, calculateDimensions, generateStyles, getAdjustedTotalDimensions } from './utils';\n\n\nconst FlatGrid = memo(\n  forwardRef((props, ref) => {\n    const {\n      style,\n      spacing,\n      fixed,\n      data,\n      itemDimension,\n      renderItem,\n      horizontal,\n      onLayout,\n      staticDimension,\n      maxDimension,\n      additionalRowStyle: externalRowStyle,\n      itemContainerStyle,\n      keyExtractor,\n      invertedRow,\n      maxItemsPerRow,\n      adjustGridToStyles,\n      customFlatList: FlatListComponent = FlatList,\n      onItemsPerRowChange,\n      ...restProps\n    } = props;\n\n    // eslint-disable-next-line react/prop-types\n    if (props.items && !props.data) {\n      // eslint-disable-next-line no-console\n      throw new Error('React Native Super Grid - Prop \"items\" has been renamed to \"data\" in version 4');\n    }\n\n    const [totalDimension, setTotalDimension] = useState(() => {\n      let defaultTotalDimension = staticDimension;\n\n      if (!staticDimension) {\n        const dimension = horizontal ? 'height' : 'width';\n        defaultTotalDimension = getAdjustedTotalDimensions({totalDimension: Dimensions.get('window')[dimension], maxDimension, contentContainerStyle: restProps.contentContainerStyle, style, horizontal, adjustGridToStyles});\n      }\n\n      return defaultTotalDimension;\n    });\n\n    const onLayoutLocal = useCallback(\n      (e) => {\n        if (!staticDimension) {\n          const { width, height } = e.nativeEvent.layout || {};\n          let newTotalDimension = horizontal ? height : width;\n\n          newTotalDimension = getAdjustedTotalDimensions({totalDimension: newTotalDimension, maxDimension, contentContainerStyle: restProps.contentContainerStyle, style, horizontal, adjustGridToStyles});\n\n          if (totalDimension !== newTotalDimension && newTotalDimension > 0) {\n            setTotalDimension(newTotalDimension);\n          }\n        }\n\n        // call onLayout prop if passed\n        if (onLayout) {\n          onLayout(e);\n        }\n      },\n      [staticDimension, maxDimension, totalDimension, horizontal, onLayout, adjustGridToStyles],\n    );\n\n    const renderRow = useCallback(\n      ({\n        rowItems,\n        rowIndex,\n        separators,\n        isLastRow,\n        itemsPerRow,\n        rowStyle,\n        containerStyle,\n      }) => {\n        // To make up for the top padding\n        let additionalRowStyle = {};\n        if (isLastRow) {\n          additionalRowStyle = {\n            ...(!horizontal ? { marginBottom: spacing } : {}),\n            ...(horizontal ? { marginRight: spacing } : {}),\n          };\n        }\n\n        return (\n          <View style={[rowStyle, additionalRowStyle, externalRowStyle]}>\n            {rowItems.map((item, index) => {\n              const i = invertedRow ? -index + itemsPerRow - 1 : index;\n\n              return (\n                <View\n                  key={\n                    keyExtractor\n                      ? keyExtractor(item, rowIndex * itemsPerRow + i)\n                      : `item_${rowIndex * itemsPerRow + i}`\n                  }\n                  style={[containerStyle, itemContainerStyle]}\n                >\n                  {renderItem({\n                    item,\n                    index: rowIndex * itemsPerRow + i,\n                    separators,\n                    rowIndex,\n                  })}\n                </View>\n              );\n            })}\n          </View>\n        );\n      },\n      [renderItem, spacing, keyExtractor, externalRowStyle, itemContainerStyle, horizontal, invertedRow],\n    );\n\n    const { containerDimension, itemsPerRow, fixedSpacing } = useMemo(\n      () => calculateDimensions({\n        itemDimension,\n        staticDimension,\n        totalDimension,\n        spacing,\n        fixed,\n        maxItemsPerRow,\n      }),\n      [itemDimension, staticDimension, totalDimension, spacing, fixed, maxItemsPerRow],\n    );\n\n    const { containerStyle, rowStyle } = useMemo(\n      () => generateStyles({\n        horizontal,\n        itemDimension,\n        containerDimension,\n        spacing,\n        fixedSpacing,\n        fixed,\n      }),\n      [horizontal, itemDimension, containerDimension, spacing, fixedSpacing, fixed],\n    );\n\n    let rows = chunkArray(data, itemsPerRow); // Splitting the data into rows\n    if (invertedRow) {\n      rows = rows.map(r => r.reverse());\n    }\n\n    const localKeyExtractor = useCallback(\n      (rowItems, index) => {\n        if (keyExtractor) {\n          return rowItems\n            .map((rowItem, rowItemIndex) => keyExtractor(rowItem, rowItemIndex))\n            .join('_');\n        }\n        return `row_${index}`;\n      },\n      [keyExtractor],\n    );\n\n    useEffect(() => {\n      if (onItemsPerRowChange) {\n        onItemsPerRowChange(itemsPerRow);\n      }\n    }, [itemsPerRow]);\n\n    return (\n      <FlatListComponent\n        data={rows}\n        ref={ref}\n        extraData={totalDimension}\n        renderItem={({ item, index }) => renderRow({\n          rowItems: item,\n          rowIndex: index,\n          isLastRow: index === rows.length - 1,\n          itemsPerRow,\n          rowStyle,\n          containerStyle,\n        })\n        }\n        style={[\n          {\n            ...(horizontal\n              ? { paddingLeft: spacing }\n              : { paddingTop: spacing }),\n          },\n          style,\n        ]}\n        onLayout={onLayoutLocal}\n        keyExtractor={localKeyExtractor}\n        {...restProps}\n        horizontal={horizontal}\n      />\n    );\n  }),\n);\n\n\nFlatGrid.displayName = 'FlatGrid';\n\nFlatGrid.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  data: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  maxDimension: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  additionalRowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  itemContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticDimension: PropTypes.number,\n  horizontal: PropTypes.bool,\n  onLayout: PropTypes.func,\n  keyExtractor: PropTypes.func,\n  listKey: PropTypes.string,\n  invertedRow: PropTypes.bool,\n  maxItemsPerRow: PropTypes.number,\n  adjustGridToStyles: PropTypes.bool,\n  customFlatList: PropTypes.elementType\n};\n\nFlatGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  additionalRowStyle: undefined,\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  horizontal: false,\n  onLayout: null,\n  keyExtractor: null,\n  listKey: undefined,\n  maxDimension: undefined,\n  invertedRow: false,\n  maxItemsPerRow: undefined,\n  adjustGridToStyles: false,\n  customFlatList: undefined\n};\n\n\nexport default FlatGrid;\n","import React, {\n  forwardRef, memo, useCallback, useEffect, useMemo, useState,\n} from 'react';\nimport {\n  View, Dimensions, SectionList,\n} from 'react-native';\nimport PropTypes from 'prop-types';\nimport { generateStyles, calculateDimensions, chunkArray, getAdjustedTotalDimensions } from './utils';\n\nconst SectionGrid = memo(\n  forwardRef((props, ref) => {\n    const {\n      sections,\n      style,\n      spacing,\n      fixed,\n      itemDimension,\n      staticDimension,\n      maxDimension,\n      renderItem: originalRenderItem,\n      keyExtractor,\n      onLayout,\n      additionalRowStyle: externalRowStyle,\n      itemContainerStyle,\n      invertedRow,\n      maxItemsPerRow,\n      adjustGridToStyles,\n      customSectionList: SectionListComponent = SectionList,\n      onItemsPerRowChange,\n      ...restProps\n    } = props;\n\n    const [totalDimension, setTotalDimension] = useState(() => {\n      let defaultTotalDimension = staticDimension;\n\n      if (!staticDimension) {\n        defaultTotalDimension = getAdjustedTotalDimensions({totalDimension: Dimensions.get('window').width, maxDimension, contentContainerStyle: restProps.contentContainerStyle, style, adjustGridToStyles});\n      }\n\n      return defaultTotalDimension;\n    });\n\n    const onLocalLayout = useCallback(\n      (e) => {\n        if (!staticDimension) {\n          let { width: newTotalDimension } = e.nativeEvent.layout || {};\n\n          newTotalDimension = getAdjustedTotalDimensions({totalDimension: newTotalDimension, maxDimension, contentContainerStyle: restProps.contentContainerStyle, style, adjustGridToStyles});\n\n          if (totalDimension !== newTotalDimension && newTotalDimension > 0) {\n            setTotalDimension(newTotalDimension);\n          }\n        }\n\n        // call onLayout prop if passed\n        if (onLayout) {\n          onLayout(e);\n        }\n      },\n      [staticDimension, maxDimension, totalDimension, onLayout, adjustGridToStyles],\n    );\n\n    const renderRow = useCallback(\n      ({\n        renderItem,\n        rowItems,\n        rowIndex,\n        section,\n        itemsPerRow,\n        rowStyle,\n        separators,\n        isFirstRow,\n        containerStyle,\n      }) => {\n        // Add spacing below section header\n        let additionalRowStyle = {};\n        if (isFirstRow) {\n          additionalRowStyle = {\n            marginTop: spacing,\n          };\n        }\n\n        return (\n          <View style={[rowStyle, additionalRowStyle, externalRowStyle]}>\n            {rowItems.map((item, index) => {\n              const i = invertedRow ? -index + itemsPerRow - 1 : index;\n\n              return (\n                <View\n                  key={\n                    keyExtractor\n                      ? keyExtractor(item, rowIndex * itemsPerRow + i)\n                      : `item_${rowIndex * itemsPerRow + i}`\n                  }\n                  style={[containerStyle, itemContainerStyle]}\n                >\n                  {renderItem({\n                    item,\n                    index: rowIndex * itemsPerRow + i,\n                    section,\n                    separators,\n                    rowIndex,\n                  })}\n                </View>\n              );\n            })}\n          </View>\n        );\n      },\n      [spacing, keyExtractor, externalRowStyle, itemContainerStyle, invertedRow],\n    );\n\n    const { containerDimension, itemsPerRow, fixedSpacing } = useMemo(\n      () => calculateDimensions({\n        itemDimension,\n        staticDimension,\n        totalDimension,\n        spacing,\n        fixed,\n        maxItemsPerRow,\n      }),\n      [itemDimension, staticDimension, totalDimension, spacing, fixed, maxItemsPerRow],\n    );\n\n    const { containerStyle, rowStyle } = useMemo(\n      () => generateStyles({\n        itemDimension,\n        containerDimension,\n        spacing,\n        fixedSpacing,\n        fixed,\n      }),\n      [itemDimension, containerDimension, spacing, fixedSpacing, fixed],\n    );\n\n    const groupSectionsFunc = useCallback(\n      (section) => {\n        let chunkedData = chunkArray(section.data, itemsPerRow);\n\n        if (invertedRow) {\n          chunkedData = chunkedData.map($0 => $0.reverse());\n        }\n\n        const renderItem = section.renderItem || originalRenderItem;\n\n        return {\n          ...section,\n          renderItem: ({ item, index, section: s }) => renderRow({\n            renderItem,\n            rowItems: item,\n            rowIndex: index,\n            section: s,\n            isFirstRow: index === 0,\n            itemsPerRow,\n            rowStyle,\n            containerStyle,\n          }),\n          data: chunkedData,\n          originalData: section.data,\n        };\n      },\n      [\n        itemsPerRow,\n        originalRenderItem,\n        renderRow,\n        rowStyle,\n        containerStyle,\n      ],\n    );\n\n    const groupedSections = sections.map(groupSectionsFunc);\n\n    const localKeyExtractor = useCallback(\n      (rowItems, index) => {\n        if (keyExtractor) {\n          return rowItems\n            .map((rowItem, rowItemIndex) => keyExtractor(rowItem, rowItemIndex))\n            .join('_');\n        }\n        return `row_${index}`;\n      },\n      [keyExtractor],\n    );\n\n    useEffect(() => {\n      if (onItemsPerRowChange) {\n        onItemsPerRowChange(itemsPerRow);\n      }\n    }, [itemsPerRow]);\n\n    return (\n      <SectionListComponent\n        onLayout={onLocalLayout}\n        extraData={totalDimension}\n        sections={groupedSections}\n        keyExtractor={localKeyExtractor}\n        style={style}\n        ref={ref}\n        {...restProps}\n      />\n    );\n  }),\n);\n\n\nSectionGrid.displayName = 'SectionGrid';\n\nSectionGrid.propTypes = {\n  renderItem: PropTypes.func.isRequired,\n  sections: PropTypes.arrayOf(PropTypes.any).isRequired,\n  itemDimension: PropTypes.number,\n  fixed: PropTypes.bool,\n  spacing: PropTypes.number,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  additionalRowStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  itemContainerStyle: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  staticDimension: PropTypes.number,\n  onLayout: PropTypes.func,\n  maxDimension: PropTypes.number,\n  listKey: PropTypes.string,\n  keyExtractor: PropTypes.func,\n  invertedRow: PropTypes.bool,\n  maxItemsPerRow: PropTypes.number,\n  adjustGridToStyles: PropTypes.bool,\n  customSectionList: PropTypes.elementType\n};\n\nSectionGrid.defaultProps = {\n  fixed: false,\n  itemDimension: 120,\n  spacing: 10,\n  style: {},\n  additionalRowStyle: undefined,\n  itemContainerStyle: undefined,\n  staticDimension: undefined,\n  onLayout: null,\n  listKey: undefined,\n  maxDimension: undefined,\n  invertedRow: false,\n  keyExtractor: null,\n  maxItemsPerRow: undefined,\n  adjustGridToStyles: false,\n  customSectionList: undefined\n};\n\n\nexport default SectionGrid;\n","import FlatGrid from './FlatGrid';\nimport SectionGrid from './SectionGrid';\n\nexport { FlatGrid, SectionGrid };\n\n// Backward Compatibility\nexport default FlatGrid;\nexport { SectionGrid as SuperGridSectionList };\n","import { StyleSheet } from 'react-native';\n\nfunction chunkArray(array = [], size) {\n  if (array === []) return [];\n  return array.reduce((acc, val) => {\n    if (acc.length === 0) acc.push([]);\n    const last = acc[acc.length - 1];\n    if (last.length < size) {\n      last.push(val);\n    } else {\n      acc.push([val]);\n    }\n    return acc;\n  }, []);\n}\n\nfunction calculateDimensions({\n  itemDimension,\n  staticDimension,\n  totalDimension,\n  fixed,\n  spacing,\n  maxItemsPerRow,\n}) {\n  const usableTotalDimension = staticDimension || totalDimension;\n  const availableDimension = usableTotalDimension - spacing; // One spacing extra\n  const itemTotalDimension = Math.min(itemDimension + spacing, availableDimension); // itemTotalDimension should not exceed availableDimension\n  const itemsPerRow = Math.min(Math.floor(availableDimension / itemTotalDimension), maxItemsPerRow || Infinity);\n  const containerDimension = availableDimension / itemsPerRow;\n\n  let fixedSpacing;\n  if (fixed) {\n    fixedSpacing = (totalDimension - (itemDimension * itemsPerRow)) / (itemsPerRow + 1);\n  }\n\n  return {\n    itemTotalDimension,\n    availableDimension,\n    itemsPerRow,\n    containerDimension,\n    fixedSpacing,\n  };\n}\n\nfunction getStyleDimensions(\n  style,\n  horizontal = false,\n) {\n  let space1 = 0;\n  let space2 = 0;\n  let maxStyleDimension = undefined;\n  if (style) {\n    const flatStyle = Array.isArray(style) ? StyleSheet.flatten(style) : style;\n    let sMaxDimensionXY = 'maxWidth';\n    let sPaddingXY = 'paddingHorizontal';\n    let sPadding1 = 'paddingLeft';\n    let sPadding2 = 'paddingRight';\n    if (horizontal) {\n      sMaxDimensionXY = 'maxHeight';\n      sPaddingXY = 'paddingVertical';\n      sPadding1 = 'paddingTop';\n      sPadding2 = 'paddingBottom';\n    }\n\n    if (flatStyle[sMaxDimensionXY] && typeof flatStyle[sMaxDimensionXY] === 'number') {\n      maxStyleDimension = flatStyle[sMaxDimensionXY];\n    }\n\n    const padding = flatStyle[sPaddingXY] || flatStyle.padding;\n    const padding1 = flatStyle[sPadding1] || padding || 0;\n    const padding2 = flatStyle[sPadding2] || padding || 0;\n    space1 = (typeof padding1 === 'number' ? padding1 : 0);\n    space2 = (typeof padding2 === 'number' ? padding2 : 0);\n  }\n  return { space1, space2, maxStyleDimension };\n}\n\nfunction getAdjustedTotalDimensions({\n  totalDimension,\n  maxDimension,\n  contentContainerStyle,\n  style,\n  horizontal = false,\n  adjustGridToStyles = false,\n}) {\n  const componentDimension = totalDimension; // keep track of initial max of component/screen\n  let actualMaxDimension = totalDimension; // keep track of smallest max dimension\n\n  // adjust for maxDimension prop\n  if (maxDimension && totalDimension > maxDimension) {\n    actualMaxDimension = maxDimension;\n    totalDimension = maxDimension;\n  }\n  \n  if (adjustGridToStyles) {\n    if (contentContainerStyle) {\n      const { space1, space2, maxStyleDimension } = getStyleDimensions(contentContainerStyle, horizontal);\n      // adjust for maxWidth or maxHeight in contentContainerStyle\n      if (maxStyleDimension && totalDimension > maxStyleDimension) {\n        actualMaxDimension = maxStyleDimension;\n        totalDimension = maxStyleDimension;\n      }\n      // subtract horizontal or vertical padding from totalDimension\n      if (space1 || space2) {\n        totalDimension = totalDimension - space1 - space2;\n      }\n    }\n\n    if (style) {\n      const edgeSpaceDiff = (componentDimension - actualMaxDimension) / 2; // if content is floating in middle of screen get margin on either side\n      const { space1, space2 } = getStyleDimensions(style, horizontal);\n      // only subtract if space is greater than the margin on either side\n      if (space1 > edgeSpaceDiff) {\n        totalDimension = totalDimension - (space1 - edgeSpaceDiff); // subtract the padding minus any remaining margin\n      }\n      if (space2 > edgeSpaceDiff) {\n        totalDimension = totalDimension - (space2 - edgeSpaceDiff); // subtract the padding minus any remaining margin\n      }\n    }\n  }\n\n  return totalDimension;\n}\n\nfunction generateStyles({\n  itemDimension,\n  containerDimension,\n  spacing,\n  fixed,\n  horizontal,\n  fixedSpacing,\n}) {\n  let rowStyle = {\n    flexDirection: 'row',\n    paddingLeft: fixed ? fixedSpacing : spacing,\n    paddingBottom: spacing,\n  };\n\n  let containerStyle = {\n    flexDirection: 'column',\n    justifyContent: 'center',\n    width: fixed ? itemDimension : (containerDimension - spacing),\n    marginRight: fixed ? fixedSpacing : spacing,\n  };\n\n  if (horizontal) {\n    rowStyle = {\n      flexDirection: 'column',\n      paddingTop: fixed ? fixedSpacing : spacing,\n      paddingRight: spacing,\n    };\n\n    containerStyle = {\n      flexDirection: 'row',\n      justifyContent: 'center',\n      height: fixed ? itemDimension : (containerDimension - spacing),\n      marginBottom: fixed ? fixedSpacing : spacing,\n    };\n  }\n\n  return {\n    containerStyle,\n    rowStyle,\n  };\n}\n\nexport { chunkArray, calculateDimensions, generateStyles, getAdjustedTotalDimensions };\n"],"names":["AssetRegistry","module","exports","registerAsset","__packager_asset","scales","name","type","hash","httpServerLocation","height","width","_templateObject","_templateObject2","_templateObject3","_react","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_core","_constant","_utils","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","memo","_ref","item","onPress","useCallback","changeStatusBar","createReplace","APPS","title","jsxs","SContainer","children","jsx","SIcon","source","logo","SText","styled","TouchableOpacity","_taggedTemplateLiteralLoose2","Image","APP_ITEM_SIZE","Text","_assets","policy","IC_POLICY","qa","IC_QA_LOGO","wesign","IC_WESIGN_LOGO","inside","IC_INSIDE_LOGO","_ui","_reactNativeSuperGrid","_AppItem","renderItem","AppItem","navigation","useNavigation","useEffect","addListener","ScreenWrapper","LeftModalHeader","hideCloseIcon","FlatGrid","itemDimension","data","_statusBar","keys","forEach","enumerable","_reactNative","content","StatusBar","pushStackEntry","barStyle","animated","_propTypes","_interopRequireDefault","_excluded","forwardRef","props","ref","style","spacing","fixed","horizontal","onLayout","staticDimension","maxDimension","externalRowStyle","additionalRowStyle","itemContainerStyle","keyExtractor","invertedRow","maxItemsPerRow","adjustGridToStyles","_props$customFlatList","customFlatList","FlatListComponent","FlatList","onItemsPerRowChange","restProps","_objectWithoutProperties2","items","Error","_useState","useState","defaultTotalDimension","dimension","getAdjustedTotalDimensions","totalDimension","Dimensions","contentContainerStyle","_useState2","_slicedToArray2","setTotalDimension","onLayoutLocal","e","nativeEvent","layout","newTotalDimension","renderRow","_ref2","rowItems","rowIndex","separators","isLastRow","itemsPerRow","rowStyle","containerStyle","assign","marginBottom","marginRight","View","map","index","i","_useMemo","useMemo","calculateDimensions","containerDimension","fixedSpacing","_useMemo2","generateStyles","rows","chunkArray","r","reverse","localKeyExtractor","rowItem","rowItemIndex","join","extraData","_ref3","length","paddingLeft","paddingTop","displayName","propTypes","PropTypes","func","isRequired","arrayOf","any","number","bool","oneOfType","object","array","listKey","string","elementType","defaultProps","undefined","SectionGrid","sections","originalRenderItem","_props$customSectionL","customSectionList","SectionListComponent","SectionList","onLocalLayout","section","isFirstRow","marginTop","groupSectionsFunc","chunkedData","$0","s","originalData","groupedSections","_FlatGrid","_SectionGrid","availableDimension","itemTotalDimension","Math","min","floor","Infinity","arguments","size","reduce","acc","val","push","last","flexDirection","paddingBottom","justifyContent","paddingRight","_ref2$horizontal","_ref2$adjustGridToSty","componentDimension","actualMaxDimension","_getStyleDimensions","getStyleDimensions","space1","space2","maxStyleDimension","edgeSpaceDiff","_getStyleDimensions2","flatStyle","Array","isArray","StyleSheet","flatten","sMaxDimensionXY","sPaddingXY","sPadding1","sPadding2","padding","padding1","padding2"],"sourceRoot":""}