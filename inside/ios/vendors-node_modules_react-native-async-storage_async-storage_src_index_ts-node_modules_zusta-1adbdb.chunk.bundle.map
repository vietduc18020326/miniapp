{"version":3,"file":"vendors-node_modules_react-native-async-storage_async-storage_src_index_ts-node_modules_zusta-1adbdb.chunk.bundle","mappings":"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","sources":["webpack:///./node_modules/@react-native-async-storage/async-storage/src/AsyncStorage.native.ts","webpack:///./node_modules/@react-native-async-storage/async-storage/src/RCTAsyncStorage.ts","webpack:///./node_modules/@react-native-async-storage/async-storage/src/helpers.ts","webpack:///./node_modules/@react-native-async-storage/async-storage/src/hooks.ts","webpack:///./node_modules/@react-native-async-storage/async-storage/src/index.ts","webpack:///./node_modules/@react-native-async-storage/async-storage/src/shouldFallbackToLegacyNativeModule.ts","webpack:///./node_modules/zustand/middleware.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  checkValidArgs,\n  checkValidInput,\n  convertError,\n  convertErrors,\n} from './helpers';\nimport RCTAsyncStorage from './RCTAsyncStorage';\nimport type {\n  AsyncStorageStatic,\n  ErrorLike,\n  KeyValuePair,\n  MultiRequest,\n} from './types';\n\nif (!RCTAsyncStorage) {\n  throw new Error(`[@RNC/AsyncStorage]: NativeModule: AsyncStorage is null.\n\nTo fix this issue try these steps:\n\n  • Uninstall, rebuild and restart the app.\n\n  • Run the packager with \\`--reset-cache\\` flag.\n\n  • If you are using CocoaPods on iOS, run \\`pod install\\` in the \\`ios\\` directory, then rebuild and re-run the app.\n\n  • Make sure your project's \\`package.json\\` depends on \\`@react-native-async-storage/async-storage\\`, even if you only depend on it indirectly through other dependencies. CLI only autolinks native modules found in your \\`package.json\\`.\n\n  • If this happens while testing with Jest, check out how to integrate AsyncStorage here: https://react-native-async-storage.github.io/async-storage/docs/advanced/jest\n\nIf none of these fix the issue, please open an issue on the GitHub repository: https://github.com/react-native-async-storage/async-storage/issues\n`);\n}\n\n/**\n * `AsyncStorage` is a simple, unencrypted, asynchronous, persistent, key-value\n * storage system that is global to the app. It should be used instead of\n * LocalStorage.\n *\n * See https://react-native-async-storage.github.io/async-storage/docs/api\n */\nconst AsyncStorage = ((): AsyncStorageStatic => {\n  let _getRequests: MultiRequest[] = [];\n  let _getKeys: string[] = [];\n  let _immediate: ReturnType<typeof setImmediate> | null = null;\n\n  return {\n    /**\n     * Fetches an item for a `key` and invokes a callback upon completion.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#getitem\n     */\n    getItem: (key, callback) => {\n      return new Promise((resolve, reject) => {\n        checkValidInput(key);\n        RCTAsyncStorage.multiGet(\n          [key],\n          (errors?: ErrorLike[], result?: string[][]) => {\n            // Unpack result to get value from [[key,value]]\n            const value = result?.[0]?.[1] ? result[0][1] : null;\n            const errs = convertErrors(errors);\n            callback?.(errs?.[0], value);\n            if (errs) {\n              reject(errs[0]);\n            } else {\n              resolve(value);\n            }\n          }\n        );\n      });\n    },\n\n    /**\n     * Sets the value for a `key` and invokes a callback upon completion.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#setitem\n     */\n    setItem: (key, value, callback) => {\n      return new Promise((resolve, reject) => {\n        checkValidInput(key, value);\n        RCTAsyncStorage.multiSet([[key, value]], (errors?: ErrorLike[]) => {\n          const errs = convertErrors(errors);\n          callback?.(errs?.[0]);\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Removes an item for a `key` and invokes a callback upon completion.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#removeitem\n     */\n    removeItem: (key, callback) => {\n      return new Promise((resolve, reject) => {\n        checkValidInput(key);\n        RCTAsyncStorage.multiRemove([key], (errors?: ErrorLike[]) => {\n          const errs = convertErrors(errors);\n          callback?.(errs?.[0]);\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Merges an existing `key` value with an input value, assuming both values\n     * are stringified JSON.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#mergeitem\n     */\n    mergeItem: (key, value, callback) => {\n      return new Promise((resolve, reject) => {\n        checkValidInput(key, value);\n        RCTAsyncStorage.multiMerge([[key, value]], (errors?: ErrorLike[]) => {\n          const errs = convertErrors(errors);\n          callback?.(errs?.[0]);\n          if (errs) {\n            reject(errs[0]);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Erases *all* `AsyncStorage` for all clients, libraries, etc. You probably\n     * don't want to call this; use `removeItem` or `multiRemove` to clear only\n     * your app's keys.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#clear\n     */\n    clear: (callback) => {\n      return new Promise((resolve, reject) => {\n        RCTAsyncStorage.clear((error?: ErrorLike) => {\n          const err = convertError(error);\n          callback?.(err);\n          if (err) {\n            reject(err);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Gets *all* keys known to your app; for all callers, libraries, etc.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#getallkeys\n     */\n    getAllKeys: (callback) => {\n      return new Promise((resolve, reject) => {\n        RCTAsyncStorage.getAllKeys((error?: ErrorLike, keys?: string[]) => {\n          const err = convertError(error);\n          callback?.(err, keys);\n          if (keys) {\n            resolve(keys);\n          } else {\n            reject(err);\n          }\n        });\n      });\n    },\n\n    /**\n     * The following batched functions are useful for executing a lot of\n     * operations at once, allowing for native optimizations and provide the\n     * convenience of a single callback after all operations are complete.\n     *\n     * These functions return arrays of errors, potentially one for every key.\n     * For key-specific errors, the Error object will have a key property to\n     * indicate which key caused the error.\n     */\n\n    /**\n     * Flushes any pending requests using a single batch call to get the data.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#flushgetrequests\n     * */\n    flushGetRequests: () => {\n      const getRequests = _getRequests;\n      const getKeys = _getKeys;\n\n      _getRequests = [];\n      _getKeys = [];\n\n      RCTAsyncStorage.multiGet(\n        getKeys,\n        (errors?: ErrorLike[], result?: string[][]) => {\n          // Even though the runtime complexity of this is theoretically worse vs if we used a map,\n          // it's much, much faster in practice for the data sets we deal with (we avoid\n          // allocating result pair arrays). This was heavily benchmarked.\n          //\n          // Is there a way to avoid using the map but fix the bug in this breaking test?\n          // https://github.com/facebook/react-native/commit/8dd8ad76579d7feef34c014d387bf02065692264\n          const map: Record<string, string> = {};\n          result?.forEach(([key, value]) => {\n            map[key] = value;\n            return value;\n          });\n          const reqLength = getRequests.length;\n\n          /**\n           * As mentioned few lines above, this method could be called with the array of potential error,\n           * in case of anything goes wrong. The problem is, if any of the batched calls fails\n           * the rest of them would fail too, but the error would be consumed by just one. The rest\n           * would simply return `undefined` as their result, rendering false negatives.\n           *\n           * In order to avoid this situation, in case of any call failing,\n           * the rest of them will be rejected as well (with the same error).\n           */\n          const errorList = convertErrors(errors);\n          const error = errorList?.length ? errorList[0] : null;\n\n          for (let i = 0; i < reqLength; i++) {\n            const request = getRequests[i];\n            if (error) {\n              request.callback?.(errorList);\n              request.reject?.(error);\n              continue;\n            }\n            const requestResult = request.keys.map<KeyValuePair>((key) => [\n              key,\n              map[key],\n            ]);\n            request.callback?.(null, requestResult);\n            request.resolve?.(requestResult);\n          }\n        }\n      );\n    },\n\n    /**\n     * This allows you to batch the fetching of items given an array of `key`\n     * inputs. Your callback will be invoked with an array of corresponding\n     * key-value pairs found.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#multiget\n     */\n    multiGet: (keys, callback) => {\n      if (!_immediate) {\n        _immediate = setImmediate(() => {\n          _immediate = null;\n          AsyncStorage.flushGetRequests();\n        });\n      }\n\n      const getRequest: MultiRequest = {\n        keys: keys,\n        callback: callback,\n        // do we need this?\n        keyIndex: _getKeys.length,\n        resolve: null as any,\n        reject: null as any,\n      };\n\n      const promiseResult = new Promise<readonly KeyValuePair[]>(\n        (resolve, reject) => {\n          getRequest.resolve = resolve;\n          getRequest.reject = reject;\n        }\n      );\n\n      _getRequests.push(getRequest);\n      // avoid fetching duplicates\n      keys.forEach((key) => {\n        if (_getKeys.indexOf(key) === -1) {\n          _getKeys.push(key);\n        }\n      });\n\n      return promiseResult;\n    },\n\n    /**\n     * Use this as a batch operation for storing multiple key-value pairs. When\n     * the operation completes you'll get a single callback with any errors.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#multiset\n     */\n    multiSet: (keyValuePairs, callback) => {\n      checkValidArgs(keyValuePairs, callback);\n      return new Promise((resolve, reject) => {\n        keyValuePairs.forEach(([key, value]) => {\n          checkValidInput(key, value);\n        });\n\n        RCTAsyncStorage.multiSet(keyValuePairs, (errors?: ErrorLike[]) => {\n          const error = convertErrors(errors);\n          callback?.(error);\n          if (error) {\n            reject(error);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Call this to batch the deletion of all keys in the `keys` array.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#multiremove\n     */\n    multiRemove: (keys, callback) => {\n      return new Promise((resolve, reject) => {\n        keys.forEach((key) => checkValidInput(key));\n\n        RCTAsyncStorage.multiRemove(keys, (errors?: ErrorLike[]) => {\n          const error = convertErrors(errors);\n          callback?.(error);\n          if (error) {\n            reject(error);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n\n    /**\n     * Batch operation to merge in existing and new values for a given set of\n     * keys. This assumes that the values are stringified JSON.\n     *\n     * See https://react-native-async-storage.github.io/async-storage/docs/api#multimerge\n     */\n    multiMerge: (keyValuePairs, callback) => {\n      return new Promise((resolve, reject) => {\n        RCTAsyncStorage.multiMerge(keyValuePairs, (errors?: ErrorLike[]) => {\n          const error = convertErrors(errors);\n          callback?.(error);\n          if (error) {\n            reject(error);\n          } else {\n            resolve();\n          }\n        });\n      });\n    },\n  };\n})();\n\nexport default AsyncStorage;\n","// @ts-ignore Module '\"react-native\"' has no exported member 'TurboModuleRegistry'.\nimport { NativeModules, TurboModuleRegistry } from 'react-native';\nimport { shouldFallbackToLegacyNativeModule } from './shouldFallbackToLegacyNativeModule';\n\n// TurboModuleRegistry falls back to NativeModules so we don't have to try go\n// assign NativeModules' counterparts if TurboModuleRegistry would resolve\n// with undefined.\nlet RCTAsyncStorage = TurboModuleRegistry\n  ? TurboModuleRegistry.get('PlatformLocalStorage') || // Support for external modules, like react-native-windows\n    TurboModuleRegistry.get('RNC_AsyncSQLiteDBStorage') ||\n    TurboModuleRegistry.get('RNCAsyncStorage')\n  : NativeModules['PlatformLocalStorage'] || // Support for external modules, like react-native-windows\n    NativeModules['RNC_AsyncSQLiteDBStorage'] ||\n    NativeModules['RNCAsyncStorage'];\n\nif (!RCTAsyncStorage && shouldFallbackToLegacyNativeModule()) {\n  if (TurboModuleRegistry) {\n    RCTAsyncStorage =\n      TurboModuleRegistry.get('AsyncSQLiteDBStorage') ||\n      TurboModuleRegistry.get('AsyncLocalStorage');\n  } else {\n    RCTAsyncStorage =\n      NativeModules['AsyncSQLiteDBStorage'] ||\n      NativeModules['AsyncLocalStorage'];\n  }\n}\n\nexport default RCTAsyncStorage;\n","import type { ErrorLike } from './types';\n\nexport function checkValidArgs(keyValuePairs: unknown[], callback: unknown) {\n  if (\n    !Array.isArray(keyValuePairs) ||\n    keyValuePairs.length === 0 ||\n    !Array.isArray(keyValuePairs[0])\n  ) {\n    throw new Error(\n      '[AsyncStorage] Expected array of key-value pairs as first argument to multiSet'\n    );\n  }\n\n  if (callback && typeof callback !== 'function') {\n    if (Array.isArray(callback)) {\n      throw new Error(\n        '[AsyncStorage] Expected function as second argument to multiSet. Did you forget to wrap key-value pairs in an array for the first argument?'\n      );\n    }\n\n    throw new Error(\n      '[AsyncStorage] Expected function as second argument to multiSet'\n    );\n  }\n}\n\nexport function checkValidInput(...input: unknown[]) {\n  const [key, value] = input;\n\n  if (typeof key !== 'string') {\n    console.warn(\n      `[AsyncStorage] Using ${typeof key} type for key is not supported. This can lead to unexpected behavior/errors. Use string instead.\\nKey passed: ${key}\\n`\n    );\n  }\n\n  if (input.length > 1 && typeof value !== 'string') {\n    if (value == null) {\n      throw new Error(\n        `[AsyncStorage] Passing null/undefined as value is not supported. If you want to remove value, Use .removeItem method instead.\\nPassed value: ${value}\\nPassed key: ${key}\\n`\n      );\n    } else {\n      console.warn(\n        `[AsyncStorage] The value for key \"${key}\" is not a string. This can lead to unexpected behavior/errors. Consider stringifying it.\\nPassed value: ${value}\\nPassed key: ${key}\\n`\n      );\n    }\n  }\n}\n\nexport function convertError(error?: ErrorLike): Error | null {\n  if (!error) {\n    return null;\n  }\n\n  const out = new Error(error.message);\n  (out as any).key = error.key;\n  return out;\n}\n\nexport function convertErrors(\n  errs?: ErrorLike[]\n): ReadonlyArray<Error | null> | null {\n  const errors = ensureArray(errs);\n  return errors ? errors.map((e) => convertError(e)) : null;\n}\n\nfunction ensureArray(e?: ErrorLike | ErrorLike[]): ErrorLike[] | null {\n  if (Array.isArray(e)) {\n    return e.length === 0 ? null : e;\n  } else if (e) {\n    return [e];\n  } else {\n    return null;\n  }\n}\n","import AsyncStorage from './AsyncStorage';\nimport type { AsyncStorageHook } from './types';\n\nexport function useAsyncStorage(key: string): AsyncStorageHook {\n  return {\n    getItem: (...args) => AsyncStorage.getItem(key, ...args),\n    setItem: (...args) => AsyncStorage.setItem(key, ...args),\n    mergeItem: (...args) => AsyncStorage.mergeItem(key, ...args),\n    removeItem: (...args) => AsyncStorage.removeItem(key, ...args),\n  };\n}\n","import AsyncStorage from './AsyncStorage';\n\nexport { useAsyncStorage } from './hooks';\n\nexport type { AsyncStorageStatic } from './types';\n\nexport default AsyncStorage;\n","import { NativeModules } from 'react-native';\n\nexport function shouldFallbackToLegacyNativeModule(): boolean {\n  const expoConstants =\n    NativeModules['NativeUnimoduleProxy']?.modulesConstants?.ExponentConstants;\n\n  if (expoConstants) {\n    /**\n     * In SDK <= 39, appOwnership is defined in managed apps but executionEnvironment is not.\n     * In bare React Native apps using expo-constants, appOwnership is never defined, so\n     * isLegacySdkVersion will be false in that context.\n     */\n    const isLegacySdkVersion =\n      expoConstants.appOwnership && !expoConstants.executionEnvironment;\n\n    /**\n     * Expo managed apps don't include the @react-native-async-storage/async-storage\n     * native modules yet, but the API interface is the same, so we can use the version\n     * exported from React Native still.\n     *\n     * If in future releases (eg: @react-native-async-storage/async-storage >= 2.0.0) this\n     * will likely not be valid anymore, and the package will need to be included in the Expo SDK\n     * to continue to work.\n     */\n    if (\n      isLegacySdkVersion ||\n      ['storeClient', 'standalone'].includes(expoConstants.executionEnvironment)\n    ) {\n      return true;\n    }\n  }\n\n  return false;\n}\n","'use strict';\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nvar reduxImpl = function reduxImpl(reducer, initial) {\n  return function (set, _get, api) {\n    api.dispatch = function (action) {\n      set(function (state) {\n        return reducer(state, action);\n      }, false, action);\n      return action;\n    };\n    api.dispatchFromDevtools = true;\n    return _extends({\n      dispatch: function dispatch() {\n        var _ref;\n        return (_ref = api).dispatch.apply(_ref, arguments);\n      }\n    }, initial);\n  };\n};\nvar redux = reduxImpl;\n\nvar _excluded = [\"enabled\", \"anonymousActionType\", \"store\"],\n  _excluded2 = [\"connection\"];\nvar trackedConnections = new Map();\nvar getTrackedConnectionState = function getTrackedConnectionState(name) {\n  var api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(Object.entries(api.stores).map(function (_ref) {\n    var key = _ref[0],\n      api = _ref[1];\n    return [key, api.getState()];\n  }));\n};\nvar extractConnectionInformation = function extractConnectionInformation(store, extensionConnector, options) {\n  if (store === undefined) {\n    return {\n      type: 'untracked',\n      connection: extensionConnector.connect(options)\n    };\n  }\n  var existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return _extends({\n      type: 'tracked',\n      store: store\n    }, existingConnection);\n  }\n  var newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return _extends({\n    type: 'tracked',\n    store: store\n  }, newConnection);\n};\nvar devtoolsImpl = function devtoolsImpl(fn, devtoolsOptions) {\n  if (devtoolsOptions === void 0) {\n    devtoolsOptions = {};\n  }\n  return function (set, get, api) {\n    var _devtoolsOptions = devtoolsOptions,\n      enabled = _devtoolsOptions.enabled,\n      anonymousActionType = _devtoolsOptions.anonymousActionType,\n      store = _devtoolsOptions.store,\n      options = _objectWithoutPropertiesLoose(_devtoolsOptions, _excluded);\n    var extensionConnector;\n    try {\n      extensionConnector = (enabled != null ? enabled : process.env.NODE_ENV !== 'production') && window.__REDUX_DEVTOOLS_EXTENSION__;\n    } catch (e) {}\n    if (!extensionConnector) {\n      if (process.env.NODE_ENV !== 'production' && enabled) {\n        console.warn('[zustand devtools middleware] Please install/enable Redux devtools extension');\n      }\n      return fn(set, get, api);\n    }\n    var _extractConnectionInf = extractConnectionInformation(store, extensionConnector, options),\n      connection = _extractConnectionInf.connection,\n      connectionInformation = _objectWithoutPropertiesLoose(_extractConnectionInf, _excluded2);\n    var isRecording = true;\n    api.setState = function (state, replace, nameOrAction) {\n      var _extends2;\n      var r = set(state, replace);\n      if (!isRecording) return r;\n      var action = nameOrAction === undefined ? {\n        type: anonymousActionType || 'anonymous'\n      } : typeof nameOrAction === 'string' ? {\n        type: nameOrAction\n      } : nameOrAction;\n      if (store === undefined) {\n        connection == null ? void 0 : connection.send(action, get());\n        return r;\n      }\n      connection == null ? void 0 : connection.send(_extends({}, action, {\n        type: store + \"/\" + action.type\n      }), _extends({}, getTrackedConnectionState(options.name), (_extends2 = {}, _extends2[store] = api.getState(), _extends2)));\n      return r;\n    };\n    var setStateFromDevtools = function setStateFromDevtools() {\n      var originalIsRecording = isRecording;\n      isRecording = false;\n      set.apply(void 0, arguments);\n      isRecording = originalIsRecording;\n    };\n    var initialState = fn(api.setState, get, api);\n    if (connectionInformation.type === 'untracked') {\n      connection == null ? void 0 : connection.init(initialState);\n    } else {\n      connectionInformation.stores[connectionInformation.store] = api;\n      connection == null ? void 0 : connection.init(Object.fromEntries(Object.entries(connectionInformation.stores).map(function (_ref2) {\n        var key = _ref2[0],\n          store = _ref2[1];\n        return [key, key === connectionInformation.store ? initialState : store.getState()];\n      })));\n    }\n    if (api.dispatchFromDevtools && typeof api.dispatch === 'function') {\n      var didWarnAboutReservedActionType = false;\n      var originalDispatch = api.dispatch;\n      api.dispatch = function () {\n        for (var _len = arguments.length, a = new Array(_len), _key = 0; _key < _len; _key++) {\n          a[_key] = arguments[_key];\n        }\n        if (process.env.NODE_ENV !== 'production' && a[0].type === '__setState' && !didWarnAboutReservedActionType) {\n          console.warn('[zustand devtools middleware] \"__setState\" action type is reserved ' + 'to set state from the devtools. Avoid using it.');\n          didWarnAboutReservedActionType = true;\n        }\n        originalDispatch.apply(void 0, a);\n      };\n    }\n    connection.subscribe(function (message) {\n      switch (message.type) {\n        case 'ACTION':\n          if (typeof message.payload !== 'string') {\n            console.error('[zustand devtools middleware] Unsupported action format');\n            return;\n          }\n          return parseJsonThen(message.payload, function (action) {\n            if (action.type === '__setState') {\n              if (store === undefined) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\"\\n                    [zustand devtools middleware] Unsupported __setState action format. \\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\\n                    and value of this only key should be a state object. Example: { \\\"type\\\": \\\"__setState\\\", \\\"state\\\": { \\\"abc123Store\\\": { \\\"foo\\\": \\\"bar\\\" } } }\\n                    \");\n              }\n              var stateFromDevtools = action.state[store];\n              if (stateFromDevtools === undefined || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== 'function') return;\n            api.dispatch(action);\n          });\n        case 'DISPATCH':\n          switch (message.payload.type) {\n            case 'RESET':\n              setStateFromDevtools(initialState);\n              if (store === undefined) {\n                return connection == null ? void 0 : connection.init(api.getState());\n              }\n              return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            case 'COMMIT':\n              if (store === undefined) {\n                connection == null ? void 0 : connection.init(api.getState());\n                return;\n              }\n              return connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n            case 'ROLLBACK':\n              return parseJsonThen(message.state, function (state) {\n                if (store === undefined) {\n                  setStateFromDevtools(state);\n                  connection == null ? void 0 : connection.init(api.getState());\n                  return;\n                }\n                setStateFromDevtools(state[store]);\n                connection == null ? void 0 : connection.init(getTrackedConnectionState(options.name));\n              });\n            case 'JUMP_TO_STATE':\n            case 'JUMP_TO_ACTION':\n              return parseJsonThen(message.state, function (state) {\n                if (store === undefined) {\n                  setStateFromDevtools(state);\n                  return;\n                }\n                if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                  setStateFromDevtools(state[store]);\n                }\n              });\n            case 'IMPORT_STATE':\n              {\n                var _nextLiftedState$comp;\n                var nextLiftedState = message.payload.nextLiftedState;\n                var lastComputedState = (_nextLiftedState$comp = nextLiftedState.computedStates.slice(-1)[0]) == null ? void 0 : _nextLiftedState$comp.state;\n                if (!lastComputedState) return;\n                if (store === undefined) {\n                  setStateFromDevtools(lastComputedState);\n                } else {\n                  setStateFromDevtools(lastComputedState[store]);\n                }\n                connection == null ? void 0 : connection.send(null, nextLiftedState);\n                return;\n              }\n            case 'PAUSE_RECORDING':\n              return isRecording = !isRecording;\n          }\n          return;\n      }\n    });\n    return initialState;\n  };\n};\nvar devtools = devtoolsImpl;\nvar parseJsonThen = function parseJsonThen(stringified, f) {\n  var parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error('[zustand devtools middleware] Could not parse the received json', e);\n  }\n  if (parsed !== undefined) f(parsed);\n};\n\nvar subscribeWithSelectorImpl = function subscribeWithSelectorImpl(fn) {\n  return function (set, get, api) {\n    var origSubscribe = api.subscribe;\n    api.subscribe = function (selector, optListener, options) {\n      var listener = selector;\n      if (optListener) {\n        var equalityFn = (options == null ? void 0 : options.equalityFn) || Object.is;\n        var currentSlice = selector(api.getState());\n        listener = function listener(state) {\n          var nextSlice = selector(state);\n          if (!equalityFn(currentSlice, nextSlice)) {\n            var previousSlice = currentSlice;\n            optListener(currentSlice = nextSlice, previousSlice);\n          }\n        };\n        if (options != null && options.fireImmediately) {\n          optListener(currentSlice, currentSlice);\n        }\n      }\n      return origSubscribe(listener);\n    };\n    var initialState = fn(set, get, api);\n    return initialState;\n  };\n};\nvar subscribeWithSelector = subscribeWithSelectorImpl;\n\nvar combine = function combine(initialState, create) {\n  return function () {\n    return Object.assign({}, initialState, create.apply(void 0, arguments));\n  };\n};\n\nfunction createJSONStorage(getStorage, options) {\n  var storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  var persistStorage = {\n    getItem: function getItem(name) {\n      var _getItem;\n      var parse = function parse(str) {\n        if (str === null) {\n          return null;\n        }\n        return JSON.parse(str, options == null ? void 0 : options.reviver);\n      };\n      var str = (_getItem = storage.getItem(name)) != null ? _getItem : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: function setItem(name, newValue) {\n      return storage.setItem(name, JSON.stringify(newValue, options == null ? void 0 : options.replacer));\n    },\n    removeItem: function removeItem(name) {\n      return storage.removeItem(name);\n    }\n  };\n  return persistStorage;\n}\nvar toThenable = function toThenable(fn) {\n  return function (input) {\n    try {\n      var result = fn(input);\n      if (result instanceof Promise) {\n        return result;\n      }\n      return {\n        then: function then(onFulfilled) {\n          return toThenable(onFulfilled)(result);\n        },\n        catch: function _catch(_onRejected) {\n          return this;\n        }\n      };\n    } catch (e) {\n      return {\n        then: function then(_onFulfilled) {\n          return this;\n        },\n        catch: function _catch(onRejected) {\n          return toThenable(onRejected)(e);\n        }\n      };\n    }\n  };\n};\nvar oldImpl = function oldImpl(config, baseOptions) {\n  return function (set, get, api) {\n    var options = _extends({\n      getStorage: function getStorage() {\n        return localStorage;\n      },\n      serialize: JSON.stringify,\n      deserialize: JSON.parse,\n      partialize: function partialize(state) {\n        return state;\n      },\n      version: 0,\n      merge: function merge(persistedState, currentState) {\n        return _extends({}, currentState, persistedState);\n      }\n    }, baseOptions);\n    var _hasHydrated = false;\n    var hydrationListeners = new Set();\n    var finishHydrationListeners = new Set();\n    var storage;\n    try {\n      storage = options.getStorage();\n    } catch (e) {}\n    if (!storage) {\n      return config(function () {\n        console.warn(\"[zustand persist middleware] Unable to update item '\" + options.name + \"', the given storage is currently unavailable.\");\n        set.apply(void 0, arguments);\n      }, get, api);\n    }\n    var thenableSerialize = toThenable(options.serialize);\n    var setItem = function setItem() {\n      var state = options.partialize(_extends({}, get()));\n      var errorInSync;\n      var thenable = thenableSerialize({\n        state: state,\n        version: options.version\n      }).then(function (serializedValue) {\n        return storage.setItem(options.name, serializedValue);\n      }).catch(function (e) {\n        errorInSync = e;\n      });\n      if (errorInSync) {\n        throw errorInSync;\n      }\n      return thenable;\n    };\n    var savedSetState = api.setState;\n    api.setState = function (state, replace) {\n      savedSetState(state, replace);\n      void setItem();\n    };\n    var configResult = config(function () {\n      set.apply(void 0, arguments);\n      void setItem();\n    }, get, api);\n    var stateFromStorage;\n    var hydrate = function hydrate() {\n      if (!storage) return;\n      _hasHydrated = false;\n      hydrationListeners.forEach(function (cb) {\n        return cb(get());\n      });\n      var postRehydrationCallback = (options.onRehydrateStorage == null ? void 0 : options.onRehydrateStorage(get())) || undefined;\n      return toThenable(storage.getItem.bind(storage))(options.name).then(function (storageValue) {\n        if (storageValue) {\n          return options.deserialize(storageValue);\n        }\n      }).then(function (deserializedStorageValue) {\n        if (deserializedStorageValue) {\n          if (typeof deserializedStorageValue.version === 'number' && deserializedStorageValue.version !== options.version) {\n            if (options.migrate) {\n              return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);\n            }\n            console.error(\"State loaded from storage couldn't be migrated since no migrate function was provided\");\n          } else {\n            return deserializedStorageValue.state;\n          }\n        }\n      }).then(function (migratedState) {\n        var _get;\n        stateFromStorage = options.merge(migratedState, (_get = get()) != null ? _get : configResult);\n        set(stateFromStorage, true);\n        return setItem();\n      }).then(function () {\n        postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, undefined);\n        _hasHydrated = true;\n        finishHydrationListeners.forEach(function (cb) {\n          return cb(stateFromStorage);\n        });\n      }).catch(function (e) {\n        postRehydrationCallback == null ? void 0 : postRehydrationCallback(undefined, e);\n      });\n    };\n    api.persist = {\n      setOptions: function setOptions(newOptions) {\n        options = _extends({}, options, newOptions);\n        if (newOptions.getStorage) {\n          storage = newOptions.getStorage();\n        }\n      },\n      clearStorage: function clearStorage() {\n        var _storage;\n        (_storage = storage) == null ? void 0 : _storage.removeItem(options.name);\n      },\n      getOptions: function getOptions() {\n        return options;\n      },\n      rehydrate: function rehydrate() {\n        return hydrate();\n      },\n      hasHydrated: function hasHydrated() {\n        return _hasHydrated;\n      },\n      onHydrate: function onHydrate(cb) {\n        hydrationListeners.add(cb);\n        return function () {\n          hydrationListeners.delete(cb);\n        };\n      },\n      onFinishHydration: function onFinishHydration(cb) {\n        finishHydrationListeners.add(cb);\n        return function () {\n          finishHydrationListeners.delete(cb);\n        };\n      }\n    };\n    hydrate();\n    return stateFromStorage || configResult;\n  };\n};\nvar newImpl = function newImpl(config, baseOptions) {\n  return function (set, get, api) {\n    var options = _extends({\n      storage: createJSONStorage(function () {\n        return localStorage;\n      }),\n      partialize: function partialize(state) {\n        return state;\n      },\n      version: 0,\n      merge: function merge(persistedState, currentState) {\n        return _extends({}, currentState, persistedState);\n      }\n    }, baseOptions);\n    var _hasHydrated2 = false;\n    var hydrationListeners = new Set();\n    var finishHydrationListeners = new Set();\n    var storage = options.storage;\n    if (!storage) {\n      return config(function () {\n        console.warn(\"[zustand persist middleware] Unable to update item '\" + options.name + \"', the given storage is currently unavailable.\");\n        set.apply(void 0, arguments);\n      }, get, api);\n    }\n    var setItem = function setItem() {\n      var state = options.partialize(_extends({}, get()));\n      return storage.setItem(options.name, {\n        state: state,\n        version: options.version\n      });\n    };\n    var savedSetState = api.setState;\n    api.setState = function (state, replace) {\n      savedSetState(state, replace);\n      void setItem();\n    };\n    var configResult = config(function () {\n      set.apply(void 0, arguments);\n      void setItem();\n    }, get, api);\n    var stateFromStorage;\n    var hydrate = function hydrate() {\n      var _get3;\n      if (!storage) return;\n      _hasHydrated2 = false;\n      hydrationListeners.forEach(function (cb) {\n        var _get2;\n        return cb((_get2 = get()) != null ? _get2 : configResult);\n      });\n      var postRehydrationCallback = (options.onRehydrateStorage == null ? void 0 : options.onRehydrateStorage((_get3 = get()) != null ? _get3 : configResult)) || undefined;\n      return toThenable(storage.getItem.bind(storage))(options.name).then(function (deserializedStorageValue) {\n        if (deserializedStorageValue) {\n          if (typeof deserializedStorageValue.version === 'number' && deserializedStorageValue.version !== options.version) {\n            if (options.migrate) {\n              return options.migrate(deserializedStorageValue.state, deserializedStorageValue.version);\n            }\n            console.error(\"State loaded from storage couldn't be migrated since no migrate function was provided\");\n          } else {\n            return deserializedStorageValue.state;\n          }\n        }\n      }).then(function (migratedState) {\n        var _get4;\n        stateFromStorage = options.merge(migratedState, (_get4 = get()) != null ? _get4 : configResult);\n        set(stateFromStorage, true);\n        return setItem();\n      }).then(function () {\n        postRehydrationCallback == null ? void 0 : postRehydrationCallback(stateFromStorage, undefined);\n        stateFromStorage = get();\n        _hasHydrated2 = true;\n        finishHydrationListeners.forEach(function (cb) {\n          return cb(stateFromStorage);\n        });\n      }).catch(function (e) {\n        postRehydrationCallback == null ? void 0 : postRehydrationCallback(undefined, e);\n      });\n    };\n    api.persist = {\n      setOptions: function setOptions(newOptions) {\n        options = _extends({}, options, newOptions);\n        if (newOptions.storage) {\n          storage = newOptions.storage;\n        }\n      },\n      clearStorage: function clearStorage() {\n        var _storage2;\n        (_storage2 = storage) == null ? void 0 : _storage2.removeItem(options.name);\n      },\n      getOptions: function getOptions() {\n        return options;\n      },\n      rehydrate: function rehydrate() {\n        return hydrate();\n      },\n      hasHydrated: function hasHydrated() {\n        return _hasHydrated2;\n      },\n      onHydrate: function onHydrate(cb) {\n        hydrationListeners.add(cb);\n        return function () {\n          hydrationListeners.delete(cb);\n        };\n      },\n      onFinishHydration: function onFinishHydration(cb) {\n        finishHydrationListeners.add(cb);\n        return function () {\n          finishHydrationListeners.delete(cb);\n        };\n      }\n    };\n    if (!options.skipHydration) {\n      hydrate();\n    }\n    return stateFromStorage || configResult;\n  };\n};\nvar persistImpl = function persistImpl(config, baseOptions) {\n  if ('getStorage' in baseOptions || 'serialize' in baseOptions || 'deserialize' in baseOptions) {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('[DEPRECATED] `getStorage`, `serialize` and `deserialize` options are deprecated. Use `storage` option instead.');\n    }\n    return oldImpl(config, baseOptions);\n  }\n  return newImpl(config, baseOptions);\n};\nvar persist = persistImpl;\n\nexports.combine = combine;\nexports.createJSONStorage = createJSONStorage;\nexports.devtools = devtools;\nexports.persist = persist;\nexports.redux = redux;\nexports.subscribeWithSelector = subscribeWithSelector;\n"],"names":["_helpers","require","_RCTAsyncStorage","_interopRequireDefault","RCTAsyncStorage","Error","_getRequests","_getKeys","_immediate","AsyncStorage","getItem","key","callback","Promise","resolve","reject","checkValidInput","multiGet","errors","result","_result$","value","errs","convertErrors","setItem","multiSet","removeItem","multiRemove","mergeItem","multiMerge","clear","error","err","convertError","getAllKeys","keys","flushGetRequests","getRequests","getKeys","map","forEach","_ref","_ref2","_slicedToArray2","default","reqLength","length","errorList","i","request","requestResult","setImmediate","getRequest","keyIndex","promiseResult","push","indexOf","keyValuePairs","checkValidArgs","_ref3","_ref4","_default","exports","_reactNative","_shouldFallbackToLegacyNativeModule","TurboModuleRegistry","get","NativeModules","shouldFallbackToLegacyNativeModule","out","message","Array","isArray","_len","arguments","input","_key","console","warn","e","args","apply","concat","_len2","_key2","_len3","_key3","_len4","_key4","_AsyncStorage","_hooks","_NativeModules$Native","_NativeModules$Native2","expoConstants","modulesConstants","ExponentConstants","appOwnership","executionEnvironment","includes","_extends","Object","assign","bind","target","source","prototype","hasOwnProperty","call","this","_objectWithoutPropertiesLoose","excluded","sourceKeys","redux","reducer","initial","set","_get","api","dispatch","action","state","dispatchFromDevtools","_excluded","_excluded2","trackedConnections","Map","getTrackedConnectionState","name","fromEntries","entries","stores","getState","devtools","fn","devtoolsOptions","extensionConnector","_devtoolsOptions","enabled","anonymousActionType","store","options","window","__REDUX_DEVTOOLS_EXTENSION__","_extractConnectionInf","undefined","type","connection","connect","existingConnection","newConnection","extractConnectionInformation","connectionInformation","isRecording","setState","replace","nameOrAction","_extends2","r","send","setStateFromDevtools","originalIsRecording","initialState","init","originalDispatch","a","subscribe","payload","parseJsonThen","stateFromDevtools","JSON","stringify","_nextLiftedState$comp","nextLiftedState","lastComputedState","computedStates","slice","stringified","f","parsed","parse","subscribeWithSelector","origSubscribe","selector","optListener","listener","equalityFn","is","currentSlice","nextSlice","previousSlice","fireImmediately","createJSONStorage","getStorage","storage","_getItem","str","reviver","then","newValue","replacer","toThenable","onFulfilled","catch","_onRejected","_onFulfilled","onRejected","persist","config","baseOptions","localStorage","serialize","deserialize","partialize","version","merge","persistedState","currentState","_hasHydrated","hydrationListeners","Set","finishHydrationListeners","thenableSerialize","errorInSync","thenable","serializedValue","savedSetState","stateFromStorage","configResult","hydrate","cb","postRehydrationCallback","onRehydrateStorage","storageValue","deserializedStorageValue","migrate","migratedState","setOptions","newOptions","clearStorage","_storage","getOptions","rehydrate","hasHydrated","onHydrate","add","delete","onFinishHydration","oldImpl","_hasHydrated2","_get3","_get2","_get4","_storage2","skipHydration","newImpl","combine","create"],"sourceRoot":""}