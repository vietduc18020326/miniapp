{"version":3,"file":"src_screens_CreateTopicScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AvatarWithSelectChannel/index.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx","webpack:///./src/screens/CreateTopicScreen/index.tsx","webpack:///./src/store/topics/function.tsx","webpack:///./src/store/topics/type.ts"],"sourcesContent":["import React, {memo, RefObject} from 'react';\nimport {Colors, Fonts, styled, useMe} from '@true/core';\nimport {IC_OUTLINED_EXPAND_MORE} from '@true/asset';\nimport {Avatar, UIButton, UIText, UITextStyle} from '@true/ui';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {globalStyles} from '@/utils/globalStyle';\nimport {\n  useAnimatedStyle,\n  useSharedValue,\n  useWorkletCallback,\n} from 'react-native-reanimated';\nimport {LayoutChangeEvent} from 'react-native';\n\nexport const AvatarWithSelectChannel = memo(function AvatarWithSelectChannel({\n  bottomSheetRef,\n  label,\n  typePost,\n}: {\n  bottomSheetRef: RefObject<BottomSheetModal>;\n  label: string;\n  typePost: string;\n}) {\n  const me = useMe();\n  const widthButton = useSharedValue(200);\n\n  const animatedStyled = useAnimatedStyle(\n    () => ({\n      width: widthButton.value,\n    }),\n    [],\n  );\n  const onViewLayout = useWorkletCallback(\n    (e: LayoutChangeEvent) => {\n      widthButton.value = e.nativeEvent.layout.width;\n    },\n    [widthButton],\n  );\n\n  return (\n    <SRow>\n      <Avatar size={48} userKey={me?.id || '0'} disableClick={true} />\n      <SView>\n        <UIText.BodyMedium500 onLayout={onViewLayout}>\n          {me?.name} create {typePost}\n        </UIText.BodyMedium500>\n        <SButtonSelect\n          style={animatedStyled}\n          title={label ? label : 'Select channel'}\n          onPress={() => {\n            bottomSheetRef.current?.present();\n          }}>\n          <SExpandIcon source={IC_OUTLINED_EXPAND_MORE} />\n        </SButtonSelect>\n      </SView>\n    </SRow>\n  );\n});\n\nconst SRow = styled.View`\n  flex-direction: row;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst SView = styled.View`\n  justify-content: center;\n  gap: 4px;\n`;\nconst SButtonSelect = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_400,\n    color: p.theme.neutral2,\n    width: '85%',\n  },\n  textProps: {\n    numberOfLines: 1,\n  },\n}))`\n  flex-direction: row;\n  border-radius: 40px;\n  border-width: 1px;\n  border-color: ${p => p.theme.neutral5};\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  padding-left: 16px;\n  padding-right: 8px;\n`;\n\nconst SExpandIcon = styled.Image`\n  width: 24px;\n  height: 24px;\n  tint-color: ${p => p.theme.neutral2};\n`;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {IC_OUTLINED_LEFT} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={IC_OUTLINED_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  Fonts,\n  goBack,\n  styled,\n  ToastService,\n  useAutoToastError,\n  useBoolean,\n  useNavigationParams,\n} from '@true/core';\nimport Animated, {\n  runOnUI,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport {\n  AnimatedKeyboardAvoidingViewRef,\n  FullScreenWrapper,\n  MyKeyboardAvoidingView,\n  UIInput,\n  UIText,\n  UITextInput,\n} from '@true/ui';\nimport {AnimatedBottomSpace} from '@/components/AnimatedBottomSpace';\nimport {DiscardDialog} from '@/components/DiscardDialog';\nimport {useAsyncFn} from '@/hooks/useAsyncFn';\nimport {ICreateTopic, initCreateTopic} from '@/store/topics/type';\nimport {getTopics} from '@/store/topics';\nimport {requestCreateTopic, requestEditTopic} from '@/store/topics/function';\nimport {getChannels, useChannelsByQuery} from '@/store/channels';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {BottomSheetMenu} from '@/components/BottomSheets';\nimport {MenuItem} from '@/components/MenuItem';\nimport {AvatarWithSelectChannel} from '@/components/AvatarWithSelectChannel';\nimport {HeaderCreatePost} from '@/screens/CreatePostScreen/HeaderCreatePost';\nimport LoadingModal from '@/components/LoadingModal';\nimport {CheckboxWithText} from '@/components/CheckboxWithText';\n\nexport interface CreateTopicScreenParams {\n  id: number;\n}\n\nexport const CreateTopicScreen = memo(function CreateTopicScreen() {\n  const {id} = useNavigationParams<CreateTopicScreenParams>();\n  const ref = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useAnimatedRef<any>();\n  const params = useSharedValue<ICreateTopic>(initCreateTopic);\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n  const bottomSheetRef = useRef<BottomSheetModal | null>(null);\n  const [label, setLabel] = useState('');\n\n  const channelsOption = useChannelsByQuery('joined').map(id => ({\n    label: getChannels(id)?.name || 'Undefined channel',\n    value: id,\n  }));\n\n  const [{loading, error: createError}, onPressSubmit] =\n    useAsyncFn(async () => {\n      if (id !== -1) {\n        await requestEditTopic(params.value);\n      } else {\n        await requestCreateTopic(params.value);\n        ToastService.show('Create topic successfully');\n      }\n      goBack();\n    }, [id, params]);\n  useAutoToastError(createError);\n\n  const onGoBack = useCallback(() => {\n    goBack();\n  }, []);\n\n  useEffect(() => {\n    let _params = {\n      ...initCreateTopic,\n    };\n    if (id > 0) {\n      const topic = getTopics(id);\n      _params = {\n        channel_id: 0,\n        id: topic?.id,\n        content: topic?.content || '',\n        name: topic?.name || '',\n        'file[]': topic?.files,\n        followers: topic?.followers,\n        privacy: topic?.privacy,\n      };\n    }\n    params.value = _params;\n  }, [id, params]);\n\n  const animatedActiveBtn = useDerivedValue(() => {\n    return !!params.value.content;\n  }, []);\n\n  const renderItem = useCallback(\n    (item: any, index: number) => {\n      return (\n        <MenuItem\n          key={index}\n          title={item.label}\n          onPress={() => {\n            onChangeValue('channel_id', item.value);\n            setLabel(item.label);\n            bottomSheetRef.current?.dismiss();\n          }}\n        />\n      );\n    },\n    [bottomSheetRef],\n  );\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        'worklet';\n\n        params.value = {\n          ...params.value,\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n\n  return (\n    <FullScreenWrapper isGrey>\n      <MyKeyboardAvoidingView ref={ref} scrollRef={scrollRef}>\n        <LoadingModal isVisible={loading} />\n        <HeaderCreatePost\n          title={id === -1 ? 'Create a topic' : 'Edit topic'}\n          onPress={onPressSubmit}\n          active={animatedActiveBtn}\n          id={id}\n          loading={loading}\n          onGoBack={onGoBack}\n        />\n        <SScrollView ref={scrollRef} keyboardShouldPersistTaps={'handled'}>\n          <SContainer>\n            <SWhiteBox>\n              <AvatarWithSelectChannel\n                bottomSheetRef={bottomSheetRef}\n                label={label}\n                typePost={'an event'}\n              />\n              <UIInput.Text\n                title={'Title'}\n                keyName={'name'}\n                params={params}\n                placeholder={'---'}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n                required\n              />\n              <UITextInput\n                title={'Content'}\n                keyName={'content'}\n                params={params}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n              />\n              <UIInput.Attachment\n                title={'Attach files or Images'}\n                keyName={'file[]'}\n                params={params}\n                onChangeValue={onChangeValue}\n              />\n              <UIInput.UserPicker\n                title={'Followers'}\n                keyName={'followers'}\n                params={params}\n                type={'user'}\n              />\n            </SWhiteBox>\n            <SWhiteBox>\n              <UIText.HeaderMedium>Advanced settings</UIText.HeaderMedium>\n              <CheckboxWithText\n                params={params}\n                keyName={'privacy'}\n                title={'Only visible to selected followers'}\n              />\n              <AnimatedBottomSpace />\n            </SWhiteBox>\n          </SContainer>\n        </SScrollView>\n      </MyKeyboardAvoidingView>\n      <DiscardDialog\n        title={'Discard change'}\n        content={\n          'You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.'\n        }\n        visible={visibleDialog}\n        onClose={hideDialog}\n      />\n      <BottomSheetMenu\n        name={'channel'}\n        ref={bottomSheetRef}\n        items={channelsOption}\n        renderMenuItem={renderItem}\n        titleHeader={'Select channel'}\n      />\n    </FullScreenWrapper>\n  );\n});\n\nconst SContainer = styled(Animated.View)`\n  flex: 1;\n  gap: 8px;\n`;\n\nconst SWhiteBox = styled.View`\n  margin-top: 8px;\n  background-color: white;\n  padding: 12px 16px;\n  gap: 8px;\n`;\nconst SScrollView = styled.ScrollView`\n  flex: 1;\n`;\n","import {Core, Fetch} from '@true/core';\nimport {batch} from 'react-redux';\nimport {ICreateTopic, ITopic} from '@/store/topics/type';\nimport {setTopicsQuery, syncTopics} from '@/store/topics/index';\n\nexport const requestTopicsChannel = async (params: {path: string}) => {\n  const {data} = await Fetch.postWithToken<{\n    topics: ITopic[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/channel/update/topic?path=${params.path}`,\n  );\n  batch(() => {\n    if (data.topics.length) {\n      syncTopics(data.topics);\n      setTopicsQuery(prev => ({\n        ...prev,\n        [params.path]: data.topics.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.topics;\n};\nexport const requestMyTopicsChannel = async (params: {path: string}) => {\n  const {data} = await Fetch.postWithToken<{\n    topics: ITopic[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/channel/update/topic?path=${params.path}&created=mine`,\n  );\n  batch(() => {\n    if (data.topics.length) {\n      syncTopics(data.topics);\n      setTopicsQuery(prev => ({\n        ...prev,\n        [`created_${params.path}`]: data.topics.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.topics;\n};\nexport const requestCreateTopic = async (params: ICreateTopic) => {\n  const {data} = await Fetch.postWithToken<{topic: ITopic}>(\n    `@${Core.systemPath}/inside/ajax/api/topic/create`,\n    params,\n  );\n  batch(() => {\n    if (data.topic) {\n      syncTopics([data.topic]);\n      setTopicsQuery(prev => ({\n        ...prev,\n        ['all']: [data.topic.id.toString(), ...(prev['all'] || [])],\n      }));\n    }\n  });\n};\n\nexport const requestEditTopic = async (params: ICreateTopic) => {\n  const {data} = await Fetch.postWithToken<{topic: ITopic}>(\n    `@${Core.systemPath}/inside/ajax/api/topic/edit`,\n    params,\n  );\n  batch(() => {\n    if (data.topic) {\n      syncTopics([data.topic]);\n    }\n  });\n};\n","import {IReaction} from '@/store/updates/type';\n\nexport interface ITopic {\n  id: string;\n  name: string;\n  content: string;\n  metatype: 'topic';\n  username: string;\n  followers: number[];\n  channel_id: number;\n  since: number;\n  last_update: number;\n  user_id: number;\n  seens: number[];\n  link: string;\n  files: any[];\n  reactions: IReaction[];\n  hid: string;\n  token: string;\n  type: 'topics';\n  privacy: number;\n  stats: any;\n  liked: number;\n}\nexport interface ICreateTopic {\n  id?: string;\n  name: string;\n  content: string;\n  channel_id: number;\n  followers?: number[];\n  privacy?: number;\n  'file[]'?: any;\n}\nexport const initCreateTopic: ICreateTopic = {\n  name: '',\n  content: '',\n  channel_id: 0,\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_core","_asset","_ui","_reactNativeReanimated","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","_worklet_8674385749251_init_data","code","location","sourceMap","version","_worklet_14097579138961_init_data","AvatarWithSelectChannel","memo","_ref","_e","anonymous","bottomSheetRef","label","typePost","me","useMe","widthButton","useSharedValue","animatedStyled","useAnimatedStyle","global","Error","width","value","__closure","__initData","__workletHash","__stackDetails","onViewLayout","useWorkletCallback","e","nativeEvent","layout","jsxs","SRow","children","jsx","Avatar","size","userKey","id","disableClick","SView","UIText","BodyMedium500","onLayout","name","SButtonSelect","style","title","onPress","_bottomSheetRef$curre","current","present","SExpandIcon","source","IC_OUTLINED_EXPAND_MORE","exports","styled","View","_taggedTemplateLiteralLoose2","UIButton","attrs","p","textStyle","assign","UITextStyle","body_medium_400","color","theme","neutral2","textProps","numberOfLines","neutral5","Image","_helper","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","HeaderCreatePost","props","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","paddingTop","useTheme","active","onGoBack","loading","animatedBtnStyle","backgroundColor","interpolateColor","neutral3","primaryColor","animatedProps","useAnimatedProps","pointerEvents","HeaderWrapper","FlexCenter","gap","IC_OUTLINED_LEFT","goBack","HeaderLarge","SCreateBtn","Animated","neutral4","body_medium_500","_AnimatedBottomSpace","_DiscardDialog","_useAsyncFn3","_type","_topics","_function","_channels","_BottomSheets","_MenuItem","_AvatarWithSelectChannel","_HeaderCreatePost","_LoadingModal","_interopRequireDefault","_CheckboxWithText","_worklet_3835743809214_init_data","_worklet_690685769123_init_data","CreateTopicScreen","useNavigationParams","ref","useRef","scrollRef","useAnimatedRef","params","initCreateTopic","_useBoolean","useBoolean","_useBoolean2","_slicedToArray2","visibleDialog","hideDialog","_useState","useState","_useState2","setLabel","channelsOption","useChannelsByQuery","map","_getChannels","getChannels","_useAsyncFn","useAsyncFn","_asyncToGenerator2","requestEditTopic","requestCreateTopic","ToastService","show","_useAsyncFn2","_useAsyncFn2$","createError","error","onPressSubmit","useAutoToastError","useCallback","useEffect","_params","topic","getTopics","channel_id","content","files","followers","privacy","animatedActiveBtn","useDerivedValue","renderItem","item","index","MenuItem","onChangeValue","dismiss","runOnUI","_key","_value","_defineProperty2","FullScreenWrapper","isGrey","MyKeyboardAvoidingView","isVisible","SScrollView","keyboardShouldPersistTaps","SContainer","SWhiteBox","UIInput","Text","keyName","placeholder","defaultValue","required","UITextInput","Attachment","UserPicker","type","HeaderMedium","CheckboxWithText","AnimatedBottomSpace","DiscardDialog","visible","onClose","BottomSheetMenu","items","renderMenuItem","titleHeader","ScrollView","_ref2","_ref3","_ref4","_reactRedux","_index","_x","data","Fetch","postWithToken","Core","systemPath","path","batch","topics","length","syncTopics","setTopicsQuery","prev","toString","apply","arguments","_x2","_x3","concat","_toConsumableArray2","_x4"],"sourceRoot":""}