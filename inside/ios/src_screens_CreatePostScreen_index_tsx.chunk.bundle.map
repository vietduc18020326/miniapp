{"version":3,"file":"src_screens_CreatePostScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AvatarWithSelectChannel/index.tsx","webpack:///./src/screens/CreateEventScreen/MyInputBackground.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx","webpack:///./src/screens/CreatePostScreen/index.tsx"],"sourcesContent":["import React, {memo, RefObject} from 'react';\nimport {Colors, Fonts, styled, useMe} from '@true/core';\nimport {IC_OUTLINED_EXPAND_MORE} from '@true/asset';\nimport {Avatar, UIButton, UIText, UITextStyle} from '@true/ui';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {globalStyles} from '@/utils/globalStyle';\nimport {\n  useAnimatedStyle,\n  useSharedValue,\n  useWorkletCallback,\n} from 'react-native-reanimated';\nimport {LayoutChangeEvent} from 'react-native';\n\nexport const AvatarWithSelectChannel = memo(function AvatarWithSelectChannel({\n  bottomSheetRef,\n  label,\n  typePost,\n}: {\n  bottomSheetRef: RefObject<BottomSheetModal>;\n  label: string;\n  typePost: string;\n}) {\n  const me = useMe();\n  const widthButton = useSharedValue(200);\n\n  const animatedStyled = useAnimatedStyle(\n    () => ({\n      width: widthButton.value,\n    }),\n    [],\n  );\n  const onViewLayout = useWorkletCallback(\n    (e: LayoutChangeEvent) => {\n      widthButton.value = e.nativeEvent.layout.width;\n    },\n    [widthButton],\n  );\n\n  return (\n    <SRow>\n      <Avatar size={48} userKey={me?.id || '0'} disableClick={true} />\n      <SView>\n        <UIText.BodyMedium500 onLayout={onViewLayout}>\n          {me?.name} create {typePost}\n        </UIText.BodyMedium500>\n        <SButtonSelect\n          style={animatedStyled}\n          title={label ? label : 'Select channel'}\n          onPress={() => {\n            bottomSheetRef.current?.present();\n          }}>\n          <SExpandIcon source={IC_OUTLINED_EXPAND_MORE} />\n        </SButtonSelect>\n      </SView>\n    </SRow>\n  );\n});\n\nconst SRow = styled.View`\n  flex-direction: row;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst SView = styled.View`\n  justify-content: center;\n  gap: 4px;\n`;\nconst SButtonSelect = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_400,\n    color: p.theme.neutral2,\n    width: '85%',\n  },\n  textProps: {\n    numberOfLines: 1,\n  },\n}))`\n  flex-direction: row;\n  border-radius: 40px;\n  border-width: 1px;\n  border-color: ${p => p.theme.neutral5};\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  padding-left: 16px;\n  padding-right: 8px;\n`;\n\nconst SExpandIcon = styled.Image`\n  width: 24px;\n  height: 24px;\n  tint-color: ${p => p.theme.neutral2};\n`;\n","import {memo, useCallback, useMemo, useState} from 'react';\nimport {Fonts, styled} from '@true/core';\nimport {openCameraRollScreen} from '@/utils';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IC_OUTLINED_IMAGE} from '@true/asset';\nimport {BG_TEMPLATE} from '@/components/PostThumbnail/type';\nimport {getTemplateImage} from '@/services/BgTemplateService';\nimport {SharedValue} from 'react-native-reanimated';\n\ninterface MyInputLogoProps {\n  onSelectedImage: (image: ImageDTO) => void;\n  image: string | undefined;\n}\n\nexport const MyInputBackground = memo(function (props: MyInputLogoProps) {\n  const {onSelectedImage, image} = props;\n  const [imageUri, setImageUri] = useState('');\n\n  const onSelect = useCallback(\n    (image: ImageDTO) => {\n      setImageUri(image.url);\n      onSelectedImage(image);\n    },\n    [onSelectedImage],\n  );\n  const onPress = useCallback(() => {\n    openCameraRollScreen({\n      onSubmit: onSelect,\n    });\n  }, []);\n\n  const source = useMemo(() => {\n    const _image = imageUri ? imageUri : image;\n\n    return Object.values(BG_TEMPLATE).includes(_image as BG_TEMPLATE)\n      ? getTemplateImage(_image as BG_TEMPLATE)\n      : {uri: _image};\n  }, [imageUri, image]);\n\n  return (\n    <SContainer>\n      <STitle>Background</STitle>\n      <SBackgroundWrapper resizeMode={'cover'} source={source}>\n        {imageUri || image ? (\n          <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n            <STextAction hasImage={imageUri || image}>Change</STextAction>\n          </SButtonAction>\n        ) : (\n          <>\n            <SIconPhoto>\n              <SImageGallery source={IC_OUTLINED_IMAGE} />\n              <SText>Upload your background</SText>\n            </SIconPhoto>\n            <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n              <STextAction>Choose file</STextAction>\n            </SButtonAction>\n          </>\n        )}\n      </SBackgroundWrapper>\n    </SContainer>\n  );\n});\nconst SContainer = styled.TouchableOpacity`\n  justify-content: center;\n  border-radius: 4px;\n  border: 1px solid #ebebeb;\n  padding: 0 16px 12px 16px;\n`;\n\nconst STitle = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n  margin-top: 8px;\n  margin-bottom: 4px;\n`;\n\nconst SBackgroundWrapper = styled.ImageBackground`\n  background-color: ${p => p.theme.neutral9};\n  min-height: 180px;\n  border-radius: 8px;\n`;\n\nconst SText = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n`;\n\nconst SButtonAction = styled.TouchableOpacity<{hasImage?: string}>`\n  width: 120px;\n  height: 40px;\n  padding: 4px 16px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: ${p => (p.hasImage ? 'rgba(0, 0, 0, 0.65)' : '#EAEAEA')};\n  margin-top: ${p => (p.hasImage ? 68 : 12)}px;\n  align-self: center;\n`;\nconst SIconPhoto = styled.View`\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n  margin-top: 36px;\n`;\nconst SImageGallery = styled.Image`\n  width: 32px;\n  height: 32px;\n  tint-color: ${p => p.theme.neutral2};\n`;\nconst STextAction = styled.Text<{hasImage?: string}>`\n  font-family: ${Fonts.Medium};\n  font-size: 14px;\n  line-height: 24px;\n  color: ${p => (p.hasImage ? p.theme.white : p.theme.neutral2)};\n`;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {IC_OUTLINED_LEFT} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={IC_OUTLINED_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  AnimatedKeyboardAvoidingViewRef,\n  FullScreenWrapper,\n  MyKeyboardAvoidingView,\n  UIInput,\n  UIText,\n  UITextInput,\n  UIUserPickerInput,\n} from '@true/ui';\nimport {AnimatedBottomSpace} from '@/components/AnimatedBottomSpace';\nimport {\n  goBack,\n  styled,\n  ToastService,\n  useAsyncFn,\n  useAutoToastError,\n  useBoolean,\n  useNavigationParams,\n} from '@true/core';\nimport {\n  runOnUI,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport {\n  ETypeUpdate,\n  ICreatePost,\n  initParamCreatePost,\n} from '@/store/updates/type';\nimport {HeaderCreatePost} from '@/screens/CreatePostScreen/HeaderCreatePost';\nimport {getChannels, useChannelsByQuery} from '@/store/channels';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IBase64, uploadImage} from '@/utils/helper';\nimport {getUpdates} from '@/store/updates';\nimport {Buffer} from 'buffer';\nimport {DiscardDialog} from '@/components/DiscardDialog';\nimport {requestCreatePost, requestEditPost} from '@/store/updates/function';\nimport {MyInputBackground} from '@/screens/CreateEventScreen/MyInputBackground';\nimport {BottomSheetMenu} from '@/components/BottomSheets';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {MenuItem} from '@/components/MenuItem';\nimport {AvatarWithSelectChannel} from '@/components/AvatarWithSelectChannel';\nimport LoadingModal from '@/components/LoadingModal';\nimport {View} from 'react-native';\n\nexport interface CreatePostScreenParams {\n  type: 'update' | 'styled' | 'welcome' | 'idea' | 'announcement' | 'external';\n  channel_id?: string;\n  id?: number;\n}\n\nexport const CreatePostScreen = memo(function () {\n  const {type, id, channel_id} = useNavigationParams<CreatePostScreenParams>();\n  const ref = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useAnimatedRef<any>();\n  const params = useSharedValue<ICreatePost>(initParamCreatePost);\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n  const bottomSheetRef = useRef<BottomSheetModal | null>(null);\n  const channelsOption = useChannelsByQuery('joined').map(id => ({\n    label: getChannels(id)?.name || 'Undefined channel',\n    value: id,\n  }));\n  const [label, setLabel] = useState('');\n  const imageRef = useRef<ImageDTO | null>(null);\n\n  useEffect(() => {\n    if (channelsOption && channelsOption.length > 0) {\n      const selectedChannel = channelsOption.find(\n        item => item.value === params.value.channel_id.toString(),\n      );\n      if (selectedChannel) {\n        setLabel(selectedChannel.label);\n      }\n    }\n  }, [params, setLabel, channelsOption]);\n\n  const onSelectBackground = useCallback(\n    (image: ImageDTO) => {\n      imageRef.current = image;\n      params.value['image-bg'] = image.url;\n    },\n    [imageRef, params],\n  );\n\n  const [{loading, error: createError}, onPressSubmit] =\n    useAsyncFn(async () => {\n      let imageUrl = params.value['image-bg'];\n      if (imageRef.current) {\n        imageUrl = await uploadImage(imageRef.current);\n      }\n      const _params = {\n        ...params.value,\n        metatype: type,\n        'image-bg': imageUrl,\n      };\n      if (id) {\n        await requestEditPost(_params);\n      } else {\n        await requestCreatePost(_params);\n        ToastService.show('Create post successfully');\n      }\n      goBack();\n    }, [id, imageRef, params]);\n  useAutoToastError(createError);\n\n  const onGoBack = useCallback(() => {\n    console.log('aaa');\n    goBack();\n  }, []);\n\n  useEffect(() => {\n    let _params: ICreatePost = {\n      ...initParamCreatePost,\n    };\n    if (id) {\n      const update = getUpdates(id);\n      const coverImage: IBase64 = JSON.parse(\n        Buffer.from(\n          update?.image ||\n            'eyJ0eXBlIjoiIiwiY29sb3IiOiIiLCJvcGFjaXR5IjowLCJwZXJjZW50IjoxMDAsImltYWdlIjoiIiwidGV4dHMiOltdfQ',\n          'base64',\n        ).toString('utf-8'),\n      );\n      _params = {\n        id: update?.id,\n        channel_id: update?.channel_id || 0,\n        metatype: type,\n        content: update?.content || '',\n        'file[]': [],\n        // schedule?:number,\n        // schedule_date?:number,\n        // schedule_shift?:string,\n        // usernames?:string,\n        name: update?.name || '',\n        'image-bg': coverImage?.image,\n      };\n    }\n    params.value = _params;\n  }, [params, type]);\n\n  const animatedActiveBtn = useDerivedValue(() => {\n    if (channel_id) {\n      return !!params.value.content;\n    }\n\n    return !!params.value.content;\n  }, [channel_id]);\n\n  const renderItem = useCallback(\n    (item: any, index: number) => {\n      return (\n        <MenuItem\n          key={index}\n          title={item.label}\n          onPress={() => {\n            onChangeValue('channel_id', item.value);\n            setLabel(item.label);\n            bottomSheetRef.current?.dismiss();\n          }}\n        />\n      );\n    },\n    [bottomSheetRef],\n  );\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        'worklet';\n\n        params.value = {\n          ...params.value,\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n\n  return (\n    <FullScreenWrapper isGrey>\n      <MyKeyboardAvoidingView ref={ref} scrollRef={scrollRef}>\n        <HeaderCreatePost\n          title={id ? 'Edit update' : 'Create update'}\n          active={animatedActiveBtn}\n          onPress={onPressSubmit}\n          loading={loading}\n          id={id}\n          onGoBack={onGoBack}\n        />\n        <LoadingModal isVisible={loading} />\n        <SScrollView ref={scrollRef} keyboardShouldPersistTaps={'handled'}>\n          <SContainer>\n            <View\n              style={{\n                gap: 12,\n              }}>\n              <UIText.HeaderMedium>General information</UIText.HeaderMedium>\n              <AvatarWithSelectChannel\n                bottomSheetRef={bottomSheetRef}\n                label={label}\n                typePost={type}\n              />\n              <SContentContainer>\n                {type === ETypeUpdate.ANNOUNCEMENT ||\n                type === ETypeUpdate.WELCOME ? (\n                  <MyInputBackground\n                    onSelectedImage={onSelectBackground}\n                    image={params.value['image-bg']}\n                  />\n                ) : null}\n                {type == ETypeUpdate.ANNOUNCEMENT ||\n                type === ETypeUpdate.IDEA ? (\n                  <UIInput.Text\n                    keyName={'name'}\n                    params={params}\n                    title={type === 'announcement' ? 'Title' : 'The idea'}\n                    onChangeValue={onChangeValue}\n                    placeholder={'---'}\n                    required\n                  />\n                ) : null}\n                {type == ETypeUpdate.WELCOME ? (\n                  <UIInput.UserPicker\n                    title={'Select people'}\n                    type={'user'}\n                    keyName={'usernames'}\n                    params={params}\n                    onChangeValue={onChangeValue}\n                    multiple\n                    placeholder={'---'}\n                    required\n                  />\n                ) : null}\n\n                {type == ETypeUpdate.UPDATE || type === ETypeUpdate.IDEA ? (\n                  <SUITextInput\n                    title={\n                      type === 'idea'\n                        ? 'Extra description'\n                        : 'Share with your team'\n                    }\n                    keyName={'content'}\n                    params={params}\n                    placeholder={'---'}\n                    defaultValue={''}\n                    // minHeight={320}\n                    required\n                    multiline\n                  />\n                ) : (\n                  <UITextInput\n                    title={'Content'}\n                    keyName={'content'}\n                    params={params}\n                    defaultValue={''}\n                    required\n                  />\n                )}\n                {/*Pinned to channel*/}\n                <UIInput.Attachment\n                  title={'Attach files or Images'}\n                  keyName={'file[]'}\n                  params={params}\n                  onChangeValue={onChangeValue}\n                />\n              </SContentContainer>\n            </View>\n            <AnimatedBottomSpace />\n          </SContainer>\n        </SScrollView>\n        <DiscardDialog\n          title={'Discard change'}\n          content={\n            'You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.'\n          }\n          visible={visibleDialog}\n          onClose={hideDialog}\n        />\n        <BottomSheetMenu\n          name={'channel'}\n          ref={bottomSheetRef}\n          items={channelsOption}\n          renderMenuItem={renderItem}\n          titleHeader={'Select channel'}\n        />\n      </MyKeyboardAvoidingView>\n    </FullScreenWrapper>\n  );\n});\n\nconst SContainer = styled.View`\n  padding: 12px 16px;\n`;\nconst SContentContainer = styled.View`\n  gap: 8px;\n`;\nconst SScrollView = styled.ScrollView`\n  flex: 1;\n  background-color: white;\n  margin-top: 8px;\n`;\nconst SUITextInput = styled(UITextInput).attrs(p => ({\n  textStyle: {\n    minHeight: 320,\n  },\n}))``;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_core","_asset","_ui","_reactNativeReanimated","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","_worklet_8674385749251_init_data","code","location","sourceMap","version","_worklet_14097579138961_init_data","AvatarWithSelectChannel","memo","_ref","_e","anonymous","bottomSheetRef","label","typePost","me","useMe","widthButton","useSharedValue","animatedStyled","useAnimatedStyle","global","Error","width","value","__closure","__initData","__workletHash","__stackDetails","onViewLayout","useWorkletCallback","e","nativeEvent","layout","jsxs","SRow","children","jsx","Avatar","size","userKey","id","disableClick","SView","UIText","BodyMedium500","onLayout","name","SButtonSelect","style","title","onPress","_bottomSheetRef$curre","current","present","SExpandIcon","source","IC_OUTLINED_EXPAND_MORE","exports","styled","View","_taggedTemplateLiteralLoose2","UIButton","attrs","p","textStyle","assign","UITextStyle","body_medium_400","color","theme","neutral2","textProps","numberOfLines","neutral5","Image","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_utils","_type","_BgTemplateService","MyInputBackground","props","onSelectedImage","image","_useState","useState","_useState2","_slicedToArray2","imageUri","setImageUri","onSelect","useCallback","url","openCameraRollScreen","onSubmit","useMemo","_image","values","BG_TEMPLATE","includes","getTemplateImage","uri","SContainer","STitle","SBackgroundWrapper","resizeMode","SButtonAction","hasImage","STextAction","Fragment","SIconPhoto","SImageGallery","IC_OUTLINED_IMAGE","SText","TouchableOpacity","Text","Fonts","Regular","ImageBackground","neutral9","Medium","white","_helper","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","HeaderCreatePost","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","paddingTop","useTheme","active","onGoBack","loading","animatedBtnStyle","backgroundColor","interpolateColor","neutral3","primaryColor","animatedProps","useAnimatedProps","pointerEvents","HeaderWrapper","FlexCenter","gap","IC_OUTLINED_LEFT","goBack","HeaderLarge","SCreateBtn","Animated","neutral4","body_medium_500","_AnimatedBottomSpace","_HeaderCreatePost","_channels","_updates","_buffer","_DiscardDialog","_function","_MyInputBackground","_BottomSheets","_MenuItem","_AvatarWithSelectChannel","_LoadingModal","_interopRequireDefault","_reactNative","_worklet_2192383653013_init_data","_worklet_690685769123_init_data","CreatePostScreen","_useNavigationParams","useNavigationParams","type","channel_id","ref","useRef","scrollRef","useAnimatedRef","params","initParamCreatePost","_useBoolean","useBoolean","_useBoolean2","visibleDialog","hideDialog","channelsOption","useChannelsByQuery","map","_getChannels","getChannels","setLabel","imageRef","useEffect","length","selectedChannel","find","item","toString","onSelectBackground","_useAsyncFn","useAsyncFn","_asyncToGenerator2","imageUrl","uploadImage","_params","metatype","requestEditPost","requestCreatePost","ToastService","show","_useAsyncFn2","_useAsyncFn2$","createError","error","onPressSubmit","useAutoToastError","console","log","update","getUpdates","coverImage","JSON","parse","Buffer","from","content","animatedActiveBtn","useDerivedValue","renderItem","index","MenuItem","onChangeValue","dismiss","runOnUI","_key","_value","_defineProperty2","FullScreenWrapper","isGrey","MyKeyboardAvoidingView","isVisible","SScrollView","keyboardShouldPersistTaps","HeaderMedium","SContentContainer","ETypeUpdate","ANNOUNCEMENT","WELCOME","IDEA","UIInput","keyName","placeholder","required","UserPicker","multiple","UPDATE","SUITextInput","defaultValue","multiline","UITextInput","Attachment","AnimatedBottomSpace","DiscardDialog","visible","onClose","BottomSheetMenu","items","renderMenuItem","titleHeader","ScrollView","minHeight"],"sourceRoot":""}