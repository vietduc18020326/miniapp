{"version":3,"file":"src_screens_CreatePollScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AnimatedCollapseList/AnimatedCollapseItem.tsx","webpack:///./src/components/AnimatedCollapseList/index.tsx","webpack:///./src/components/AnimatedCollapseWrapper/index.tsx","webpack:///./src/components/AvatarWithSelectChannel/index.tsx","webpack:///./src/components/UICheckboxCollapse/index.tsx","webpack:///./src/screens/CreatePollScreen/PollOptions.tsx","webpack:///./src/screens/CreatePollScreen/SimplePollOption.tsx","webpack:///./src/screens/CreatePollScreen/index.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx"],"sourcesContent":["import {RefObject, useCallback, useImperativeHandle} from 'react';\nimport styled from 'styled-components/native';\nimport Animated, {\n  runOnJS,\n  useAnimatedReaction,\n  useAnimatedStyle,\n  useSharedValue,\n  useWorkletCallback,\n  withDelay,\n  withTiming,\n} from 'react-native-reanimated';\nimport {LayoutChangeEvent, ViewStyle} from 'react-native';\nimport {interactManager, memoForwardRef} from '@true/core';\nimport {toBoolean} from '@true/ui';\n\ninterface Props {\n  children?: any;\n  contentStyle?: ViewStyle;\n  onRemoveItem: () => void | Promise<any>;\n}\n\nexport interface AnimatedCollapseItemMethod {\n  remove: () => void;\n}\n\nexport const AnimatedCollapseItem = memoForwardRef(\n  (\n    {children, contentStyle, onRemoveItem}: Props,\n    ref: RefObject<AnimatedCollapseItemMethod>,\n  ) => {\n    const height = useSharedValue(0);\n    const isRemoved = useSharedValue(false);\n\n    const onLayout = useWorkletCallback(\n      ({\n        nativeEvent: {\n          layout: {height: _height},\n        },\n      }: LayoutChangeEvent) => {\n        height.value = _height;\n      },\n      [height],\n    );\n\n    const onRemove = useCallback(\n      (value: number) => {\n        if (!toBoolean(value)) {\n          interactManager(onRemoveItem, 100);\n        }\n      },\n      [onRemoveItem],\n    );\n\n    const animatedStyle = useAnimatedStyle(() => {\n      return {\n        height: height.value,\n        overflow: 'scroll',\n        width: '100%',\n      };\n    }, [height]);\n\n    useAnimatedReaction(\n      () => ({_height: height.value, _isRemoved: isRemoved.value}),\n      (cur, prev) => {\n        if (cur._isRemoved) {\n          runOnJS(onRemove)(cur._height);\n        }\n      },\n      [height],\n    );\n\n    const remove = useWorkletCallback(() => {\n      isRemoved.value = true;\n      height.value = withDelay(500, withTiming(0, {duration: 500}));\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n      remove,\n    }));\n\n    return (\n      <SItemContainer style={animatedStyle}>\n        <Animated.View style={contentStyle} onLayout={onLayout}>\n          {children}\n        </Animated.View>\n      </SItemContainer>\n    );\n  },\n);\n\nconst SItemContainer = styled(Animated.View)`\n  //padding: 12px 16px;\n`;\n","import {memo, RefObject} from 'react';\nimport Animated, {\n  SharedValue,\n  useAnimatedReaction,\n  useAnimatedStyle,\n  useDerivedValue,\n  useSharedValue,\n  useWorkletCallback,\n  withTiming,\n} from 'react-native-reanimated';\nimport styled from 'styled-components/native';\nimport {LayoutChangeEvent, ViewStyle} from 'react-native';\nimport {memoForwardRef} from '@true/core';\n\ninterface Props {\n  children?: any;\n  contentStyle?: ViewStyle;\n  height?: SharedValue<number>;\n  type?: string;\n}\n\ninterface AnimatedCollapseMethod {}\n\nexport const AnimatedCollapseList = memoForwardRef(\n  (props: Props, ref: RefObject<AnimatedCollapseMethod>) => {\n    const contentHeight = useSharedValue(0);\n    const animatedHeight = useSharedValue(0);\n    const {type} = props;\n\n    const onLayout = useWorkletCallback(\n      ({\n        nativeEvent: {\n          layout: {height: _height},\n        },\n      }: LayoutChangeEvent) => {\n        contentHeight.value = _height;\n        if (props.height) {\n          props.height.value = _height;\n        }\n      },\n      [contentHeight],\n    );\n\n    useAnimatedReaction(\n      () => ({value: contentHeight.value}),\n      (cur, prev) => {\n        if (!prev?.value && cur.value) {\n          animatedHeight.value = cur.value;\n          return;\n        }\n        if (prev && cur.value !== prev?.value) {\n          animatedHeight.value = withTiming(cur.value, {duration: 500});\n        }\n      },\n      [contentHeight],\n    );\n\n    const _animatedHeight = useDerivedValue(() => {\n      if (type && type === 'height') {\n        return {height: animatedHeight.value};\n      }\n\n      return {maxHeight: animatedHeight.value};\n    }, [type, animatedHeight]);\n\n    const animatedContainerStyle = useAnimatedStyle(() => {\n      return {\n        ..._animatedHeight.value,\n        overflow: 'scroll',\n      };\n    }, [animatedHeight, _animatedHeight]);\n\n    return (\n      <SContainer>\n        <SContent style={[{overflow: 'scroll'}, animatedContainerStyle]}>\n          <Animated.View style={props.contentStyle} onLayout={onLayout}>\n            {props.children}\n          </Animated.View>\n        </SContent>\n      </SContainer>\n    );\n  },\n);\n\nconst SContainer = styled(Animated.View)`\n  //padding: 12px 16px;\n`;\n\nconst SContent = styled(Animated.View)``;\n","import {styled} from '@true/core';\nimport React, {RefObject, useCallback, useImperativeHandle} from 'react';\nimport Animated, {\n  interpolate,\n  SharedValue,\n  useAnimatedReaction,\n  useAnimatedStyle,\n  useSharedValue,\n  useWorkletCallback,\n  withTiming,\n} from 'react-native-reanimated';\nimport {ViewStyle} from 'react-native';\nimport {memoForwardRef} from '@true/core';\n\ninterface Props {\n  children?: any;\n  contentStyle?: ViewStyle;\n}\n\nexport interface AnimatedCollapseMethod {\n  toggle: () => void;\n  press: (value: number) => void;\n}\n\nexport const AnimatedCollapseWrapper = memoForwardRef(\n  (props: Props, ref: RefObject<AnimatedCollapseMethod>) => {\n    const visible = useSharedValue(0);\n    const animatedHeight = useSharedValue(0);\n    const contentHeight = useSharedValue(0);\n\n    const toggle = useWorkletCallback(() => {\n      'worklet';\n      if (visible.value == 1) {\n        visible.value = 0;\n        return;\n      } else {\n        visible.value = 1;\n      }\n    }, [visible]);\n\n    const press = useCallback(\n      (value: number) => {\n        console.log(value);\n        visible.value = value;\n      },\n      [visible],\n    );\n\n    useImperativeHandle(ref, () => ({\n      toggle,\n      press,\n    }));\n\n    useAnimatedReaction(\n      () => ({\n        _visible: visible.value,\n        _contentHeight: contentHeight.value,\n      }),\n      (cur, prev) => {\n        if (prev?._contentHeight == 0) {\n          animatedHeight.value = 0;\n          return;\n        }\n        if (cur._visible == 1) {\n          animatedHeight.value = withTiming(cur._contentHeight, {\n            duration: 200,\n          });\n        } else {\n          animatedHeight.value = withTiming(0, {duration: 200});\n        }\n      },\n    );\n\n    const animatedContainerStyle = useAnimatedStyle(() => ({\n      height: animatedHeight.value,\n      opacity: interpolate(\n        animatedHeight.value,\n        [0, contentHeight.value],\n        [0, 1],\n      ),\n    }));\n\n    const onLayout = useWorkletCallback((e: any) => {\n      'worklet';\n      contentHeight.value = e.nativeEvent.layout.height;\n    }, []);\n\n    return (\n      <SContainer>\n        <SContent style={[{overflow: 'scroll'}, animatedContainerStyle]}>\n          <Animated.View style={props.contentStyle} onLayout={onLayout}>\n            {props.children}\n          </Animated.View>\n        </SContent>\n      </SContainer>\n    );\n  },\n);\n\nconst SContainer = styled(Animated.View)`\n  //padding: 12px 16px;\n`;\n\nconst SContent = styled(Animated.View)``;\n","import React, {memo, RefObject} from 'react';\nimport {Colors, Fonts, styled, useMe} from '@true/core';\nimport {IC_OUTLINED_EXPAND_MORE} from '@true/asset';\nimport {Avatar, UIButton, UIText, UITextStyle} from '@true/ui';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {globalStyles} from '@/utils/globalStyle';\nimport {\n  useAnimatedStyle,\n  useSharedValue,\n  useWorkletCallback,\n} from 'react-native-reanimated';\nimport {LayoutChangeEvent} from 'react-native';\n\nexport const AvatarWithSelectChannel = memo(function AvatarWithSelectChannel({\n  bottomSheetRef,\n  label,\n  typePost,\n}: {\n  bottomSheetRef: RefObject<BottomSheetModal>;\n  label: string;\n  typePost: string;\n}) {\n  const me = useMe();\n  const widthButton = useSharedValue(200);\n\n  const animatedStyled = useAnimatedStyle(\n    () => ({\n      width: widthButton.value,\n    }),\n    [],\n  );\n  const onViewLayout = useWorkletCallback(\n    (e: LayoutChangeEvent) => {\n      widthButton.value = e.nativeEvent.layout.width;\n    },\n    [widthButton],\n  );\n\n  return (\n    <SRow>\n      <Avatar size={48} userKey={me?.id || '0'} disableClick={true} />\n      <SView>\n        <UIText.BodyMedium500 onLayout={onViewLayout}>\n          {me?.name} create {typePost}\n        </UIText.BodyMedium500>\n        <SButtonSelect\n          style={animatedStyled}\n          title={label ? label : 'Select channel'}\n          onPress={() => {\n            bottomSheetRef.current?.present();\n          }}>\n          <SExpandIcon source={IC_OUTLINED_EXPAND_MORE} />\n        </SButtonSelect>\n      </SView>\n    </SRow>\n  );\n});\n\nconst SRow = styled.View`\n  flex-direction: row;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst SView = styled.View`\n  justify-content: center;\n  gap: 4px;\n`;\nconst SButtonSelect = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_400,\n    color: p.theme.neutral2,\n    width: '85%',\n  },\n  textProps: {\n    numberOfLines: 1,\n  },\n}))`\n  flex-direction: row;\n  border-radius: 40px;\n  border-width: 1px;\n  border-color: ${p => p.theme.neutral5};\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  padding-left: 16px;\n  padding-right: 8px;\n`;\n\nconst SExpandIcon = styled.Image`\n  width: 24px;\n  height: 24px;\n  tint-color: ${p => p.theme.neutral2};\n`;\n","import React, {\n  memo,\n  ReactComponentElement,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react';\nimport {SharedValue, useDerivedValue} from 'react-native-reanimated';\nimport {styled, useMounted} from '@true/core';\nimport {UICheckbox} from '@/components/UICheckbox';\nimport {UIButton} from '@true/ui';\nimport {\n  AnimatedCollapseMethod,\n  AnimatedCollapseWrapper,\n} from '@/components/AnimatedCollapseWrapper';\nimport {View} from 'react-native';\n\ninterface Props {\n  keyNameCheckbox: string;\n  params: SharedValue<any>;\n  childComponent: ReactComponentElement<any>;\n  title: string;\n}\n\nexport const UICheckBoxCollapse = memo(\n  ({params, keyNameCheckbox, childComponent, title}: Props) => {\n    const collapseRef = useRef<AnimatedCollapseMethod | null>(null);\n    const mounted = useMounted(300);\n\n    const animatedCheckbox = useDerivedValue(\n      () => params.value[keyNameCheckbox],\n      [keyNameCheckbox],\n    );\n\n    useEffect(() => {\n      if (mounted) {\n        collapseRef?.current?.press?.(params.value[keyNameCheckbox] || 0);\n      }\n    }, [mounted]);\n\n    const onTick = useCallback(() => {\n      const value = animatedCheckbox.value ? 0 : 1;\n      collapseRef?.current?.press?.(value);\n\n      params.value = {\n        ...params.value,\n        [keyNameCheckbox]: value,\n      };\n    }, [keyNameCheckbox]);\n\n    return (\n      <Wrapper>\n        <SBtn onPress={onTick}>\n          <UICheckbox value={animatedCheckbox} />\n          <STitleCheckbox>{title}</STitleCheckbox>\n        </SBtn>\n        <AnimatedCollapseWrapper ref={collapseRef}>\n          <View style={{marginTop: 8}}>{childComponent}</View>\n        </AnimatedCollapseWrapper>\n      </Wrapper>\n    );\n  },\n);\n\nconst SBtn = styled(UIButton)`\n  flex: 1;\n  flex-direction: row;\n`;\n\nconst STitleCheckbox = styled.Text`\n  font-size: 14px;\n  color: ${p => p.theme.neutral1};\n  padding-left: 12px;\n`;\n\nconst Wrapper = styled.View`\n  flex: 1;\n  margin: 8px 0;\n`;\n","import React, {\n  memo,\n  Ref,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport {AnimatedCollapseList} from '@/components/AnimatedCollapseList';\nimport {SimplePollOption} from '@/screens/CreatePollScreen/SimplePollOption';\nimport {getUpdates} from '@/store/updates';\nimport {IC_OUTLINED_ADD} from '@true/asset';\nimport {styled} from '@true/core';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport moment from 'moment/moment';\n\ninterface Props {\n  isMultipleSelection: boolean;\n  onPressAddOption: () => void;\n  optionsRef: React.MutableRefObject<{id: string; value: string}[]>;\n}\n\nexport const PollOptions = memo(\n  ({isMultipleSelection, onPressAddOption, optionsRef}: Props) => {\n    const [options, setOptions] = useState([\n      {\n        id: moment().valueOf().toString(),\n        value: '',\n      },\n    ]);\n    //\n    useEffect(() => {\n      if (options && optionsRef) {\n        optionsRef.current = [...options];\n      }\n    }, [options]);\n    const optionList = useMemo(() => {\n      return [...options.values()];\n    }, [options]);\n\n    const onOptionChange = useCallback((value: string, id: string) => {\n      console.log('xx');\n      setOptions(prev =>\n        prev.map(item => {\n          if (item.id === id) {\n            return {\n              ...item,\n              value,\n            };\n          }\n\n          return item;\n        }),\n      );\n    }, []);\n\n    const onOptionDelete = useCallback((id: string) => {\n      setOptions(prev => prev.filter(item => item.id !== id));\n    }, []);\n\n    const onPress = useCallback(() => {\n      onPressAddOption();\n      setOptions(prev =>\n        prev.concat({\n          id: moment().valueOf().toString(),\n          value: '',\n        }),\n      );\n    }, [onPressAddOption]);\n\n    return (\n      <SField>\n        <STitle>Poll options</STitle>\n        <AnimatedCollapseList>\n          {options && options.length\n            ? options.map((item, index) => {\n                return (\n                  <SimplePollOption\n                    value={item.value || ''}\n                    key={item.id}\n                    id={item.id}\n                    index={index}\n                    onChange={onOptionChange}\n                    onDelete={onOptionDelete}\n                    autoFocus={index > 0}\n                    isMultipleSelection={isMultipleSelection}\n                  />\n                );\n              })\n            : null}\n        </AnimatedCollapseList>\n        {optionList.length < 20 ? <BtnAddOption onPress={onPress} /> : null}\n      </SField>\n    );\n  },\n);\n\nconst SField = styled.View`\n  padding-bottom: 12px;\n  margin-top: 8px;\n  background-color: ${p => p.theme.white};\n`;\n\nconst STitle = styled(UIText.HeaderMedium)`\n  color: ${p => p.theme.neutral1};\n`;\n\nconst BtnAddOption = styled(UIButton).attrs(p => ({\n  source: IC_OUTLINED_ADD,\n  imageSize: 24,\n  imageStyle: {\n    tintColor: p.theme.neutral2,\n  },\n  title: 'Add more poll option...',\n  textStyle: {\n    ...UITextStyle.body_medium_400,\n    color: p.theme.neutral2,\n    marginLeft: 8,\n  },\n}))`\n  padding: 16px;\n  border: 1px solid ${p => p.theme.neutral5};\n  border-radius: 8px;\n  margin-top: 8px;\n`;\n","import React, {memo, useCallback, useRef} from 'react';\nimport {Fonts, interactManager, styled} from '@true/core';\nimport {UITextInput} from '@true/ui';\nimport {IC_FILLED_CANCEL} from '@true/asset';\nimport {\n  AnimatedCollapseItem,\n  AnimatedCollapseItemMethod,\n} from '@/components/AnimatedCollapseList/AnimatedCollapseItem';\nimport {useWorkletCallback} from 'react-native-reanimated';\n\nexport const SimplePollOption = memo(function SimplePollOption({\n  index,\n  onChange,\n  onDelete,\n  value,\n  autoFocus,\n  isMultipleSelection,\n  id,\n}: {\n  value: string;\n  id: string;\n  index: number;\n  onChange: (value: string, id: string) => any;\n  onDelete: (id: string) => any;\n  autoFocus: boolean;\n  isMultipleSelection: boolean;\n}) {\n  const refItem = useRef<AnimatedCollapseItemMethod | null>(null);\n  const onDeleteCB = useCallback(() => {\n    onDelete && onDelete(id);\n  }, [id, onDelete]);\n\n  const _onRemove = useWorkletCallback(async () => {\n    interactManager(async () => {\n      refItem?.current?.remove();\n    }, 100);\n  }, []);\n\n  const onChangeText = useCallback(\n    (value1: string) => {\n      onChange && onChange(value1, id);\n    },\n    [onChange, id],\n  );\n\n  return (\n    <AnimatedCollapseItem ref={refItem} onRemoveItem={onDeleteCB}>\n      <Border>\n        <BtnSelect isMultipleSelection={isMultipleSelection} />\n        <ViewInput>\n          <STextInput\n            value={value}\n            placeholder={index + 1 + '. ' + 'Option name'}\n            onChangeText={onChangeText}\n            autoFocus={autoFocus}\n          />\n          <BtnClear onPress={_onRemove}>\n            <SIconClose source={IC_FILLED_CANCEL} />\n          </BtnClear>\n        </ViewInput>\n      </Border>\n    </AnimatedCollapseItem>\n  );\n});\n\nconst BtnClear = styled.TouchableOpacity`\n  width: 24px;\n  height: 24px;\n  align-items: flex-end;\n  justify-content: center;\n`;\n\nconst Border = styled.View`\n  flex-direction: row;\n  margin-top: 8px;\n  border: 1px solid #ebebeb;\n  border-radius: 8px;\n  padding: 16px;\n  align-items: center;\n`;\n\nconst ViewInput = styled.View`\n  background-color: ${p => p.theme.backgroundColor};\n  align-items: center;\n  flex: 1;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst STextInput = styled.TextInput.attrs(props => ({\n  placeholderTextColor: props.theme.grey4,\n}))`\n  flex: 1;\n  font-size: 14px;\n  color: ${p => p.theme.neutral1};\n  margin: 0;\n  font-family: ${Fonts.Regular};\n  line-height: 20px;\n  padding-bottom: 4px;\n  justify-content: center;\n  align-self: center;\n  align-items: center;\n`;\n\nconst BtnSelect = styled.View<{isMultipleSelection?: boolean}>`\n  width: 20px;\n  height: 20px;\n  border-radius: ${p => (p.isMultipleSelection ? 4 : 24)}px;\n  border-color: ${p => p.theme.neutral2};\n  border-width: 1px;\n  margin-right: 8px;\n`;\n\nconst SIconClose = styled.Image`\n  width: 24px;\n  height: 24px;\n  tint-color: ${p => p.theme.neutral3};\n`;\n","import {\n  AnimatedKeyboardAvoidingViewRef,\n  FullScreenWrapper,\n  MyKeyboardAvoidingView,\n  ScreenWrapper,\n  toBoolean,\n  UIDateTimeInput,\n  UIInput,\n  UIText,\n  UITextInput,\n} from '@true/ui';\nimport React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {HeaderCreatePost} from '@/screens/CreatePostScreen/HeaderCreatePost';\nimport Animated, {\n  runOnUI,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n  useWorkletCallback,\n} from 'react-native-reanimated';\nimport {\n  goBack,\n  normalizeStringForSearch,\n  styled,\n  ToastService,\n  useAutoToastError,\n  useBoolean,\n  useNavigationParams,\n} from '@true/core';\nimport {ICreatePoll, initParamCreatePoll} from '@/store/updates/type';\nimport {getChannels, useChannelsByQuery} from '@/store/channels';\nimport {AnimatedBottomSpace} from '@/components/AnimatedBottomSpace';\nimport {globalStyles} from '@/utils/globalStyle';\nimport {useUpdates} from '@/store/updates';\nimport {DiscardDialog} from '@/components/DiscardDialog';\nimport {useAsyncFn} from '@/hooks/useAsyncFn';\nimport {translate} from '@/hooks/useLanguage';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {MenuItem} from '@/components/MenuItem';\nimport {requestCreatePoll, requestEditPoll} from '@/store/updates/function';\nimport {BottomSheetMenu} from '@/components/BottomSheets';\nimport {AvatarWithSelectChannel} from '@/components/AvatarWithSelectChannel';\nimport {PollOptions} from '@/screens/CreatePollScreen/PollOptions';\nimport {CheckboxWithText} from '@/components/CheckboxWithText';\nimport {UICheckBoxCollapse} from '@/components/UICheckboxCollapse';\nimport LoadingModal from '@/components/LoadingModal';\nimport {View} from 'react-native';\nimport moment from 'moment';\n\nexport interface CreatePollScreenParams {\n  id: number;\n}\n\nconst limitedAnswer = Array.from({length: 11}, (_, index) => ({\n  label: index === 0 ? 'Unlimited' : String(index),\n  value: index === 0 ? 'Unlimited' : String(index),\n}));\n\nexport const CreatePollScreen = memo(function () {\n  const {id} = useNavigationParams<CreatePollScreenParams>();\n  const ref = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useAnimatedRef<any>();\n  const params = useSharedValue<ICreatePoll>(initParamCreatePoll);\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n  const bottomSheetRef = useRef<BottomSheetModal | null>(null);\n  const channelsOption = useChannelsByQuery('joined').map(id => ({\n    label: getChannels(id)?.name || 'Undefined channel',\n    value: id,\n  }));\n  const [label, setLabel] = useState('');\n  const poll = useUpdates(id)?.attachment;\n  const optionsRef = useRef<\n    Array<{\n      id: string;\n      value: string;\n    }>\n  >([]);\n\n  useEffect(() => {\n    if (channelsOption && channelsOption.length > 0) {\n      const selectedChannel = channelsOption.find(\n        item => item.value === params.value.channel_id.toString(),\n      );\n      if (selectedChannel) {\n        setLabel(selectedChannel.label);\n      }\n    }\n  }, [params, setLabel, channelsOption]);\n\n  const limitedAnswerOption = limitedAnswer.map(item => ({\n    label: item.label || 'Undefined channel',\n    value: item.value,\n  }));\n\n  const onPressAddOption = useCallback(() => {\n    console.log(optionsRef.current);\n    if (\n      params.value.has_limit &&\n      params.value.limited_answers &&\n      optionsRef.current.length === params.value.limited_answers\n    ) {\n      return;\n    }\n    if (optionsRef.current.length === 20) {\n      return;\n    }\n  }, [optionsRef, params]);\n\n  const onGoBack = useCallback(() => {\n    goBack();\n  }, []);\n\n  const [{loading, error: createError}, onPressSubmit] =\n    useAsyncFn(async () => {\n      const _ops = [...optionsRef.current]\n        // .sort((a, b) => (a - b > 0 ? 1 : -1))\n        .map(item => item.value);\n      const _params = {\n        ...params.value,\n        name: params.value.name,\n        multi: params.value.multi ? 'on' : 'off',\n        has_etime: params.value.has_etime ? 'on' : 'off',\n        'etime-date': moment(params.value.etime * 1000).format('DD/MM/YYYY'),\n        'etime-time': moment(params.value.etime * 1000).format('HH:mm'),\n        has_stime: params.value.has_stime ? 'on' : 'off',\n        'stime-date': moment(params.value.stime * 1000).format('DD/MM/YYYY'),\n        'stime-time': moment(params.value.stime * 1000).format('HH:mm'),\n        allow_update: params.value.allow_update ? 'on' : 'off',\n        allow_added: params.value.allow_added ? 'on' : 'off',\n        limited_answers: normalizeStringForSearch(\n          `${params.value.limited_answers || '0'}`,\n        ),\n        channel_id: params.value?.channel_id,\n        id: poll?.id,\n        has_limit: params.value.has_limit ? 'on' : 'off',\n      };\n\n      if (!_params.name || !_params.name.trim()) {\n        ToastService.show(\n          translate('Poll name is required', {\n            vi: 'Vui lòng nhập vào tên bình chọn',\n            en: 'Poll name is required',\n          }),\n        );\n        return;\n      }\n\n      if (!_ops.filter(item => toBoolean(item.trim())).length && id == -1) {\n        ToastService.show(\n          translate('At least one vote', {\n            vi: 'Phải có ít nhất một bình chọn',\n            en: 'At least one vote',\n          }),\n        );\n        return;\n      }\n\n      if (\n        _params['stime-date'] &&\n        _params['stime-time'] &&\n        _params['etime-date'] &&\n        _params['etime-time'] &&\n        _params['has_etime'] &&\n        _params['has_stime'] &&\n        _params['etime-date'] <= _params['stime-date']\n      ) {\n        ToastService.show(\n          translate('Error in the start time and end time', {\n            vi: 'Thời gian bắt đầu phải nhỏ hơn thời gian kết thúc',\n            en: 'Error in the start time and end time',\n          }),\n        );\n        return;\n      }\n      if (_params['has_limit'] && Number(_params['limited_answers']) > 10) {\n        ToastService.show(\n          translate('Limit number of answers is 10', {\n            vi: 'Câu trả lời tối đa là 10',\n            en: 'Limit number of answers is 10',\n          }),\n        );\n        return;\n      }\n      if (id !== -1) {\n        // @ts-ignore\n        await requestEditPoll(_params);\n        ToastService.show('Edit poll successfully');\n      } else {\n        // @ts-ignore\n        await requestCreatePoll({\n          ..._params,\n          options: _ops,\n        });\n        ToastService.show('Create poll successfully');\n      }\n      goBack();\n    }, [id, params]);\n\n  const animatedActiveBtn = useDerivedValue(() => {\n    return !!params.value.channel_id;\n  }, []);\n\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        'worklet';\n\n        params.value = {\n          ...params.value,\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n\n  const renderItem = useCallback(\n    (item: any, index: number) => {\n      return (\n        <MenuItem\n          key={index}\n          title={item.label}\n          onPress={() => {\n            onChangeValue('channel_id', item.value);\n            setLabel(item.label);\n            bottomSheetRef.current?.dismiss();\n          }}\n        />\n      );\n    },\n    [bottomSheetRef],\n  );\n\n  useAutoToastError(createError);\n\n  useEffect(() => {\n    let _params = {\n      ...initParamCreatePoll,\n    };\n    if (poll) {\n      _params = {\n        channel_id: poll?.channel_id || 0,\n        name: poll?.name || '',\n        multi: Boolean(Number(poll?.config.multi)),\n        has_etime: Boolean(Number(poll?.config.has_etime)),\n        etime: poll?.config?.etime,\n        has_stime: Boolean(Number(poll?.config.has_etime)),\n        stime: poll?.config?.stime,\n        allow_update: Boolean(Number(poll?.config.allow_update)),\n        allow_added: Boolean(Number(poll?.config.allow_added)),\n        has_limit: Boolean(Number(poll?.config.has_limit)),\n        limited_answers: Number(poll?.config?.limited_answers || 3),\n      };\n    }\n    params.value = _params;\n  }, [id]);\n\n  return (\n    <FullScreenWrapper isGrey>\n      <MyKeyboardAvoidingView ref={ref} scrollRef={scrollRef}>\n        <LoadingModal isVisible={loading} />\n        <HeaderCreatePost\n          title={'Create a poll'}\n          active={animatedActiveBtn}\n          // id={id}\n          onPress={onPressSubmit}\n          loading={loading}\n          onGoBack={onGoBack}\n        />\n        <SScrollView ref={scrollRef} keyboardShouldPersistTaps={'handled'}>\n          <SContainer>\n            <SWhiteBox>\n              <View style={globalStyles.mb4}>\n                <UIText.HeaderMedium>General information</UIText.HeaderMedium>\n                <View style={globalStyles.mt12}>\n                  <AvatarWithSelectChannel\n                    bottomSheetRef={bottomSheetRef}\n                    label={label}\n                    typePost={'a poll'}\n                  />\n                </View>\n              </View>\n              <UIInput.Text\n                title={'Poll name'}\n                keyName={'name'}\n                params={params}\n                placeholder={'---'}\n                defaultValue={''}\n                required\n              />\n              <UITextInput\n                title={'Poll content'}\n                keyName={'content'}\n                params={params}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n              />\n              <UIInput.UserPicker\n                title={'Followers'}\n                keyName={'followers'}\n                params={params}\n                onChangeValue={onChangeValue}\n                multiple\n                type={'user'}\n              />\n            </SWhiteBox>\n            <SWhiteBox>\n              {id == -1 ? (\n                <PollOptions\n                  optionsRef={optionsRef}\n                  isMultipleSelection={poll ? poll.config.multi : false}\n                  onPressAddOption={onPressAddOption}\n                />\n              ) : null}\n            </SWhiteBox>\n            <SWhiteBox>\n              <UIText.HeaderMedium>Settings</UIText.HeaderMedium>\n              <UICheckBoxCollapse\n                title={'Multiple answers per user (MA)'}\n                keyNameCheckbox={'multi'}\n                params={params}\n                childComponent={\n                  <UIInput.Selector\n                    keyName={'limited_answers'}\n                    params={params}\n                    title={'Limited answer'}\n                    onChangeValue={onChangeValue}\n                    options={limitedAnswerOption}\n                  />\n                }\n              />\n              <UICheckBoxCollapse\n                title={'Enable started time'}\n                keyNameCheckbox={'has_stime'}\n                params={params}\n                childComponent={\n                  <UIDateTimeInput\n                    keyName={'stime'}\n                    params={params}\n                    title={translate('Started vote')}\n                    onChangeValue={onChangeValue}\n                    mode={'datetime'}\n                  />\n                }\n              />\n              <UICheckBoxCollapse\n                title={'Enable voting deadline'}\n                keyNameCheckbox={'has_etime'}\n                params={params}\n                childComponent={\n                  <UIDateTimeInput\n                    keyName={'etime'}\n                    params={params}\n                    title={translate('Voting deadline')}\n                    onChangeValue={onChangeValue}\n                    mode={'datetime'}\n                  />\n                }\n              />\n\n              <UIText.HeaderMedium>Advanced settings</UIText.HeaderMedium>\n\n              <CheckboxWithText\n                params={params}\n                keyName={'allow_update'}\n                title={'Allow users to update their voting after voted'}\n              />\n\n              <CheckboxWithText\n                params={params}\n                keyName={'allow_added'}\n                title={'Allow users to add new options to the voting'}\n              />\n\n              <UICheckBoxCollapse\n                title={'Limited answers for multiple-answers voting'}\n                keyNameCheckbox={'has_limit'}\n                params={params}\n                childComponent={\n                  <UITextInput\n                    keyName={'limited_answers'}\n                    params={params}\n                    title={translate('Limit number of answers') + ' (10)'}\n                    onChangeValue={onChangeValue}\n                    placeholder={translate('Limit number of answers') + ' (10)'}\n                    keyboardType={'number-pad'}\n                  />\n                }\n              />\n            </SWhiteBox>\n            <AnimatedBottomSpace />\n          </SContainer>\n        </SScrollView>\n        <DiscardDialog\n          title={'Discard change'}\n          content={\n            'You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.'\n          }\n          visible={visibleDialog}\n          onClose={hideDialog}\n        />\n        <BottomSheetMenu\n          name={'channel'}\n          ref={bottomSheetRef}\n          items={channelsOption}\n          renderMenuItem={renderItem}\n          titleHeader={'Select channel'}\n        />\n      </MyKeyboardAvoidingView>\n    </FullScreenWrapper>\n  );\n});\n\nexport default CreatePollScreen;\n\nconst SContainer = styled(Animated.View)`\n  flex: 1;\n  gap: 8px;\n`;\nconst SWhiteBox = styled.View`\n  margin-top: 8px;\n  background-color: white;\n  padding: 12px 16px;\n  gap: 8px;\n`;\nconst SScrollView = styled.ScrollView`\n  flex: 1;\n`;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {IC_OUTLINED_LEFT} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={IC_OUTLINED_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n"],"names":["_templateObject","_react","require","_native","_interopRequireDefault","_reactNativeReanimated","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","_core","_ui","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","_worklet_15436915436154_init_data","code","_worklet_1112699002297_init_data","_worklet_5708069767645_init_data","_worklet_7981997842796_init_data","_worklet_12227611261093_init_data","SItemContainer","exports","memoForwardRef","_ref","ref","anonymous","children","contentStyle","onRemoveItem","height","useSharedValue","isRemoved","onLayout","useWorkletCallback","_ref2","_height","nativeEvent","layout","value","__closure","__initData","__workletHash","onRemove","useCallback","toBoolean","interactManager","animatedStyle","useAnimatedStyle","overflow","width","useAnimatedReaction","_isRemoved","cur","prev","runOnJS","remove","withDelay","withTiming","duration","useImperativeHandle","jsx","style","View","styled","Animated","_taggedTemplateLiteralLoose2","_templateObject2","_worklet_13485313489555_init_data","_worklet_13009787564846_init_data","_worklet_12620652436579_init_data","_worklet_9707989539303_init_data","_worklet_9732393610198_init_data","SContainer","props","contentHeight","animatedHeight","type","_animatedHeight","useDerivedValue","maxHeight","animatedContainerStyle","assign","SContent","_worklet_13255340684088_init_data","_worklet_227105931522_init_data","_worklet_4902463581841_init_data","_worklet_1505093327717_init_data","_worklet_16559023469896_init_data","visible","toggle","press","console","log","_visible","_contentHeight","opacity","interpolate","e","_templateObject3","_templateObject4","_asset","_worklet_8674385749251_init_data","_worklet_14097579138961_init_data","SRow","memo","bottomSheetRef","label","typePost","me","useMe","widthButton","animatedStyled","onViewLayout","jsxs","Avatar","size","userKey","id","disableClick","SView","UIText","BodyMedium500","name","SButtonSelect","title","onPress","_bottomSheetRef$curre","current","present","SExpandIcon","source","IC_OUTLINED_EXPAND_MORE","UIButton","attrs","p","textStyle","UITextStyle","body_medium_400","color","theme","neutral2","textProps","numberOfLines","neutral5","Image","_UICheckbox","_AnimatedCollapseWrapper","_reactNative","_worklet_4630928280947_init_data","SBtn","params","keyNameCheckbox","childComponent","collapseRef","useRef","mounted","useMounted","animatedCheckbox","useEffect","_collapseRef$current","onTick","_collapseRef$current2","_defineProperty2","Wrapper","UICheckbox","STitleCheckbox","AnimatedCollapseWrapper","marginTop","Text","neutral1","_AnimatedCollapseList","_SimplePollOption","_moment","isMultipleSelection","onPressAddOption","optionsRef","_useState","useState","moment","valueOf","toString","_useState2","_slicedToArray2","options","setOptions","_toConsumableArray2","optionList","useMemo","values","onOptionChange","map","item","onOptionDelete","filter","concat","SField","STitle","AnimatedCollapseList","length","index","SimplePollOption","onChange","onDelete","autoFocus","BtnAddOption","white","HeaderMedium","IC_OUTLINED_ADD","imageSize","imageStyle","tintColor","marginLeft","_templateObject5","_templateObject6","_AnimatedCollapseItem","_worklet_9005914301602_init_data","BtnClear","refItem","onDeleteCB","_onRemove","_asyncToGenerator2","_refItem$current","onChangeText","value1","AnimatedCollapseItem","Border","BtnSelect","ViewInput","STextInput","placeholder","SIconClose","IC_FILLED_CANCEL","TouchableOpacity","backgroundColor","TextInput","placeholderTextColor","grey4","Fonts","Regular","neutral3","_HeaderCreatePost","_type","_channels","_AnimatedBottomSpace","_globalStyle","_updates","_DiscardDialog","_useAsyncFn3","_useLanguage","_MenuItem","_function","_BottomSheets","_AvatarWithSelectChannel","_PollOptions","_CheckboxWithText","_UICheckboxCollapse","_LoadingModal","limitedAnswer","Array","from","_","String","_worklet_15277953691302_init_data","_worklet_690685769123_init_data","CreatePollScreen","_useUpdates","useNavigationParams","scrollRef","useAnimatedRef","initParamCreatePoll","_useBoolean","useBoolean","_useBoolean2","visibleDialog","hideDialog","channelsOption","useChannelsByQuery","_getChannels","getChannels","setLabel","poll","useUpdates","attachment","selectedChannel","find","channel_id","limitedAnswerOption","has_limit","limited_answers","onGoBack","goBack","_useAsyncFn","useAsyncFn","_params$value","_ops","_params","multi","has_etime","etime","format","has_stime","stime","allow_update","allow_added","normalizeStringForSearch","trim","ToastService","show","translate","vi","en","Number","requestEditPoll","requestCreatePoll","_useAsyncFn2","_useAsyncFn2$","loading","createError","error","onPressSubmit","animatedActiveBtn","onChangeValue","runOnUI","_key","_value","renderItem","MenuItem","dismiss","useAutoToastError","_poll$config","_poll$config2","_poll$config3","Boolean","config","FullScreenWrapper","isGrey","MyKeyboardAvoidingView","isVisible","HeaderCreatePost","active","SScrollView","keyboardShouldPersistTaps","SWhiteBox","globalStyles","mb4","mt12","AvatarWithSelectChannel","UIInput","keyName","defaultValue","required","UITextInput","UserPicker","multiple","PollOptions","UICheckBoxCollapse","Selector","UIDateTimeInput","mode","CheckboxWithText","keyboardType","AnimatedBottomSpace","DiscardDialog","content","onClose","BottomSheetMenu","items","renderMenuItem","titleHeader","ScrollView","_helper","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","HeaderWrapper","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","paddingTop","useTheme","animatedBtnStyle","interpolateColor","primaryColor","animatedProps","useAnimatedProps","pointerEvents","FlexCenter","gap","IC_OUTLINED_LEFT","HeaderLarge","SCreateBtn","neutral4","body_medium_500"],"sourceRoot":""}