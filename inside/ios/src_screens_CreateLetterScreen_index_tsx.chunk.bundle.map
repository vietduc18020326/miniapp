{"version":3,"file":"src_screens_CreateLetterScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/screens/CreateEventScreen/MyInputBackground.tsx","webpack:///./src/screens/CreateLetterScreen/index.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx","webpack:///./src/store/letters/type.ts"],"sourcesContent":["import {memo, useCallback, useMemo, useState} from 'react';\nimport {Fonts, styled} from '@true/core';\nimport {openCameraRollScreen} from '@/utils';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IC_OUTLINED_IMAGE} from '@true/asset';\nimport {BG_TEMPLATE} from '@/components/PostThumbnail/type';\nimport {getTemplateImage} from '@/services/BgTemplateService';\nimport {SharedValue} from 'react-native-reanimated';\n\ninterface MyInputLogoProps {\n  onSelectedImage: (image: ImageDTO) => void;\n  image: string | undefined;\n}\n\nexport const MyInputBackground = memo(function (props: MyInputLogoProps) {\n  const {onSelectedImage, image} = props;\n  const [imageUri, setImageUri] = useState('');\n\n  const onSelect = useCallback(\n    (image: ImageDTO) => {\n      setImageUri(image.url);\n      onSelectedImage(image);\n    },\n    [onSelectedImage],\n  );\n  const onPress = useCallback(() => {\n    openCameraRollScreen({\n      onSubmit: onSelect,\n    });\n  }, []);\n\n  const source = useMemo(() => {\n    const _image = imageUri ? imageUri : image;\n\n    return Object.values(BG_TEMPLATE).includes(_image as BG_TEMPLATE)\n      ? getTemplateImage(_image as BG_TEMPLATE)\n      : {uri: _image};\n  }, [imageUri, image]);\n\n  return (\n    <SContainer>\n      <STitle>Background</STitle>\n      <SBackgroundWrapper resizeMode={'cover'} source={source}>\n        {imageUri || image ? (\n          <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n            <STextAction hasImage={imageUri || image}>Change</STextAction>\n          </SButtonAction>\n        ) : (\n          <>\n            <SIconPhoto>\n              <SImageGallery source={IC_OUTLINED_IMAGE} />\n              <SText>Upload your background</SText>\n            </SIconPhoto>\n            <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n              <STextAction>Choose file</STextAction>\n            </SButtonAction>\n          </>\n        )}\n      </SBackgroundWrapper>\n    </SContainer>\n  );\n});\nconst SContainer = styled.TouchableOpacity`\n  justify-content: center;\n  border-radius: 4px;\n  border: 1px solid #ebebeb;\n  padding: 0 16px 12px 16px;\n`;\n\nconst STitle = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n  margin-top: 8px;\n  margin-bottom: 4px;\n`;\n\nconst SBackgroundWrapper = styled.ImageBackground`\n  background-color: ${p => p.theme.neutral9};\n  min-height: 180px;\n  border-radius: 8px;\n`;\n\nconst SText = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n`;\n\nconst SButtonAction = styled.TouchableOpacity<{hasImage?: string}>`\n  width: 120px;\n  height: 40px;\n  padding: 4px 16px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: ${p => (p.hasImage ? 'rgba(0, 0, 0, 0.65)' : '#EAEAEA')};\n  margin-top: ${p => (p.hasImage ? 68 : 12)}px;\n  align-self: center;\n`;\nconst SIconPhoto = styled.View`\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n  margin-top: 36px;\n`;\nconst SImageGallery = styled.Image`\n  width: 32px;\n  height: 32px;\n  tint-color: ${p => p.theme.neutral2};\n`;\nconst STextAction = styled.Text<{hasImage?: string}>`\n  font-family: ${Fonts.Medium};\n  font-size: 14px;\n  line-height: 24px;\n  color: ${p => (p.hasImage ? p.theme.white : p.theme.neutral2)};\n`;\n","import React, { memo, useCallback, useEffect, useRef, useState } from \"react\";\nimport { Fonts, goBack, styled, ToastService, useAutoToastError, useBoolean, useNavigationParams } from \"@true/core\";\nimport Animated, { runOnUI, useSharedValue } from \"react-native-reanimated\";\nimport { ICreateLetter, initCreateLetter } from \"@/store/letters/type\";\nimport { MyKeyboardAvoidingView, ScreenWrapper, UIInput, UITextInput } from \"@true/ui\";\nimport { AnimatedBottomSpace } from \"@/components/AnimatedBottomSpace\";\nimport { DiscardDialog } from \"@/components/DiscardDialog\";\nimport { ImageDTO } from \"@/components/CameraRollPicker/useGallery\";\nimport { IBase64, uploadImage } from \"@/utils/helper\";\nimport { useAsyncFn } from \"@/hooks/useAsyncFn\";\nimport { requestCreateLetter, requestEditLetter } from \"@/store/letters/function\";\nimport { getLetters } from \"@/store/letters\";\nimport { Buffer } from \"buffer\";\nimport { BottomSheetModal } from \"@gorhom/bottom-sheet\";\nimport { MyInputBackground } from \"@/screens/CreateEventScreen/MyInputBackground\";\nimport { HeaderCreatePost } from \"@/screens/CreatePostScreen/HeaderCreatePost\";\nimport { ETypeUpdate } from \"@/store/updates/type\";\nimport { CheckboxWithText } from \"@/components/CheckboxWithText\";\n\nexport interface CreateLetterScreenParams {\n  id: number;\n}\n\nexport const CreateLetterScreen = memo(function CreateLetterScreen() {\n  const { id } = useNavigationParams<CreateLetterScreenParams>();\n\n  const params = useSharedValue<ICreateLetter>(initCreateLetter);\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n  const bottomSheetRef = useRef<BottomSheetModal | null>(null);\n  const [label, setLabel] = useState(\"\");\n\n  const onSelectBackground = useCallback(async (image: ImageDTO) => {\n    const imageUrl = await uploadImage(image);\n    onChangeValue(\"image\", imageUrl);\n  }, []);\n  const [{ loading, error: createError }, onPressSubmit] =\n    useAsyncFn(async () => {\n      if (id !== -1) {\n        await requestEditLetter(params.value);\n      } else {\n        await requestCreateLetter(params.value);\n        ToastService.show(\"Create letter successfully\");\n      }\n      goBack();\n    }, [id, params]);\n  useAutoToastError(createError);\n\n  const onGoBack = useCallback(() => {\n    console.log(\"ss\");\n    goBack();\n  }, []);\n\n  useEffect(() => {\n    let _params = {\n      ...initCreateLetter\n    };\n    if (id > 0) {\n      const letter = getLetters(id);\n      const coverImage: IBase64 = JSON.parse(\n        Buffer.from(\n          letter?.image ||\n          \"eyJ0eXBlIjoiIiwiY29sb3IiOiIiLCJvcGFjaXR5IjowLCJwZXJjZW50IjoxMDAsImltYWdlIjoiIiwidGV4dHMiOltdfQ\",\n          \"base64\"\n        ).toString(\"utf-8\")\n      );\n      _params = {\n        id: letter?.id,\n        content: letter?.content || \"\",\n        name: letter?.name || \"\",\n        image: letter?.image,\n        files: letter?.files,\n        notify: letter?.notify,\n        notify_email: letter?.notify_email,\n        disable_comment: letter?.disable_comment\n      };\n    }\n    params.value = _params;\n  }, [id]);\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        \"worklet\";\n\n        params.value = {\n          ...params.value,\n          [_key]: _value\n        };\n      })(key, value);\n    },\n    [params]\n  );\n  return (\n    <ScreenWrapper>\n      <MyKeyboardAvoidingView>\n        <HeaderCreatePost\n          onPress={onPressSubmit}\n          type={ETypeUpdate.COMPANY_LETTER}\n          isActive={true}\n          id={id}\n          loading={loading}\n          onGoBack={onGoBack}\n        />\n        <SContainer>\n          <SField>\n            <SWrapperBackground>\n              <MyInputBackground\n                onSelectedImage={onSelectBackground}\n                image={params.value.image}\n              />\n            </SWrapperBackground>\n            <SWrapperInput>\n              <UIInput.Text\n                title={\"Title\"}\n                keyName={\"name\"}\n                params={params}\n                placeholder={\"---\"}\n                defaultValue={\"\"}\n                onChangeValue={onChangeValue}\n                required\n              />\n            </SWrapperInput>\n            <SWrapperInput>\n              <UITextInput\n                title={\"Content\"}\n                keyName={\"content\"}\n                params={params}\n                defaultValue={\"\"}\n                onChangeValue={onChangeValue}\n              />\n            </SWrapperInput>\n          </SField>\n          <SField>\n            <SWrapperInput>\n              <STextBold>Advanced settings</STextBold>\n            </SWrapperInput>\n            <CheckboxWithText\n              params={params}\n              keyName={\"draft\"}\n              title={\"Save as a draft\"}\n            />\n            <CheckboxWithText\n              params={params}\n              keyName={\"disable_comment\"}\n              title={\"Disable comments\"}\n            />\n            <CheckboxWithText\n              params={params}\n              keyName={\"notify\"}\n              title={\"Send notification\"}\n            />\n            <CheckboxWithText\n              params={params}\n              keyName={\"notify_email\"}\n              title={\"Send email to everyone\"}\n            />\n            <AnimatedBottomSpace />\n          </SField>\n        </SContainer>\n        <DiscardDialog\n          title={\"Discard change\"}\n          content={\n            \"You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.\"\n          }\n          visible={visibleDialog}\n          onClose={hideDialog}\n        />\n      </MyKeyboardAvoidingView>\n    </ScreenWrapper>\n  );\n});\n\nconst SContainer = styled(Animated.View)`\n  flex: 1;\n`;\n\n\nconst SField = styled.View`\n  padding-bottom: 12px;\n  margin-top: 8px;\n  background-color: ${p => p.theme.white};\n`;\n\nconst SWrapperInput = styled.View`\n  margin: 8px 16px 0 16px;\n`;\n\nconst SWrapperBackground = styled.View`\n  margin-top: 8px;\n`;\n\nconst STextBold = styled.Text`\n  font-family: ${Fonts.Medium};\n  font-size: 16px;\n  line-height: 24px;\n  color: ${p => p.theme.neutral1};\n`;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {IC_OUTLINED_LEFT} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={IC_OUTLINED_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n","import {IReaction, IStats} from '@/store/updates/type';\n\nexport interface ILetter {\n  id: number;\n  metatype: string;\n  user_id: number;\n  status: number;\n  name: string;\n  content: string;\n  files: any[];\n  seens: number[];\n  update_id: number;\n  since: number;\n  last_update: number;\n  followers: number[];\n  disable_comment: number;\n  published_at: number;\n  notify: number;\n  notify_email: number;\n  link: string;\n  hid: string;\n  token: string;\n  image: string;\n  type: 'companyletters';\n  reactions: IReaction[];\n  stats: IStats;\n  managed: number;\n}\nexport interface ICreateLetter {\n  id?: number;\n  image?: string;\n  name: string;\n  content: string;\n  files?: any;\n  draft?: number;\n  notify?: number;\n  notify_email?: number;\n  disable_comment?: number;\n}\nexport const initCreateLetter: ICreateLetter = {\n  name: '',\n  content: '',\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_react","require","_core","_utils","_asset","_type","_BgTemplateService","_jsxRuntime","SContainer","exports","memo","props","onSelectedImage","image","_useState","useState","_useState2","_slicedToArray2","default","imageUri","setImageUri","onSelect","useCallback","url","onPress","openCameraRollScreen","onSubmit","source","useMemo","_image","Object","values","BG_TEMPLATE","includes","getTemplateImage","uri","jsxs","children","jsx","STitle","SBackgroundWrapper","resizeMode","SButtonAction","hasImage","STextAction","Fragment","SIconPhoto","SImageGallery","IC_OUTLINED_IMAGE","SText","styled","TouchableOpacity","_taggedTemplateLiteralLoose2","Text","Fonts","Regular","p","theme","neutral2","ImageBackground","neutral9","View","Image","Medium","white","_interopRequireWildcard","_reactNativeReanimated","_ui","_AnimatedBottomSpace","_DiscardDialog","_helper","_useAsyncFn3","_function","_letters","_buffer","_MyInputBackground","_HeaderCreatePost","_type2","_CheckboxWithText","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_worklet_690685769123_init_data","code","location","sourceMap","version","_ref","id","useNavigationParams","params","useSharedValue","initCreateLetter","_useBoolean","useBoolean","_useBoolean2","visibleDialog","hideDialog","useRef","onSelectBackground","_asyncToGenerator2","imageUrl","uploadImage","onChangeValue","_x","apply","arguments","_useAsyncFn","useAsyncFn","requestEditLetter","value","requestCreateLetter","ToastService","show","goBack","_useAsyncFn2","_useAsyncFn2$","loading","createError","error","onPressSubmit","useAutoToastError","onGoBack","console","log","useEffect","_params","assign","letter","getLetters","JSON","parse","Buffer","from","toString","content","name","files","notify","notify_email","disable_comment","_e","anonymous","runOnUI","global","Error","_key","_value","_defineProperty2","__closure","__initData","__workletHash","__stackDetails","ScreenWrapper","MyKeyboardAvoidingView","HeaderCreatePost","type","ETypeUpdate","COMPANY_LETTER","isActive","SField","SWrapperBackground","MyInputBackground","SWrapperInput","UIInput","title","keyName","placeholder","defaultValue","required","UITextInput","STextBold","CheckboxWithText","AnimatedBottomSpace","DiscardDialog","visible","onClose","Animated","neutral1","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","HeaderWrapper","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","useAnimatedStyle","paddingTop","useTheme","active","animatedBtnStyle","backgroundColor","interpolateColor","neutral3","primaryColor","width","animatedProps","useAnimatedProps","pointerEvents","style","FlexCenter","gap","UIButton","IC_OUTLINED_LEFT","UIText","HeaderLarge","SCreateBtn","neutral4","attrs","textStyle","UITextStyle","body_medium_500","color"],"sourceRoot":""}