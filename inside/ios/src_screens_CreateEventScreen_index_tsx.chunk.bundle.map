{"version":3,"file":"src_screens_CreateEventScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AvatarWithSelectChannel/index.tsx","webpack:///./src/screens/CreateEventScreen/MyInputBackground.tsx","webpack:///./src/screens/CreateEventScreen/index.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx","webpack:///./src/store/events/function.tsx","webpack:///./src/store/events/type.ts"],"sourcesContent":["import React, {memo, RefObject} from 'react';\nimport {Colors, Fonts, styled, useMe} from '@true/core';\nimport {IC_OUTLINED_EXPAND_MORE} from '@true/asset';\nimport {Avatar, UIButton, UIText, UITextStyle} from '@true/ui';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {globalStyles} from '@/utils/globalStyle';\nimport {\n  useAnimatedStyle,\n  useSharedValue,\n  useWorkletCallback,\n} from 'react-native-reanimated';\nimport {LayoutChangeEvent} from 'react-native';\n\nexport const AvatarWithSelectChannel = memo(function AvatarWithSelectChannel({\n  bottomSheetRef,\n  label,\n  typePost,\n}: {\n  bottomSheetRef: RefObject<BottomSheetModal>;\n  label: string;\n  typePost: string;\n}) {\n  const me = useMe();\n  const widthButton = useSharedValue(200);\n\n  const animatedStyled = useAnimatedStyle(\n    () => ({\n      width: widthButton.value,\n    }),\n    [],\n  );\n  const onViewLayout = useWorkletCallback(\n    (e: LayoutChangeEvent) => {\n      widthButton.value = e.nativeEvent.layout.width;\n    },\n    [widthButton],\n  );\n\n  return (\n    <SRow>\n      <Avatar size={48} userKey={me?.id || '0'} disableClick={true} />\n      <SView>\n        <UIText.BodyMedium500 onLayout={onViewLayout}>\n          {me?.name} create {typePost}\n        </UIText.BodyMedium500>\n        <SButtonSelect\n          style={animatedStyled}\n          title={label ? label : 'Select channel'}\n          onPress={() => {\n            bottomSheetRef.current?.present();\n          }}>\n          <SExpandIcon source={IC_OUTLINED_EXPAND_MORE} />\n        </SButtonSelect>\n      </SView>\n    </SRow>\n  );\n});\n\nconst SRow = styled.View`\n  flex-direction: row;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst SView = styled.View`\n  justify-content: center;\n  gap: 4px;\n`;\nconst SButtonSelect = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_400,\n    color: p.theme.neutral2,\n    width: '85%',\n  },\n  textProps: {\n    numberOfLines: 1,\n  },\n}))`\n  flex-direction: row;\n  border-radius: 40px;\n  border-width: 1px;\n  border-color: ${p => p.theme.neutral5};\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  padding-left: 16px;\n  padding-right: 8px;\n`;\n\nconst SExpandIcon = styled.Image`\n  width: 24px;\n  height: 24px;\n  tint-color: ${p => p.theme.neutral2};\n`;\n","import {memo, useCallback, useMemo, useState} from 'react';\nimport {Fonts, styled} from '@true/core';\nimport {openCameraRollScreen} from '@/utils';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IC_OUTLINED_IMAGE} from '@true/asset';\nimport {BG_TEMPLATE} from '@/components/PostThumbnail/type';\nimport {getTemplateImage} from '@/services/BgTemplateService';\nimport {SharedValue} from 'react-native-reanimated';\n\ninterface MyInputLogoProps {\n  onSelectedImage: (image: ImageDTO) => void;\n  image: string | undefined;\n}\n\nexport const MyInputBackground = memo(function (props: MyInputLogoProps) {\n  const {onSelectedImage, image} = props;\n  const [imageUri, setImageUri] = useState('');\n\n  const onSelect = useCallback(\n    (image: ImageDTO) => {\n      setImageUri(image.url);\n      onSelectedImage(image);\n    },\n    [onSelectedImage],\n  );\n  const onPress = useCallback(() => {\n    openCameraRollScreen({\n      onSubmit: onSelect,\n    });\n  }, []);\n\n  const source = useMemo(() => {\n    const _image = imageUri ? imageUri : image;\n\n    return Object.values(BG_TEMPLATE).includes(_image as BG_TEMPLATE)\n      ? getTemplateImage(_image as BG_TEMPLATE)\n      : {uri: _image};\n  }, [imageUri, image]);\n\n  return (\n    <SContainer>\n      <STitle>Background</STitle>\n      <SBackgroundWrapper resizeMode={'cover'} source={source}>\n        {imageUri || image ? (\n          <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n            <STextAction hasImage={imageUri || image}>Change</STextAction>\n          </SButtonAction>\n        ) : (\n          <>\n            <SIconPhoto>\n              <SImageGallery source={IC_OUTLINED_IMAGE} />\n              <SText>Upload your background</SText>\n            </SIconPhoto>\n            <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n              <STextAction>Choose file</STextAction>\n            </SButtonAction>\n          </>\n        )}\n      </SBackgroundWrapper>\n    </SContainer>\n  );\n});\nconst SContainer = styled.TouchableOpacity`\n  justify-content: center;\n  border-radius: 4px;\n  border: 1px solid #ebebeb;\n  padding: 0 16px 12px 16px;\n`;\n\nconst STitle = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n  margin-top: 8px;\n  margin-bottom: 4px;\n`;\n\nconst SBackgroundWrapper = styled.ImageBackground`\n  background-color: ${p => p.theme.neutral9};\n  min-height: 180px;\n  border-radius: 8px;\n`;\n\nconst SText = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n`;\n\nconst SButtonAction = styled.TouchableOpacity<{hasImage?: string}>`\n  width: 120px;\n  height: 40px;\n  padding: 4px 16px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: ${p => (p.hasImage ? 'rgba(0, 0, 0, 0.65)' : '#EAEAEA')};\n  margin-top: ${p => (p.hasImage ? 68 : 12)}px;\n  align-self: center;\n`;\nconst SIconPhoto = styled.View`\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n  margin-top: 36px;\n`;\nconst SImageGallery = styled.Image`\n  width: 32px;\n  height: 32px;\n  tint-color: ${p => p.theme.neutral2};\n`;\nconst STextAction = styled.Text<{hasImage?: string}>`\n  font-family: ${Fonts.Medium};\n  font-size: 14px;\n  line-height: 24px;\n  color: ${p => (p.hasImage ? p.theme.white : p.theme.neutral2)};\n`;\n","import {ScreenWrapper, UIInput, UITextInput} from '@true/ui';\nimport React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  Fonts,\n  getUser,\n  goBack,\n  styled,\n  ToastService,\n  useAutoToastError,\n  useBoolean,\n  useNavigationParams,\n} from '@true/core';\nimport Animated, {runOnUI, useSharedValue} from 'react-native-reanimated';\nimport {ICreateEvent, initCreateEvent} from '@/store/events/type';\nimport {getChannels, useChannelsByQuery} from '@/store/channels';\nimport {AnimatedBottomSpace} from '@/components/AnimatedBottomSpace';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IBase64, uploadImage} from '@/utils/helper';\nimport {Buffer} from 'buffer';\nimport moment from 'moment';\nimport {useAsyncFn} from '@/hooks/useAsyncFn';\nimport {DiscardDialog} from '@/components/DiscardDialog';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {MenuItem} from '@/components/MenuItem';\nimport {BottomSheetMenu} from '@/components/BottomSheets';\nimport {requestCreateEvent, requestEditEvent} from '@/store/events/function';\nimport {MyInputBackground} from '@/screens/CreateEventScreen/MyInputBackground';\nimport {AvatarWithSelectChannel} from '@/components/AvatarWithSelectChannel';\nimport {useUpdates} from '@/store/updates';\nimport {HeaderCreatePost} from '@/screens/CreatePostScreen/HeaderCreatePost';\nimport {ETypeUpdate} from '@/store/updates/type';\nimport {CheckboxWithText} from '@/components/CheckboxWithText';\n\nexport interface CreateEventScreenParams {\n  id: number;\n}\n\nexport const CreateEventScreen = memo(function () {\n  const {id} = useNavigationParams<CreateEventScreenParams>();\n\n  const params = useSharedValue<ICreateEvent>(initCreateEvent);\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n  const bottomSheetRef = useRef<BottomSheetModal | null>(null);\n  const [label, setLabel] = useState('');\n  const event = useUpdates(id)?.attachment;\n  const imageRef = useRef<ImageDTO | null>(null);\n\n  const channelsOption = useChannelsByQuery('joined').map(id => ({\n    label: getChannels(id)?.name || 'Undefined channel',\n    value: id,\n  }));\n\n  const onSelectBackground = useCallback(async (image: ImageDTO) => {\n    imageRef.current = image;\n    onChangeValue('cover-bg', image.url);\n  }, []);\n\n  const [{loading, error: createError}, onPressSubmit] =\n    useAsyncFn(async () => {\n      let imageUrl = params.value['cover-bg'];\n      if (imageRef.current) {\n        imageUrl = await uploadImage(imageRef.current);\n      }\n\n      const _params = {\n        ...params.value,\n        'cover-bg': imageUrl,\n      };\n      if (id !== -1) {\n        await requestEditEvent(_params, id);\n      } else {\n        await requestCreateEvent(_params);\n        ToastService.show('Create event successfully');\n      }\n      goBack();\n    }, [id, imageRef.current, params]);\n  useAutoToastError(createError);\n\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        'worklet';\n\n        params.value = {\n          ...params.value,\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n\n  const onGoBack = useCallback(() => {\n    console.log('ss');\n    goBack();\n  }, []);\n\n  useEffect(() => {\n    let _params = {\n      ...initCreateEvent,\n    };\n    if (event) {\n      const coverImage: IBase64 = JSON.parse(\n        Buffer.from(\n          event?.cover ||\n            'eyJ0eXBlIjoiIiwiY29sb3IiOiIiLCJvcGFjaXR5IjowLCJwZXJjZW50IjoxMDAsImltYWdlIjoiIiwidGV4dHMiOltdfQ',\n          'base64',\n        ).toString('utf-8'),\n      );\n      const listGuest = event?.followers\n        .map((id: any) => `@${getUser(id)?.username}`)\n        .join(' ');\n      const listOwners = event?.owners\n        .map((id: any) => `@${getUser(id)?.username}`)\n        .join(' ');\n      setLabel(getChannels(event?.channel_id)?.name || '');\n      _params = {\n        id: event?.id,\n        address: event?.address || '',\n        channel_id: event?.channel_id || 0,\n        content: event?.content,\n        'cover-bg': coverImage.image,\n        guests: listGuest,\n        name: event?.name || '',\n        'file[]': event?.files || [],\n        owners: listOwners,\n        'time-date': moment(event?.time * 1000).format('DD/MM/YYYY'),\n        'time-time': moment(event?.time * 1000).format('hh:mm'),\n      };\n    }\n    params.value = _params;\n  }, [event]);\n\n  const renderItem = useCallback(\n    (item: any, index: number) => {\n      return (\n        <MenuItem\n          key={index}\n          title={item.label}\n          onPress={() => {\n            onChangeValue('channel_id', item.value);\n            setLabel(item.label);\n            bottomSheetRef.current?.dismiss();\n          }}\n        />\n      );\n    },\n    [bottomSheetRef],\n  );\n\n  return (\n    <ScreenWrapper>\n      <HeaderCreatePost\n        onPress={onPressSubmit}\n        type={ETypeUpdate.EVENT}\n        isActive={true}\n        id={id}\n        loading={loading}\n        onGoBack={onGoBack}\n      />\n      <SContainer>\n        <SField>\n          <STitle>General information</STitle>\n          <SWrapperInput>\n            <AvatarWithSelectChannel\n              bottomSheetRef={bottomSheetRef}\n              label={label}\n              typePost={'an event'}\n            />\n          </SWrapperInput>\n          <CheckboxWithText\n            params={params}\n            keyName={'privacy'}\n            title={'Only attendees can view this event'}\n          />\n          <MyInputBackground\n            onSelectedImage={onSelectBackground}\n            image={params.value['cover-bg']}\n          />\n          <SWrapperInput>\n            <UIInput.Text\n              title={'Title'}\n              keyName={'name'}\n              params={params}\n              placeholder={'---'}\n              defaultValue={''}\n              onChangeValue={onChangeValue}\n              required\n            />\n          </SWrapperInput>\n          {/*<SWrapperInputDate>*/}\n          {/*  <UIInput.DateTime*/}\n          {/*    title={'Date'}*/}\n          {/*    keyName={'time-date'}*/}\n          {/*    control={control}*/}\n          {/*    placeholder={'---'}*/}\n          {/*    defaultValue={''}*/}\n          {/*    required*/}\n          {/*    isDateTimeInput*/}\n          {/*    modeDateTime={'date'}*/}\n          {/*    style={{flex: 1}}*/}\n          {/*  />*/}\n          {/*  <CustomInput*/}\n          {/*    title={'Time'}*/}\n          {/*    keyName={'time-time'}*/}\n          {/*    control={control}*/}\n          {/*    placeholder={'---'}*/}\n          {/*    defaultValue={''}*/}\n          {/*    required*/}\n          {/*    isDateTimeInput*/}\n          {/*    modeDateTime={'time'}*/}\n          {/*    style={{flex: 1, marginLeft: 12}}*/}\n          {/*  />*/}\n          {/*</SWrapperInputDate>*/}\n          <SWrapperInput>\n            <UIInput.Text\n              title={'Location'}\n              keyName={'address'}\n              params={params}\n              placeholder={'---'}\n              defaultValue={''}\n              onChangeValue={onChangeValue}\n            />\n          </SWrapperInput>\n          <SWrapperInput>\n            <UITextInput\n              title={'Content'}\n              keyName={'content'}\n              params={params}\n              defaultValue={''}\n              onChangeValue={onChangeValue}\n            />\n          </SWrapperInput>\n          <SWrapperInput>\n            <UIInput.Attachment\n              title={'Attach files or Images'}\n              keyName={'file[]'}\n              params={params}\n              onChangeValue={onChangeValue}\n            />\n          </SWrapperInput>\n        </SField>\n        <SField>\n          <STitle>Attendees</STitle>\n          <SWrapperInput>\n            <UIInput.UserPicker\n              title={'Managers'}\n              keyName={'owners'}\n              params={params}\n              onChangeValue={onChangeValue}\n              type={'user'}\n            />\n          </SWrapperInput>\n          <SWrapperInput>\n            <UIInput.UserPicker\n              title={'Invited guests'}\n              type={'user'}\n              keyName={'guests'}\n              params={params}\n              onChangeValue={onChangeValue}\n            />\n          </SWrapperInput>\n          <CheckboxWithText\n            params={params}\n            keyName={'added_by_guests'}\n            title={'Allow guests to add more guests'}\n          />\n        </SField>\n        <AnimatedBottomSpace />\n      </SContainer>\n      <DiscardDialog\n        title={'Discard change'}\n        content={\n          'You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.'\n        }\n        visible={visibleDialog}\n        onClose={hideDialog}\n      />\n      <BottomSheetMenu\n        name={'channel'}\n        ref={bottomSheetRef}\n        items={channelsOption}\n        renderMenuItem={renderItem}\n        titleHeader={'Select channel'}\n      />\n    </ScreenWrapper>\n  );\n});\n\nconst SContainer = styled(Animated.View)`\n  flex: 1;\n`;\n\nconst SField = styled.View`\n  padding-bottom: 12px;\n  margin-top: 8px;\n  background-color: ${p => p.theme.white};\n`;\n\nconst STitle = styled.Text`\n  font-family: ${Fonts.Medium};\n  font-size: 16px;\n  line-height: 24px;\n  color: ${p => p.theme.neutral1};\n  margin-left: 16px;\n  margin-top: 12px;\n`;\n\nconst SWrapperInput = styled.View`\n  margin: 8px 16px 0 16px;\n`;\n\nexport default CreateEventScreen;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {IC_OUTLINED_LEFT} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={IC_OUTLINED_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n","import {Core, Fetch, ToastService} from '@true/core';\nimport {ICreateEvent, IEvent} from '@/store/events/type';\nimport {batch} from 'react-redux';\nimport {setEventsQuery, syncEvents} from '@/store/events/index';\nimport {getUpdates, syncUpdates} from '@/store/updates';\n\nexport const requestPublicEvents = async () => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(`@${Core.systemPath}/inside/ajax/api/event/gets`);\n\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        ['all']: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\n\nexport const requestJoinedEvents = async () => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(`@${Core.systemPath}/inside/ajax/api/event/joined`);\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        ['joined']: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\n\nexport const requestEvent = async (params: {event_id: string | number}) => {\n  const {data} = await Fetch.postWithToken<{\n    event: IEvent;\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/event/get?event_id=${params.event_id}`,\n  );\n\n  batch(() => {\n    if (data.event) {\n      syncEvents([data.event]);\n    }\n  });\n  return data.event;\n};\n\nexport const requestCreateEvent = async (params: ICreateEvent) => {\n  const {data} = await Fetch.postWithToken<{\n    event: IEvent;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/create`, params);\n  batch(() => {\n    if (data.event) {\n      syncEvents([data.event]);\n      setEventsQuery(prev => ({\n        ...prev,\n        ['all']: [data.event.id.toString(), ...(prev['all'] || [])],\n      }));\n    }\n  });\n};\n\nexport const requestEditEvent = async (\n  params: ICreateEvent,\n  updateId?: number,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    event: IEvent;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/edit`, params);\n  batch(() => {\n    if (data.event) {\n      if (updateId && updateId > 0) {\n        const update = getUpdates(updateId);\n        update &&\n          syncUpdates([\n            {\n              ...update,\n              attachment: data.event as any,\n            },\n          ]);\n      }\n      syncEvents([data.event]);\n    }\n  });\n};\n\nexport const requestRemoveEvent = async (params: {id: number}) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/remove`, params);\n  batch(() => {\n    if (data.message === 'ok') {\n      setEventsQuery(prev => ({\n        ...prev,\n        ['all']: (prev['all'] || []).filter(\n          item => item !== params.id.toString(),\n        ),\n      }));\n    }\n  });\n};\n\nexport const requestAttendEvent = async (params: {\n  id: string | number;\n  data: IEvent;\n  myId: string | number;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/attendee/attend`, params);\n  if (data.message == 'ok') {\n    syncEvents([\n      {\n        ...params.data,\n        attendees: [\n          ...new Set([...params.data.attendees, Number(params.myId)]),\n        ],\n      },\n    ]);\n    ToastService.show('Attend event successfully');\n  }\n};\n\nexport const requestInviteEvent = async (params: {\n  id: string | number;\n  data?: IEvent;\n  channel_id: string | number;\n  ids: number[];\n  guests: string;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/attendee/invite`, params);\n  if (data.message == 'ok' && params.data) {\n    syncEvents([\n      {\n        ...params.data,\n        attendees: [...new Set([...params.data.attendees, ...params.ids])],\n      },\n    ]);\n    ToastService.show('Invite event successfully');\n  }\n};\nexport const requestEventsChannel = async (params: {\n  path: string;\n  q?: string;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/channel/update/event?path=${\n      params.path\n    }${params?.q ? '&q=' + params.q : ''}`,\n  );\n  console.log('asd');\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        [params.path]: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\nexport const requestEventsJoinedChannel = async (params: {\n  path: string;\n  q?: string;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/channel/update/event?path=${\n      params.path\n    }&state=joined${params?.q ? '&q=' + params.q : ''}`,\n  );\n  batch(() => {\n    if (data.events.length) {\n      // syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        [`joined_${params.path}`]: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\n\nexport const requestEventsProfile = async (params: {username: string}) => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/profile/get?tail=events&username=${params.username}`,\n  );\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        [params.username]: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return;\n};\n","import {IReaction} from '@/store/updates/type';\n\nexport interface IEvent {\n  id: number;\n  name: string;\n  content: string;\n  cover: any;\n  time: number;\n  address: string;\n  user_id: number;\n  hid: string;\n  token: string;\n  type: string;\n  reactions: IReaction[];\n  files: any[];\n  link: string;\n  followers: number[];\n  attendees: number[];\n  invites: number[];\n  owners: string[];\n  update_id: number;\n  channel_id: number;\n  since: number;\n  data: any;\n  privacy: number;\n  config: any;\n  stats: any;\n  acl: any;\n}\nexport interface ICreateEvent {\n  id?: number;\n  channel_id: number;\n  guests?: string;\n  owners?: string;\n  content?: string;\n  name: string;\n  'time-time': string;\n  address?: string;\n  privacy?: 1 | 0;\n  added_by_guests?: 1 | 0;\n  'file[]'?: any; //base64\n  'time-date': string;\n  'cover-color'?: string;\n  'cover-type'?: 'image' | 'template' | '';\n  'cover-bg'?: string;\n  'cover-opacity'?: number;\n  'cover-percent'?: number;\n}\n\nexport const initCreateEvent: ICreateEvent = {\n  channel_id: 0,\n  name: '',\n  'time-time': '',\n  'time-date': '',\n  owners: '',\n  guests: '',\n  added_by_guests: 1,\n  privacy: 0,\n  'cover-type': 'image',\n  'cover-bg': '',\n  'cover-opacity': 1,\n  'cover-percent': 100,\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_core","_asset","_ui","_reactNativeReanimated","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","_worklet_8674385749251_init_data","code","location","sourceMap","version","_worklet_14097579138961_init_data","AvatarWithSelectChannel","memo","_ref","_e","anonymous","bottomSheetRef","label","typePost","me","useMe","widthButton","useSharedValue","animatedStyled","useAnimatedStyle","global","Error","width","value","__closure","__initData","__workletHash","__stackDetails","onViewLayout","useWorkletCallback","e","nativeEvent","layout","jsxs","SRow","children","jsx","Avatar","size","userKey","id","disableClick","SView","UIText","BodyMedium500","onLayout","name","SButtonSelect","style","title","onPress","_bottomSheetRef$curre","current","present","SExpandIcon","source","IC_OUTLINED_EXPAND_MORE","exports","styled","View","_taggedTemplateLiteralLoose2","UIButton","attrs","p","textStyle","assign","UITextStyle","body_medium_400","color","theme","neutral2","textProps","numberOfLines","neutral5","Image","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_utils","_type","_BgTemplateService","MyInputBackground","props","onSelectedImage","image","_useState","useState","_useState2","_slicedToArray2","imageUri","setImageUri","onSelect","useCallback","url","openCameraRollScreen","onSubmit","useMemo","_image","values","BG_TEMPLATE","includes","getTemplateImage","uri","SContainer","STitle","SBackgroundWrapper","resizeMode","SButtonAction","hasImage","STextAction","Fragment","SIconPhoto","SImageGallery","IC_OUTLINED_IMAGE","SText","TouchableOpacity","Text","Fonts","Regular","ImageBackground","neutral9","Medium","white","_channels","_AnimatedBottomSpace","_helper","_buffer","_moment","_interopRequireDefault","_useAsyncFn3","_DiscardDialog","_MenuItem","_BottomSheets","_function","_MyInputBackground","_AvatarWithSelectChannel","_updates","_HeaderCreatePost","_type2","_CheckboxWithText","_worklet_690685769123_init_data","CreateEventScreen","_useUpdates","useNavigationParams","params","initCreateEvent","_useBoolean","useBoolean","_useBoolean2","visibleDialog","hideDialog","useRef","setLabel","event","useUpdates","attachment","imageRef","channelsOption","useChannelsByQuery","map","_getChannels","getChannels","onSelectBackground","_x","_asyncToGenerator2","onChangeValue","apply","arguments","_useAsyncFn","useAsyncFn","imageUrl","uploadImage","_params","requestEditEvent","requestCreateEvent","ToastService","show","goBack","_useAsyncFn2","_useAsyncFn2$","loading","createError","error","onPressSubmit","useAutoToastError","runOnUI","_key","_value","_defineProperty2","onGoBack","console","log","useEffect","_getChannels2","coverImage","JSON","parse","Buffer","from","cover","toString","listGuest","followers","_getUser","getUser","username","join","listOwners","owners","_getUser2","channel_id","address","content","guests","files","moment","time","format","renderItem","item","index","MenuItem","dismiss","ScreenWrapper","HeaderCreatePost","type","ETypeUpdate","EVENT","isActive","SField","SWrapperInput","CheckboxWithText","keyName","UIInput","placeholder","defaultValue","required","UITextInput","Attachment","UserPicker","AnimatedBottomSpace","DiscardDialog","visible","onClose","BottomSheetMenu","ref","items","renderMenuItem","titleHeader","Animated","neutral1","_default","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","paddingTop","useTheme","active","animatedBtnStyle","backgroundColor","interpolateColor","neutral3","primaryColor","animatedProps","useAnimatedProps","pointerEvents","HeaderWrapper","FlexCenter","gap","IC_OUTLINED_LEFT","HeaderLarge","SCreateBtn","neutral4","body_medium_500","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_reactRedux","_index","data","Fetch","postWithToken","Core","systemPath","batch","events","length","syncEvents","setEventsQuery","prev","event_id","_x2","concat","_toConsumableArray2","_x3","_x4","updateId","update","getUpdates","syncUpdates","_x5","message","filter","_x6","attendees","Set","Number","myId","_x7","ids","_x8","path","q","_x9","_x10","added_by_guests","privacy"],"sourceRoot":""}