{"version":3,"file":"src_screens_CoreValueScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/screens/CoreValueScreen/CoreValueThumbnail.tsx","webpack:///./src/screens/CoreValueScreen/index.tsx","webpack:///./src/store/corevalues/function.ts"],"sourcesContent":["import {memo, useCallback} from 'react';\nimport {useCoreValues} from '@/store/corevalues';\nimport {styled, useTheme} from '@true/core';\nimport {Fonts} from '@true/core';\nimport {HTMLRenderer} from '@true/ui';\nimport {navigateToDetailPostScreen} from '@/utils';\nimport {Dimensions, Text, View} from 'react-native';\n// import {SvgXml} from 'react-native-svg';\n// import {SvgIcon} from '@/utils/Svgts';\n\ninterface CoreValueThumbnailProps {\n  id: number;\n  index: number;\n}\n\nexport const CoreValueThumbnail = memo(function (\n  props: CoreValueThumbnailProps,\n) {\n  const {id, index} = props;\n  const data = useCoreValues(id);\n  const theme = useTheme();\n  const onNavigateToDetail = useCallback(() => {\n    navigateToDetailPostScreen({\n      id: data?.update_id || 0,\n      user_id: data?.user_id || 0,\n      time: data?.since || 0,\n      hid: data?.hid || '',\n    });\n  }, []);\n  return (\n    <SContainer onPress={onNavigateToDetail}>\n      <SImageBackground backgroundColor={data?.icon.split(' ')[1]} />\n      <SStyleSvg backgroundColor={data?.icon.split(' ')[1]}>\n        {/*<SvgXml*/}\n        {/*  // @ts-ignore*/}\n        {/*  xml={SvgIcon[data?.icon.split(' ')[0] || 'icon_home']}*/}\n        {/*  width={24}*/}\n        {/*  height={24}*/}\n        {/*  fill={'#FFFFFF'}*/}\n        {/*/>*/}\n      </SStyleSvg>\n      <STitle>{`0${index}. ${data?.name}`}</STitle>\n      <View\n        style={{\n          overflow: 'hidden',\n          paddingTop: 4,\n        }}>\n        <Text> </Text>\n        <HTMLRenderer\n          htmlContent={data?.content || ''}\n          defaultTextProps={{\n            style: {\n              fontSize: 14,\n              lineHeight: 20,\n              color: theme.neutral1,\n            },\n          }}\n        />\n      </View>\n    </SContainer>\n  );\n});\n\nconst margin = 12;\nconst widthScreen = Dimensions.get('window').width;\nconst width = widthScreen / 2 - margin * 2;\n\nconst SContainer = styled.TouchableOpacity`\n  width: ${width}px;\n  height: ${width * 1.2}px;\n  border-radius: 8px;\n  padding: 12px;\n  margin-top: 12px;\n`;\nconst STitle = styled.Text`\n  font-family: ${Fonts.Regular};\n\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 28px;\n  color: #242424;\n`;\nconst SImageBackground = styled.View<{backgroundColor?: string}>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: ${p => p.backgroundColor || '#2A91D6'};\n  opacity: 0.1;\n  border-radius: 8px;\n`;\nconst SStyleSvg = styled.View<{backgroundColor?: string}>`\n  width: 36px;\n  height: 36px;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  background-color: ${p => p.backgroundColor || '#7A8DED'};\n  margin-bottom: 8px;\n`;\n","import {memo, useCallback, useEffect} from 'react';\nimport {ActivityIndicator} from 'react-native';\nimport {styled, useAsyncFn, useMe} from '@true/core';\nimport {FlashList} from '@shopify/flash-list';\nimport {ScreenWrapper} from '@true/ui';\nimport {requestCoreValues} from '@/store/corevalues/function';\nimport {CoreValueThumbnail} from '@/screens/CoreValueScreen/CoreValueThumbnail';\nimport {useCoreValuesByQuery} from '@/store/corevalues';\nimport {CustomHeader} from '@/components/CustomHeader';\nimport {navigateToCreateCoreValueScreen} from '@/utils';\nimport {EUserRole} from '@/utils/helper';\n\nexport const CoreValueScreen = memo(function () {\n  const listCoreValues = useCoreValuesByQuery('all');\n  const me = useMe();\n  const renderItem = useCallback(({item, index}: any) => {\n    return <CoreValueThumbnail id={item} index={index + 1} />;\n  }, []);\n\n  const [{loading}, refreshLetter] = useAsyncFn(async () => {\n    await requestCoreValues();\n    return;\n  }, []);\n\n  const onCreate = useCallback(() => {\n    if (me && Number(me?.role) === EUserRole.ADMIN) {\n      navigateToCreateCoreValueScreen({\n        id: -1,\n      });\n    }\n    return null;\n  }, [me]);\n\n  useEffect(() => {\n    requestCoreValues().then();\n  }, []);\n\n  return (\n    <ScreenWrapper>\n      <CustomHeader\n        isBack\n        title={'Board letters'}\n        onCreate={onCreate}\n        isSearch={false}\n        isDivider\n      />\n      <SContainer>\n        <SFlashList\n          data={listCoreValues}\n          renderItem={renderItem}\n          numColumns={2}\n          keyExtractor={keyExtractor}\n          refreshing={loading}\n          onRefresh={refreshLetter}\n          onEndReachedThreshold={1}\n          removeClippedSubviews={true}\n          // ListHeaderComponent={renderHeader}\n          ListEmptyComponent={<ActivityIndicator />}\n        />\n      </SContainer>\n    </ScreenWrapper>\n  );\n});\n\nconst SFlashList = styled(FlashList)`\n  flex: 1;\n`;\nconst keyExtractor = (item: any) => item;\nconst SContainer = styled.View`\n  flex: 1;\n  background-color: white;\n  padding-left: 20px;\n`;\nexport default CoreValueScreen;\n","import { Core, Fetch } from \"@true/core\";\nimport { batch } from \"react-redux\";\nimport { ICoreValue, ICreateCoreValue } from \"@/store/corevalues/type\";\nimport { setCoreValuesQuery, syncCoreValues } from \"@/store/corevalues/index\";\n\nexport const requestCoreValues = async () => {\n  const { data } = await Fetch.postWithToken<{\n    core_values: ICoreValue[];\n  }>(`@${Core.systemPath}/inside/ajax/api/company/corevalue/gets`);\n\n  batch(() => {\n    if (data[\"core_values\"].length) {\n      syncCoreValues(data.core_values);\n      setCoreValuesQuery(prev => ({\n        ...prev,\n        [\"all\"]: data[\"core_values\"].map(item => item.id.toString())\n      }));\n    }\n  });\n  return data[\"core_values\"];\n};\nexport const requestCoreValueId = async (params: {\n  corevalue_id: string | number;\n}) => {\n  const { data } = await Fetch.postWithToken<{\n    cv: ICoreValue;\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/company/corevalue/get?corevalue_id=${params.corevalue_id}`\n  );\n\n  batch(() => {\n    if (data.cv) {\n      syncCoreValues([data.cv]);\n    }\n  });\n  return data.cv;\n};\nexport const requestCreateCoreValues = async (params: ICreateCoreValue) => {\n  const { data } = await Fetch.postWithToken(\n    `@${Core.systemPath}/inside/ajax/api/company/corevalue/create`,\n    params\n  );\n  // batch(() => {\n  //   // syncLetters([data.event]);\n  //   set(prev => ({\n  //     ...prev,\n  //     ['all']: [data.event.id, ...prev.all],\n  //   }));\n  // });\n};\n\nexport const requestEditCoreValues = async (params: ICreateCoreValue) => {\n  const { data } = await Fetch.postWithToken(\n    `@${Core.systemPath}/inside/ajax/api/company/corevalue/edit`,\n    params\n  );\n  // batch(() => {\n  //   if (data.event) {\n  //     syncEvents([data.event]);\n  //   }\n  // });\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","require","_corevalues","_core","_ui","_utils","_reactNative","_jsxRuntime","CoreValueThumbnail","memo","props","id","index","data","useCoreValues","theme","useTheme","onNavigateToDetail","useCallback","navigateToDetailPostScreen","update_id","user_id","time","since","hid","jsxs","SContainer","onPress","children","jsx","SImageBackground","backgroundColor","icon","split","SStyleSvg","STitle","name","View","style","overflow","paddingTop","Text","HTMLRenderer","htmlContent","content","defaultTextProps","fontSize","lineHeight","color","neutral1","exports","width","Dimensions","get","margin","styled","TouchableOpacity","_taggedTemplateLiteralLoose2","default","Fonts","Regular","p","_flashList","_function","_CoreValueThumbnail","_CustomHeader","_helper","CoreValueScreen","listCoreValues","useCoreValuesByQuery","me","useMe","renderItem","_ref","item","_useAsyncFn","useAsyncFn","_asyncToGenerator2","requestCoreValues","_useAsyncFn2","_slicedToArray2","loading","refreshLetter","onCreate","Number","role","EUserRole","ADMIN","navigateToCreateCoreValueScreen","useEffect","then","ScreenWrapper","CustomHeader","isBack","title","isSearch","isDivider","SFlashList","numColumns","keyExtractor","refreshing","onRefresh","onEndReachedThreshold","removeClippedSubviews","ListEmptyComponent","ActivityIndicator","FlashList","_default","_ref2","_ref3","_ref4","_reactRedux","_index","Fetch","postWithToken","Core","systemPath","batch","length","syncCoreValues","core_values","setCoreValuesQuery","prev","Object","assign","_defineProperty2","map","toString","apply","arguments","_x","params","corevalue_id","cv","_x2","_x3"],"sourceRoot":""}