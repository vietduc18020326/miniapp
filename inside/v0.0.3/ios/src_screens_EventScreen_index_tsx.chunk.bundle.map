{"version":3,"file":"src_screens_EventScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/screens/EventScreen/EventThumbnail.tsx","webpack:///./src/screens/EventScreen/index.tsx","webpack:///./src/store/events/function.tsx"],"sourcesContent":["import React, {memo, useCallback, useMemo} from 'react';\nimport {Fonts, styled} from '@true/core';\nimport moment from 'moment';\nimport {openDetailEventScreen} from '@/utils';\nimport {useEvents} from '@/store/events';\nimport {Buffer} from 'buffer';\nimport {IBase64} from '@/utils/helper';\nimport FastImage from 'react-native-fast-image';\nimport {getChannels} from '@/store/channels';\n\ninterface EventThumbnailProps {\n  id: number;\n}\n\nexport const EventThumbnail = memo(function (props: EventThumbnailProps) {\n  const {id} = props;\n  const data = useEvents(id);\n  const coverImage = useMemo(() => {\n    const str = Buffer.from(data?.cover || '', 'base64').toString('utf-8');\n    if (str) {\n      const _image: IBase64 = JSON.parse(str);\n\n      if (_image && _image.image) {\n        return _image;\n      }\n    }\n    return null;\n  }, [data?.cover]);\n  const openDetailScreen = useCallback(() => {\n    openDetailEventScreen({\n      id: id,\n    });\n  }, []);\n  const channelName = useMemo(() => {\n    return getChannels(data?.channel_id || '')?.name;\n  }, []);\n  return (\n    <SContainer>\n      <SContentContainer onPress={openDetailScreen}>\n        <SImageWrapper>\n          <SChannelBox>\n            <STextChannel>{channelName}</STextChannel>\n          </SChannelBox>\n          <SCoverImage\n            resizeMode={'cover'}\n            source={{uri: coverImage?.image || ''}}\n          />\n        </SImageWrapper>\n        <SInfoWrapper>\n          <STextDate>\n            {moment(\n              // @ts-ignore\n              data?.time * 1000,\n            ).format('dddd, HH:mm DD/MM/YYYY')}\n          </STextDate>\n          <STextTitle>{data?.name}</STextTitle>\n          <SRow>\n            <STextInfo>{`${data?.attendees.length} attendees`}</STextInfo>\n            <SDotView />\n            <STextInfo>{data?.address}</STextInfo>\n          </SRow>\n        </SInfoWrapper>\n      </SContentContainer>\n    </SContainer>\n  );\n});\nconst SContainer = styled.View`\n  background-color: transparent;\n`;\nconst SContentContainer = styled.TouchableOpacity`\n  background-color: white;\n  border-radius: 8px;\n  border: 1px solid #ebebeb;\n  margin: 16px 16px 0 16px;\n  padding: 12px;\n`;\nconst SImageWrapper = styled.View`\n  width: 100%;\n`;\nconst SCoverImage = styled(FastImage)`\n  width: 100%;\n  height: 180px;\n  max-height: 180px;\n  border-radius: 8px;\n  background-color: #2a91d6;\n`;\n\nconst SInfoWrapper = styled.View`\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SRow = styled.View`\n  flex-direction: row;\n  align-items: center;\n`;\nconst STextDate = styled.Text`\n  color: ${p => p.theme.neutral2};\n  font-family: ${Fonts.Medium};\n  font-size: 14px;\n  line-height: 20px;\n  margin-top: 8px;\n`;\n\nconst STextTitle = styled.Text.attrs(props => ({\n  numberOfLines: 2,\n}))`\n  color: ${p => p.theme.neutral1};\n  font-family: ${Fonts.Regular};\n  font-size: 16px;\n  line-height: 24px;\n  margin-top: 4px;\n`;\nconst STextInfo = styled.Text`\n  color: ${p => p.theme.neutral2};\n  font-family: ${Fonts.Medium};\n  font-size: 12px;\n  line-height: 16px;\n  margin-top: 8px;\n`;\nconst SDotView = styled.View`\n  background-color: ${p => p.theme.neutral3};\n  width: 4px;\n  height: 4px;\n  border-radius: 2px;\n  margin: 8px 6px 0 6px;\n`;\nconst SChannelBox = styled.View`\n  display: inline-flex;\n  padding: 4px 8px;\n  justify-content: center;\n  align-items: center;\n  gap: 4px;\n  border-radius: 40px;\n  background-color: rgba(0, 0, 0, 0.65);\n  position: absolute;\n  top: 8px;\n  left: 8px;\n  z-index: 10;\n`;\nconst STextChannel = styled.Text`\n  color: #fff;\n  /* Caption/caption-medium-500 */\n  font-family: ${Fonts.Medium};\n  font-size: 12px;\n  line-height: 16px; /* 133.333% */\n`;\n","import React, {memo, useCallback, useState} from 'react';\nimport {CustomHeader} from '@/components/CustomHeader';\nimport {normalizeStringForSearch} from '@true/core';\nimport {navigateToCreateEvent} from '@/utils';\nimport {ScreenWrapper, ScrollableTabView} from '@true/ui';\nimport {EventThumbnail} from '@/screens/EventScreen/EventThumbnail';\nimport {getEvents, getEventsByQuery, useEventsByQuery} from '@/store/events';\nimport {\n  requestJoinedEvents,\n  requestPublicEvents,\n} from '@/store/events/function';\nimport {IFilterParams} from '@/screens/SearchScreen/type';\n\nexport const EventScreen = memo(function () {\n  const [params, setParams] = useState<IFilterParams>({});\n  const [search, setSearch] = useState('');\n  const onChangeText = useCallback(\n    async (q: string) => {\n      setSearch(q);\n    },\n    [params],\n  );\n\n  const onSetData = useCallback(\n    (prevData: string[]) => {\n      return (prevData || []).filter(item =>\n        normalizeStringForSearch(\n          getEvents(item as string)?.name || '',\n        ).includes(search),\n      );\n    },\n    [search],\n  );\n  const renderItem = useCallback(\n    (item: string | number, index?: number, isLast?: boolean) => {\n      return <EventThumbnail id={item as number} />;\n    },\n    [],\n  );\n  return (\n    <ScreenWrapper isGrey={true}>\n      <CustomHeader\n        title={'Events'}\n        isBack\n        onCreate={() => {\n          navigateToCreateEvent({id: -1});\n        }}\n        isSearch\n        onChangeText={onChangeText}\n      />\n      <ScrollableTabView.Provider\n        params={{}}\n        renderItem={renderItem}\n        getItemByQuery={getEventsByQuery}\n        useItemByQuery={useEventsByQuery}\n        tabs={[\n          {\n            title: 'Public events',\n            content: (p: any) => (\n              <ScrollableTabView.List\n                {...p}\n                itemHeight={190}\n                index={0}\n                requestFn={requestPublicEvents}\n                setData={onSetData}\n              />\n            ),\n          },\n          {\n            title: 'Joined events',\n            content: (p: any) => (\n              <ScrollableTabView.List\n                {...p}\n                itemHeight={190}\n                index={1}\n                requestFn={requestJoinedEvents}\n                query={'joined'}\n                setData={onSetData}\n              />\n            ),\n          },\n        ]}>\n        <ScrollableTabView.CollapsableTabBar />\n        <ScrollableTabView.Content />\n      </ScrollableTabView.Provider>\n    </ScreenWrapper>\n  );\n});\n","import {Core, Fetch, ToastService} from '@true/core';\nimport {ICreateEvent, IEvent} from '@/store/events/type';\nimport {batch} from 'react-redux';\nimport {setEventsQuery, syncEvents} from '@/store/events/index';\nimport {getUpdates, syncUpdates} from '@/store/updates';\n\nexport const requestPublicEvents = async () => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(`@${Core.systemPath}/inside/ajax/api/event/gets`);\n\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        ['all']: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\n\nexport const requestJoinedEvents = async () => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(`@${Core.systemPath}/inside/ajax/api/event/joined`);\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        ['joined']: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\n\nexport const requestEvent = async (params: {event_id: string | number}) => {\n  const {data} = await Fetch.postWithToken<{\n    event: IEvent;\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/event/get?event_id=${params.event_id}`,\n  );\n\n  batch(() => {\n    if (data.event) {\n      syncEvents([data.event]);\n    }\n  });\n  return data.event;\n};\n\nexport const requestCreateEvent = async (params: ICreateEvent) => {\n  const {data} = await Fetch.postWithToken<{\n    event: IEvent;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/create`, params);\n  batch(() => {\n    if (data.event) {\n      syncEvents([data.event]);\n      setEventsQuery(prev => ({\n        ...prev,\n        ['all']: [data.event.id.toString(), ...(prev['all'] || [])],\n      }));\n    }\n  });\n};\n\nexport const requestEditEvent = async (\n  params: ICreateEvent,\n  updateId?: number,\n) => {\n  const {data} = await Fetch.postWithToken<{\n    event: IEvent;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/edit`, params);\n  batch(() => {\n    if (data.event) {\n      if (updateId && updateId > 0) {\n        const update = getUpdates(updateId);\n        update &&\n          syncUpdates([\n            {\n              ...update,\n              attachment: data.event as any,\n            },\n          ]);\n      }\n      syncEvents([data.event]);\n    }\n  });\n};\n\nexport const requestRemoveEvent = async (params: {id: number}) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/remove`, params);\n  batch(() => {\n    if (data.message === 'ok') {\n      setEventsQuery(prev => ({\n        ...prev,\n        ['all']: (prev['all'] || []).filter(\n          item => item !== params.id.toString(),\n        ),\n      }));\n    }\n  });\n};\n\nexport const requestAttendEvent = async (params: {\n  id: string | number;\n  data: IEvent;\n  myId: string | number;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/attendee/attend`, params);\n  if (data.message == 'ok') {\n    syncEvents([\n      {\n        ...params.data,\n        attendees: [\n          ...new Set([...params.data.attendees, Number(params.myId)]),\n        ],\n      },\n    ]);\n    ToastService.show('Attend event successfully');\n  }\n};\n\nexport const requestInviteEvent = async (params: {\n  id: string | number;\n  data?: IEvent;\n  channel_id: string | number;\n  ids: number[];\n  guests: string;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    message: string;\n  }>(`@${Core.systemPath}/inside/ajax/api/event/attendee/invite`, params);\n  if (data.message == 'ok' && params.data) {\n    syncEvents([\n      {\n        ...params.data,\n        attendees: [...new Set([...params.data.attendees, ...params.ids])],\n      },\n    ]);\n    ToastService.show('Invite event successfully');\n  }\n};\nexport const requestEventsChannel = async (params: {\n  path: string;\n  q?: string;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/channel/update/event?path=${\n      params.path\n    }${params?.q ? '&q=' + params.q : ''}`,\n  );\n  console.log('asd');\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        [params.path]: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\nexport const requestEventsJoinedChannel = async (params: {\n  path: string;\n  q?: string;\n}) => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/channel/update/event?path=${\n      params.path\n    }&state=joined${params?.q ? '&q=' + params.q : ''}`,\n  );\n  batch(() => {\n    if (data.events.length) {\n      // syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        [`joined_${params.path}`]: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return data.events;\n};\n\nexport const requestEventsProfile = async (params: {username: string}) => {\n  const {data} = await Fetch.postWithToken<{\n    events: IEvent[];\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/profile/get?tail=events&username=${params.username}`,\n  );\n  batch(() => {\n    if (data.events.length) {\n      syncEvents(data.events);\n      setEventsQuery(prev => ({\n        ...prev,\n        [params.username]: data.events.map(item => item.id.toString()),\n      }));\n    }\n  });\n  return;\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12","_react","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_core","_moment","_interopRequireDefault","_utils","_events","_buffer","_reactNativeFastImage","_channels","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","exports","memo","props","id","data","useEvents","coverImage","useMemo","str","Buffer","from","cover","toString","_image","JSON","parse","image","openDetailScreen","useCallback","openDetailEventScreen","channelName","_getChannels","getChannels","channel_id","name","jsx","SContainer","children","jsxs","SContentContainer","onPress","SImageWrapper","SChannelBox","STextChannel","SCoverImage","resizeMode","source","uri","SInfoWrapper","STextDate","moment","time","format","STextTitle","SRow","STextInfo","attendees","length","SDotView","address","styled","View","_taggedTemplateLiteralLoose2","TouchableOpacity","FastImage","Text","p","theme","neutral2","Fonts","Medium","attrs","numberOfLines","neutral1","Regular","neutral3","_CustomHeader","_ui","_EventThumbnail","_function","_ref","_useState","useState","_useState2","_slicedToArray2","params","_useState3","_useState4","search","setSearch","onChangeText","_asyncToGenerator2","q","_x","apply","arguments","onSetData","prevData","filter","item","_getEvents","normalizeStringForSearch","getEvents","includes","renderItem","index","isLast","EventThumbnail","ScreenWrapper","isGrey","CustomHeader","title","isBack","onCreate","navigateToCreateEvent","isSearch","ScrollableTabView","Provider","getItemByQuery","getEventsByQuery","useItemByQuery","useEventsByQuery","tabs","content","List","assign","itemHeight","requestFn","requestPublicEvents","setData","requestJoinedEvents","query","CollapsableTabBar","Content","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","_reactRedux","_index","_updates","Fetch","postWithToken","Core","systemPath","batch","events","syncEvents","setEventsQuery","prev","_defineProperty2","map","event_id","event","concat","_toConsumableArray2","_x2","updateId","update","getUpdates","syncUpdates","attachment","_x3","_x4","message","_x5","Set","Number","myId","ToastService","show","_x6","ids","_x7","path","console","log","_x8","_x9","username","_x10"],"sourceRoot":""}