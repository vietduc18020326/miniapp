{"version":3,"file":"src_screens_CreateCoreValueScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/screens/CreateCoreValueScreen/index.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx","webpack:///./src/store/corevalues/function.ts","webpack:///./src/store/corevalues/type.ts"],"sourcesContent":["import React, {memo, useCallback, useEffect, useRef} from 'react';\nimport {\n  Fonts,\n  goBack,\n  styled,\n  ToastService,\n  useAutoToastError,\n  useBoolean,\n  useNavigationParams,\n} from '@true/core';\nimport Animated, {\n  runOnUI,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport {\n  AnimatedKeyboardAvoidingViewRef,\n  MyKeyboardAvoidingView,\n  ScreenWrapper,\n  UIInput,\n} from '@true/ui';\nimport {DiscardDialog} from '@/components/DiscardDialog';\nimport {useAsyncFn} from '@/hooks/useAsyncFn';\nimport {ICreateCoreValue, initCreateCoreValue} from '@/store/corevalues/type';\nimport {getCoreValues} from '@/store/corevalues';\nimport {\n  requestCreateCoreValues,\n  requestEditCoreValues,\n} from '@/store/corevalues/function';\nimport {AnimatedBottomSpace} from '@/components/AnimatedBottomSpace';\nimport {HeaderCreatePost} from '@/screens/CreatePostScreen/HeaderCreatePost';\nimport {CheckboxWithText} from '@/components/CheckboxWithText';\nimport LoadingModal from '@/components/LoadingModal';\n\nexport interface CreateCoreValueScreenParams {\n  id: number;\n}\n\nexport const CreateCoreValueScreen = memo(function CreateCoreValueScreen() {\n  const {id} = useNavigationParams<CreateCoreValueScreenParams>();\n  const params = useSharedValue<ICreateCoreValue>(initCreateCoreValue);\n  const ref = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useAnimatedRef<any>();\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n\n  const [{loading, error: createError}, onPressSubmit] =\n    useAsyncFn(async () => {\n      if (id !== -1) {\n        await requestEditCoreValues(params.value);\n      } else {\n        await requestCreateCoreValues(params.value);\n        ToastService.show('Create core values successfully');\n      }\n      goBack();\n    }, [id, params]);\n  useAutoToastError(createError);\n\n  const onGoBack = useCallback(() => {\n    console.log('aa');\n    goBack();\n  }, []);\n\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        'worklet';\n\n        params.value = {\n          ...params.value,\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n\n  const animatedActiveBtn = useDerivedValue(() => {\n    return !!params.value.name;\n  }, []);\n\n  useEffect(() => {\n    let _params = {\n      ...initCreateCoreValue,\n    };\n    if (id > 0) {\n      const coreValue = getCoreValues(id);\n      _params = {\n        id: coreValue?.id,\n        content: coreValue?.content || '',\n        name: coreValue?.name || '',\n        image: coreValue?.image,\n        notify: coreValue?.notify,\n        notify_email: coreValue?.notify_email,\n        disable_comment: coreValue?.disable_comment,\n      };\n    }\n    params.value = _params;\n  }, [id]);\n\n  return (\n    <ScreenWrapper>\n      <MyKeyboardAvoidingView ref={ref} scrollRef={scrollRef}>\n        <HeaderCreatePost\n          onPress={onPressSubmit}\n          active={animatedActiveBtn}\n          id={id}\n          loading={loading}\n          onGoBack={onGoBack}\n          title={'Create core values'}\n        />\n        <LoadingModal isVisible={loading} />\n        <SScrollView ref={scrollRef} keyboardShouldPersistTaps={'handled'}>\n          <SContainer>\n            <SField>\n              <UIInput.Text\n                title={'Title'}\n                keyName={'name'}\n                params={params}\n                placeholder={'---'}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n                required\n              />\n              <UIInput.Text\n                title={'Content'}\n                keyName={'content'}\n                params={params}\n                onChangeValue={onChangeValue}\n              />\n            </SField>\n            <SField>\n              <STextBold>Advanced settings</STextBold>\n              <CheckboxWithText\n                params={params}\n                keyName={'draft'}\n                title={'Save as a draft'}\n              />\n              <CheckboxWithText\n                params={params}\n                keyName={'disable_comment'}\n                title={'Disable comments'}\n              />\n              <CheckboxWithText\n                params={params}\n                keyName={'notify'}\n                title={'Send notification'}\n              />\n              <CheckboxWithText\n                params={params}\n                keyName={'notify_email'}\n                title={'Notify everyone via email'}\n              />\n            </SField>\n            <AnimatedBottomSpace />\n          </SContainer>\n        </SScrollView>\n        <DiscardDialog\n          title={'Discard change'}\n          content={\n            'You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.'\n          }\n          visible={visibleDialog}\n          onClose={hideDialog}\n        />\n      </MyKeyboardAvoidingView>\n    </ScreenWrapper>\n  );\n});\nconst SContainer = styled(Animated.View)`\n  flex: 1;\n  padding: 12px 16px;\n  gap: 12px;\n`;\n\nconst SField = styled.View`\n  background-color: ${p => p.theme.white};\n  gap: 12px;\n`;\n\nconst STextBold = styled.Text`\n  font-family: ${Fonts.Medium};\n  font-size: 16px;\n  line-height: 24px;\n  color: ${p => p.theme.neutral1};\n`;\nconst SScrollView = styled.ScrollView`\n  flex: 1;\n  background-color: white;\n  margin-top: 8px;\n`;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {Icons} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={Icons.Outlined.CHEVRON_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n","import { Core, Fetch } from \"@true/core\";\nimport { batch } from \"react-redux\";\nimport { ICoreValue, ICreateCoreValue } from \"@/store/corevalues/type\";\nimport { setCoreValuesQuery, syncCoreValues } from \"@/store/corevalues/index\";\n\nexport const requestCoreValues = async () => {\n  const { data } = await Fetch.postWithToken<{\n    core_values: ICoreValue[];\n  }>(`@${Core.systemPath}/inside/ajax/api/company/corevalue/gets`);\n\n  batch(() => {\n    if (data[\"core_values\"].length) {\n      syncCoreValues(data.core_values);\n      setCoreValuesQuery(prev => ({\n        ...prev,\n        [\"all\"]: data[\"core_values\"].map(item => item.id.toString())\n      }));\n    }\n  });\n  return data[\"core_values\"];\n};\nexport const requestCoreValueId = async (params: {\n  corevalue_id: string | number;\n}) => {\n  const { data } = await Fetch.postWithToken<{\n    cv: ICoreValue;\n  }>(\n    `@${Core.systemPath}/inside/ajax/api/company/corevalue/get?corevalue_id=${params.corevalue_id}`\n  );\n\n  batch(() => {\n    if (data.cv) {\n      syncCoreValues([data.cv]);\n    }\n  });\n  return data.cv;\n};\nexport const requestCreateCoreValues = async (params: ICreateCoreValue) => {\n  const { data } = await Fetch.postWithToken(\n    `@${Core.systemPath}/inside/ajax/api/company/corevalue/create`,\n    params\n  );\n  // batch(() => {\n  //   // syncLetters([data.event]);\n  //   set(prev => ({\n  //     ...prev,\n  //     ['all']: [data.event.id, ...prev.all],\n  //   }));\n  // });\n};\n\nexport const requestEditCoreValues = async (params: ICreateCoreValue) => {\n  const { data } = await Fetch.postWithToken(\n    `@${Core.systemPath}/inside/ajax/api/company/corevalue/edit`,\n    params\n  );\n  // batch(() => {\n  //   if (data.event) {\n  //     syncEvents([data.event]);\n  //   }\n  // });\n};\n","import {IReaction, IStats} from '@/store/updates/type';\n\nexport interface ICoreValue {\n  id: number;\n  metatype: string;\n  user_id: number;\n  status: number;\n  name: string;\n  content: string;\n  image: string;\n  icon: string;\n  seens: number[];\n  followers: number[];\n  update_id: number;\n  since: number;\n  last_update: number;\n  type: string;\n  hid: string;\n  token: string;\n  reactions: IReaction[];\n  files: any[];\n  link: string;\n  notify: number;\n  notify_email: number;\n  disable_comment: number;\n  published_at: any;\n  stats: IStats;\n}\nexport interface ICreateCoreValue {\n  id?: number;\n  image?: string;\n  name: string;\n  content: string;\n  files?: any;\n  draft?: number;\n  notify?: number;\n  notify_email?: number;\n  disable_comment?: number;\n  icon?: any;\n}\nexport const initCreateCoreValue: ICreateCoreValue = {\n  name: '',\n  content: '',\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","_interopRequireWildcard","require","_core","_reactNativeReanimated","_ui","_DiscardDialog","_useAsyncFn3","_type","_corevalues","_function","_AnimatedBottomSpace","_HeaderCreatePost","_CheckboxWithText","_LoadingModal","_interopRequireDefault","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","_worklet_690685769123_init_data","code","_worklet_13286397810896_init_data","SContainer","exports","memo","id","useNavigationParams","params","useSharedValue","initCreateCoreValue","ref","useRef","scrollRef","useAnimatedRef","_useBoolean","useBoolean","_useBoolean2","_slicedToArray2","visibleDialog","hideDialog","_useAsyncFn","useAsyncFn","_asyncToGenerator2","requestEditCoreValues","value","requestCreateCoreValues","ToastService","show","goBack","_useAsyncFn2","_useAsyncFn2$","loading","createError","error","onPressSubmit","useAutoToastError","anonymous","onGoBack","useCallback","console","log","onChangeValue","key","runOnUI","_key","_value","assign","_defineProperty2","__closure","__initData","__workletHash","animatedActiveBtn","useDerivedValue","name","useEffect","_params","coreValue","getCoreValues","content","image","notify","notify_email","disable_comment","jsx","ScreenWrapper","children","jsxs","MyKeyboardAvoidingView","HeaderCreatePost","onPress","active","title","isVisible","SScrollView","keyboardShouldPersistTaps","SField","UIInput","Text","keyName","placeholder","defaultValue","required","STextBold","CheckboxWithText","AnimatedBottomSpace","DiscardDialog","visible","onClose","styled","Animated","View","_taggedTemplateLiteralLoose2","p","theme","white","Fonts","Medium","neutral1","ScrollView","_helper","_asset","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","HeaderWrapper","props","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","useAnimatedStyle","paddingTop","useTheme","animatedBtnStyle","backgroundColor","interpolateColor","neutral3","primaryColor","width","animatedProps","useAnimatedProps","pointerEvents","style","FlexCenter","gap","UIButton","source","Icons","Outlined","CHEVRON_LEFT","UIText","HeaderLarge","SCreateBtn","neutral4","attrs","textStyle","UITextStyle","body_medium_500","color","_ref","_ref2","_ref3","_ref4","_reactRedux","_index","data","Fetch","postWithToken","Core","systemPath","batch","length","syncCoreValues","core_values","setCoreValuesQuery","prev","map","item","toString","apply","arguments","corevalue_id","cv","_x","_x2","_x3"],"sourceRoot":""}