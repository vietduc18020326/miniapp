{"version":3,"file":"src_screens_CreatePostScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/components/AvatarWithSelectChannel/index.tsx","webpack:///./src/screens/CreateEventScreen/MyInputBackground.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx","webpack:///./src/screens/CreatePostScreen/index.tsx"],"sourcesContent":["import React, {memo, RefObject} from 'react';\nimport {Colors, Fonts, styled, useMe} from '@true/core';\nimport {IC_OUTLINED_EXPAND_MORE} from '@true/asset';\nimport {Avatar, UIButton, UIText, UITextStyle} from '@true/ui';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {globalStyles} from '@/utils/globalStyle';\nimport {\n  useAnimatedStyle,\n  useSharedValue,\n  useWorkletCallback,\n} from 'react-native-reanimated';\nimport {LayoutChangeEvent} from 'react-native';\n\nexport const AvatarWithSelectChannel = memo(function AvatarWithSelectChannel({\n  bottomSheetRef,\n  label,\n  typePost,\n}: {\n  bottomSheetRef: RefObject<BottomSheetModal>;\n  label: string;\n  typePost: string;\n}) {\n  const me = useMe();\n  const widthButton = useSharedValue(200);\n\n  const animatedStyled = useAnimatedStyle(\n    () => ({\n      width: widthButton.value,\n    }),\n    [],\n  );\n  const onViewLayout = useWorkletCallback(\n    (e: LayoutChangeEvent) => {\n      widthButton.value = e.nativeEvent.layout.width;\n    },\n    [widthButton],\n  );\n\n  return (\n    <SRow>\n      <Avatar size={48} userKey={me?.id || '0'} disableClick={true} />\n      <SView>\n        <UIText.BodyMedium500 onLayout={onViewLayout}>\n          {me?.name} create {typePost}\n        </UIText.BodyMedium500>\n        <SButtonSelect\n          style={animatedStyled}\n          title={label ? label : 'Select channel'}\n          onPress={() => {\n            bottomSheetRef.current?.present();\n          }}>\n          <SExpandIcon source={IC_OUTLINED_EXPAND_MORE} />\n        </SButtonSelect>\n      </SView>\n    </SRow>\n  );\n});\n\nconst SRow = styled.View`\n  flex-direction: row;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst SView = styled.View`\n  justify-content: center;\n  gap: 4px;\n`;\nconst SButtonSelect = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_400,\n    color: p.theme.neutral2,\n    width: '85%',\n  },\n  textProps: {\n    numberOfLines: 1,\n  },\n}))`\n  flex-direction: row;\n  border-radius: 40px;\n  border-width: 1px;\n  border-color: ${p => p.theme.neutral5};\n  justify-content: space-between;\n  align-items: center;\n  height: 32px;\n  padding-left: 16px;\n  padding-right: 8px;\n`;\n\nconst SExpandIcon = styled.Image`\n  width: 24px;\n  height: 24px;\n  tint-color: ${p => p.theme.neutral2};\n`;\n","import {memo, useCallback, useMemo, useState} from 'react';\nimport {Fonts, styled} from '@true/core';\nimport {openCameraRollScreen} from '@/utils';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IC_OUTLINED_IMAGE} from '@true/asset';\nimport {BG_TEMPLATE} from '@/components/PostThumbnail/type';\nimport {getTemplateImage} from '@/services/BgTemplateService';\nimport {SharedValue} from 'react-native-reanimated';\n\ninterface MyInputLogoProps {\n  onSelectedImage: (image: ImageDTO) => void;\n  image: string | undefined;\n}\n\nexport const MyInputBackground = memo(function (props: MyInputLogoProps) {\n  const {onSelectedImage, image} = props;\n  const [imageUri, setImageUri] = useState('');\n\n  const onSelect = useCallback(\n    (image: ImageDTO) => {\n      setImageUri(image.url);\n      onSelectedImage(image);\n    },\n    [onSelectedImage],\n  );\n  const onPress = useCallback(() => {\n    openCameraRollScreen({\n      onSubmit: onSelect,\n    });\n  }, []);\n\n  const source = useMemo(() => {\n    const _image = imageUri ? imageUri : image;\n\n    return Object.values(BG_TEMPLATE).includes(_image as BG_TEMPLATE)\n      ? getTemplateImage(_image as BG_TEMPLATE)\n      : {uri: _image};\n  }, [imageUri, image]);\n\n  return (\n    <SContainer>\n      <STitle>Background</STitle>\n      <SBackgroundWrapper resizeMode={'cover'} source={source}>\n        {imageUri || image ? (\n          <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n            <STextAction hasImage={imageUri || image}>Change</STextAction>\n          </SButtonAction>\n        ) : (\n          <>\n            <SIconPhoto>\n              <SImageGallery source={IC_OUTLINED_IMAGE} />\n              <SText>Upload your background</SText>\n            </SIconPhoto>\n            <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n              <STextAction>Choose file</STextAction>\n            </SButtonAction>\n          </>\n        )}\n      </SBackgroundWrapper>\n    </SContainer>\n  );\n});\nconst SContainer = styled.TouchableOpacity`\n  justify-content: center;\n  border-radius: 4px;\n  border: 1px solid #ebebeb;\n  padding: 0 16px 12px 16px;\n`;\n\nconst STitle = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n  margin-top: 8px;\n  margin-bottom: 4px;\n`;\n\nconst SBackgroundWrapper = styled.ImageBackground`\n  background-color: ${p => p.theme.neutral9};\n  min-height: 180px;\n  border-radius: 8px;\n`;\n\nconst SText = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n`;\n\nconst SButtonAction = styled.TouchableOpacity<{hasImage?: string}>`\n  width: 120px;\n  height: 40px;\n  padding: 4px 16px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: ${p => (p.hasImage ? 'rgba(0, 0, 0, 0.65)' : '#EAEAEA')};\n  margin-top: ${p => (p.hasImage ? 68 : 12)}px;\n  align-self: center;\n`;\nconst SIconPhoto = styled.View`\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n  margin-top: 36px;\n`;\nconst SImageGallery = styled.Image`\n  width: 32px;\n  height: 32px;\n  tint-color: ${p => p.theme.neutral2};\n`;\nconst STextAction = styled.Text<{hasImage?: string}>`\n  font-family: ${Fonts.Medium};\n  font-size: 14px;\n  line-height: 24px;\n  color: ${p => (p.hasImage ? p.theme.white : p.theme.neutral2)};\n`;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {IC_OUTLINED_LEFT} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={IC_OUTLINED_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n","import React, {memo, useCallback, useEffect, useRef, useState} from 'react';\nimport {\n  AnimatedKeyboardAvoidingViewRef,\n  FullScreenWrapper,\n  MyKeyboardAvoidingView,\n  UIInput,\n  UIText,\n  UITextInput,\n  UIUserPickerInput,\n} from '@true/ui';\nimport {AnimatedBottomSpace} from '@/components/AnimatedBottomSpace';\nimport {\n  goBack,\n  styled,\n  ToastService,\n  useAsyncFn,\n  useAutoToastError,\n  useBoolean,\n  useNavigationParams,\n} from '@true/core';\nimport {\n  runOnUI,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport {\n  ETypeUpdate,\n  ICreatePost,\n  initParamCreatePost,\n} from '@/store/updates/type';\nimport {HeaderCreatePost} from '@/screens/CreatePostScreen/HeaderCreatePost';\nimport {getChannels, useChannelsByQuery} from '@/store/channels';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IBase64, uploadImage} from '@/utils/helper';\nimport {getUpdates} from '@/store/updates';\nimport {Buffer} from 'buffer';\nimport {DiscardDialog} from '@/components/DiscardDialog';\nimport {requestCreatePost, requestEditPost} from '@/store/updates/function';\nimport {MyInputBackground} from '@/screens/CreateEventScreen/MyInputBackground';\nimport {BottomSheetMenu} from '@/components/BottomSheets';\nimport {BottomSheetModal} from '@gorhom/bottom-sheet';\nimport {MenuItem} from '@/components/MenuItem';\nimport {AvatarWithSelectChannel} from '@/components/AvatarWithSelectChannel';\nimport LoadingModal from '@/components/LoadingModal';\nimport {View} from 'react-native';\n\nexport interface CreatePostScreenParams {\n  type: 'update' | 'styled' | 'welcome' | 'idea' | 'announcement' | 'external';\n  channel_id?: string;\n  id?: number;\n}\n\nexport const CreatePostScreen = memo(function () {\n  const {type, id, channel_id} = useNavigationParams<CreatePostScreenParams>();\n  const ref = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useAnimatedRef<any>();\n  const params = useSharedValue<ICreatePost>(initParamCreatePost);\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n  const bottomSheetRef = useRef<BottomSheetModal | null>(null);\n  const channelsOption = useChannelsByQuery('joined').map(id => ({\n    label: getChannels(id)?.name || 'Undefined channel',\n    value: id,\n  }));\n  const [label, setLabel] = useState('');\n  const imageRef = useRef<ImageDTO | null>(null);\n\n  useEffect(() => {\n    if (channelsOption && channelsOption.length > 0) {\n      const selectedChannel = channelsOption.find(\n        item => item.value === params.value.channel_id.toString(),\n      );\n      if (selectedChannel) {\n        setLabel(selectedChannel.label);\n      }\n    }\n  }, [params, setLabel, channelsOption]);\n\n  const onSelectBackground = useCallback(\n    (image: ImageDTO) => {\n      imageRef.current = image;\n      params.value['image-bg'] = image.url;\n    },\n    [imageRef, params],\n  );\n\n  const [{loading, error: createError}, onPressSubmit] =\n    useAsyncFn(async () => {\n      let imageUrl = params.value['image-bg'];\n      if (imageRef.current) {\n        imageUrl = await uploadImage(imageRef.current);\n      }\n      const _params = {\n        ...params.value,\n        metatype: type,\n        'image-bg': imageUrl,\n      };\n      if (id) {\n        await requestEditPost(_params);\n      } else {\n        await requestCreatePost(_params);\n        ToastService.show('Create post successfully');\n      }\n      goBack();\n    }, [id, imageRef, params]);\n  useAutoToastError(createError);\n\n  const onGoBack = useCallback(() => {\n    console.log('aaa');\n    goBack();\n  }, []);\n\n  useEffect(() => {\n    let _params: ICreatePost = {\n      ...initParamCreatePost,\n    };\n    if (id) {\n      const update = getUpdates(id);\n      const coverImage: IBase64 = JSON.parse(\n        Buffer.from(\n          update?.image ||\n            'eyJ0eXBlIjoiIiwiY29sb3IiOiIiLCJvcGFjaXR5IjowLCJwZXJjZW50IjoxMDAsImltYWdlIjoiIiwidGV4dHMiOltdfQ',\n          'base64',\n        ).toString('utf-8'),\n      );\n      _params = {\n        id: update?.id,\n        channel_id: update?.channel_id || 0,\n        metatype: type,\n        content: update?.content || '',\n        'file[]': [],\n        // schedule?:number,\n        // schedule_date?:number,\n        // schedule_shift?:string,\n        // usernames?:string,\n        name: update?.name || '',\n        'image-bg': coverImage?.image,\n      };\n    }\n    params.value = _params;\n  }, [params, type]);\n\n  const animatedActiveBtn = useDerivedValue(() => {\n    if (channel_id) {\n      return !!params.value.content;\n    }\n\n    return !!params.value.content;\n  }, [channel_id]);\n\n  const renderItem = useCallback(\n    (item: any, index: number) => {\n      return (\n        <MenuItem\n          key={index}\n          title={item.label}\n          onPress={() => {\n            onChangeValue('channel_id', item.value);\n            setLabel(item.label);\n            bottomSheetRef.current?.dismiss();\n          }}\n        />\n      );\n    },\n    [bottomSheetRef],\n  );\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        'worklet';\n\n        params.value = {\n          ...params.value,\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n\n  return (\n    <FullScreenWrapper isGrey>\n      <MyKeyboardAvoidingView ref={ref} scrollRef={scrollRef}>\n        <HeaderCreatePost\n          title={id ? 'Edit update' : 'Create update'}\n          active={animatedActiveBtn}\n          onPress={onPressSubmit}\n          loading={loading}\n          id={id}\n          onGoBack={onGoBack}\n        />\n        <LoadingModal isVisible={loading} />\n        <SScrollView ref={scrollRef} keyboardShouldPersistTaps={'handled'}>\n          <SContainer>\n            <View\n              style={{\n                gap: 12,\n              }}>\n              <UIText.HeaderMedium>General information</UIText.HeaderMedium>\n              <AvatarWithSelectChannel\n                bottomSheetRef={bottomSheetRef}\n                label={label}\n                typePost={type}\n              />\n              <SContentContainer>\n                {type === ETypeUpdate.ANNOUNCEMENT ||\n                type === ETypeUpdate.WELCOME ? (\n                  <MyInputBackground\n                    onSelectedImage={onSelectBackground}\n                    image={params.value['image-bg']}\n                  />\n                ) : null}\n                {type == ETypeUpdate.ANNOUNCEMENT ||\n                type === ETypeUpdate.IDEA ? (\n                  <UIInput.Text\n                    keyName={'name'}\n                    params={params}\n                    title={type === 'announcement' ? 'Title' : 'The idea'}\n                    onChangeValue={onChangeValue}\n                    placeholder={'---'}\n                    required\n                  />\n                ) : null}\n                {type == ETypeUpdate.WELCOME ? (\n                  <UIInput.UserPicker\n                    title={'Select people'}\n                    type={'user'}\n                    keyName={'usernames'}\n                    params={params}\n                    onChangeValue={onChangeValue}\n                    multiple\n                    placeholder={'---'}\n                    required\n                  />\n                ) : null}\n\n                {type == ETypeUpdate.UPDATE || type === ETypeUpdate.IDEA ? (\n                  <SUITextInput\n                    title={\n                      type === 'idea'\n                        ? 'Extra description'\n                        : 'Share with your team'\n                    }\n                    keyName={'content'}\n                    params={params}\n                    placeholder={'---'}\n                    defaultValue={''}\n                    // minHeight={320}\n                    required\n                    multiline\n                  />\n                ) : (\n                  <UITextInput\n                    title={'Content'}\n                    keyName={'content'}\n                    params={params}\n                    defaultValue={''}\n                    required\n                  />\n                )}\n                {/*Pinned to channel*/}\n                <UIInput.Attachment\n                  title={'Attach files or Images'}\n                  keyName={'file[]'}\n                  params={params}\n                  onChangeValue={onChangeValue}\n                />\n              </SContentContainer>\n            </View>\n            <AnimatedBottomSpace />\n          </SContainer>\n        </SScrollView>\n        <DiscardDialog\n          title={'Discard change'}\n          content={\n            'You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.'\n          }\n          visible={visibleDialog}\n          onClose={hideDialog}\n        />\n        <BottomSheetMenu\n          name={'channel'}\n          ref={bottomSheetRef}\n          items={channelsOption}\n          renderMenuItem={renderItem}\n          titleHeader={'Select channel'}\n        />\n      </MyKeyboardAvoidingView>\n    </FullScreenWrapper>\n  );\n});\n\nconst SContainer = styled.View`\n  padding: 12px 16px;\n`;\nconst SContentContainer = styled.View`\n  gap: 8px;\n`;\nconst SScrollView = styled.ScrollView`\n  flex: 1;\n  background-color: white;\n  margin-top: 8px;\n`;\nconst SUITextInput = styled(UITextInput).attrs(p => ({\n  textStyle: {\n    minHeight: 320,\n  },\n}))``;\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_react","obj","nodeInterop","__esModule","default","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_interopRequireWildcard","require","_core","_asset","_ui","_reactNativeReanimated","_jsxRuntime","WeakMap","cacheBabelInterop","cacheNodeInterop","_worklet_8674385749251_init_data","code","location","sourceMap","version","_worklet_14097579138961_init_data","SRow","exports","memo","_ref","_e","anonymous","bottomSheetRef","label","typePost","me","useMe","widthButton","useSharedValue","animatedStyled","useAnimatedStyle","global","Error","width","value","__closure","__initData","__workletHash","__stackDetails","onViewLayout","useWorkletCallback","e","nativeEvent","layout","jsxs","children","jsx","Avatar","size","userKey","id","disableClick","SView","UIText","BodyMedium500","onLayout","name","SButtonSelect","style","title","onPress","_bottomSheetRef$curre","current","present","SExpandIcon","source","IC_OUTLINED_EXPAND_MORE","styled","View","_taggedTemplateLiteralLoose2","UIButton","attrs","p","textStyle","assign","UITextStyle","body_medium_400","color","theme","neutral2","textProps","numberOfLines","neutral5","Image","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_utils","_type","_BgTemplateService","SContainer","props","onSelectedImage","image","_useState","useState","_useState2","_slicedToArray2","imageUri","setImageUri","onSelect","useCallback","url","openCameraRollScreen","onSubmit","useMemo","_image","values","BG_TEMPLATE","includes","getTemplateImage","uri","STitle","SBackgroundWrapper","resizeMode","SButtonAction","hasImage","STextAction","Fragment","SIconPhoto","SImageGallery","IC_OUTLINED_IMAGE","SText","TouchableOpacity","Text","Fonts","Regular","ImageBackground","neutral9","Medium","white","_helper","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","HeaderWrapper","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","paddingTop","useTheme","active","onGoBack","loading","animatedBtnStyle","backgroundColor","interpolateColor","neutral3","primaryColor","animatedProps","useAnimatedProps","pointerEvents","FlexCenter","gap","IC_OUTLINED_LEFT","goBack","HeaderLarge","SCreateBtn","Animated","neutral4","body_medium_500","_AnimatedBottomSpace","_HeaderCreatePost","_channels","_updates","_buffer","_DiscardDialog","_function","_MyInputBackground","_BottomSheets","_MenuItem","_AvatarWithSelectChannel","_LoadingModal","_interopRequireDefault","_reactNative","_worklet_2192383653013_init_data","_worklet_690685769123_init_data","_useNavigationParams","useNavigationParams","type","channel_id","ref","useRef","scrollRef","useAnimatedRef","params","initParamCreatePost","_useBoolean","useBoolean","_useBoolean2","visibleDialog","hideDialog","channelsOption","useChannelsByQuery","map","_getChannels","getChannels","setLabel","imageRef","useEffect","length","selectedChannel","find","item","toString","onSelectBackground","_useAsyncFn","useAsyncFn","_asyncToGenerator2","imageUrl","uploadImage","_params","metatype","requestEditPost","requestCreatePost","ToastService","show","_useAsyncFn2","_useAsyncFn2$","createError","error","onPressSubmit","useAutoToastError","console","log","update","getUpdates","coverImage","JSON","parse","Buffer","from","content","animatedActiveBtn","useDerivedValue","renderItem","index","MenuItem","onChangeValue","dismiss","runOnUI","_key","_value","_defineProperty2","FullScreenWrapper","isGrey","MyKeyboardAvoidingView","HeaderCreatePost","isVisible","SScrollView","keyboardShouldPersistTaps","HeaderMedium","AvatarWithSelectChannel","SContentContainer","ETypeUpdate","ANNOUNCEMENT","WELCOME","MyInputBackground","IDEA","UIInput","keyName","placeholder","required","UserPicker","multiple","UPDATE","SUITextInput","defaultValue","multiline","UITextInput","Attachment","AnimatedBottomSpace","DiscardDialog","visible","onClose","BottomSheetMenu","items","renderMenuItem","titleHeader","ScrollView","minHeight"],"sourceRoot":""}