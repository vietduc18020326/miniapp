{"version":3,"file":"src_screens_CreateLetterScreen_index_tsx.chunk.bundle","mappings":"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","sources":["webpack:///./src/screens/CreateEventScreen/MyInputBackground.tsx","webpack:///./src/screens/CreateLetterScreen/index.tsx","webpack:///./src/screens/CreatePostScreen/HeaderCreatePost.tsx","webpack:///./src/store/letters/type.ts"],"sourcesContent":["import {memo, useCallback, useMemo, useState} from 'react';\nimport {Fonts, styled} from '@true/core';\nimport {openCameraRollScreen} from '@/utils';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IC_OUTLINED_IMAGE} from '@true/asset';\nimport {BG_TEMPLATE} from '@/components/PostThumbnail/type';\nimport {getTemplateImage} from '@/services/BgTemplateService';\nimport {SharedValue} from 'react-native-reanimated';\n\ninterface MyInputLogoProps {\n  onSelectedImage: (image: ImageDTO) => void;\n  image: string | undefined;\n}\n\nexport const MyInputBackground = memo(function (props: MyInputLogoProps) {\n  const {onSelectedImage, image} = props;\n  const [imageUri, setImageUri] = useState('');\n\n  const onSelect = useCallback(\n    (image: ImageDTO) => {\n      setImageUri(image.url);\n      onSelectedImage(image);\n    },\n    [onSelectedImage],\n  );\n  const onPress = useCallback(() => {\n    openCameraRollScreen({\n      onSubmit: onSelect,\n    });\n  }, []);\n\n  const source = useMemo(() => {\n    const _image = imageUri ? imageUri : image;\n\n    return Object.values(BG_TEMPLATE).includes(_image as BG_TEMPLATE)\n      ? getTemplateImage(_image as BG_TEMPLATE)\n      : {uri: _image};\n  }, [imageUri, image]);\n\n  return (\n    <SContainer>\n      <STitle>Background</STitle>\n      <SBackgroundWrapper resizeMode={'cover'} source={source}>\n        {imageUri || image ? (\n          <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n            <STextAction hasImage={imageUri || image}>Change</STextAction>\n          </SButtonAction>\n        ) : (\n          <>\n            <SIconPhoto>\n              <SImageGallery source={IC_OUTLINED_IMAGE} />\n              <SText>Upload your background</SText>\n            </SIconPhoto>\n            <SButtonAction hasImage={imageUri || image} onPress={onPress}>\n              <STextAction>Choose file</STextAction>\n            </SButtonAction>\n          </>\n        )}\n      </SBackgroundWrapper>\n    </SContainer>\n  );\n});\nconst SContainer = styled.TouchableOpacity`\n  justify-content: center;\n  border-radius: 4px;\n  border: 1px solid #ebebeb;\n  padding: 0 16px 12px 16px;\n`;\n\nconst STitle = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n  margin-top: 8px;\n  margin-bottom: 4px;\n`;\n\nconst SBackgroundWrapper = styled.ImageBackground`\n  background-color: ${p => p.theme.neutral9};\n  min-height: 180px;\n  border-radius: 8px;\n`;\n\nconst SText = styled.Text`\n  font-family: ${Fonts.Regular};\n  font-size: 14px;\n  line-height: 20px;\n  color: ${p => p.theme.neutral2};\n`;\n\nconst SButtonAction = styled.TouchableOpacity<{hasImage?: string}>`\n  width: 120px;\n  height: 40px;\n  padding: 4px 16px;\n  justify-content: center;\n  align-items: center;\n  border-radius: 8px;\n  background: ${p => (p.hasImage ? 'rgba(0, 0, 0, 0.65)' : '#EAEAEA')};\n  margin-top: ${p => (p.hasImage ? 68 : 12)}px;\n  align-self: center;\n`;\nconst SIconPhoto = styled.View`\n  align-items: center;\n  justify-content: center;\n  margin-right: 4px;\n  margin-top: 36px;\n`;\nconst SImageGallery = styled.Image`\n  width: 32px;\n  height: 32px;\n  tint-color: ${p => p.theme.neutral2};\n`;\nconst STextAction = styled.Text<{hasImage?: string}>`\n  font-family: ${Fonts.Medium};\n  font-size: 14px;\n  line-height: 24px;\n  color: ${p => (p.hasImage ? p.theme.white : p.theme.neutral2)};\n`;\n","import React, {memo, useCallback, useEffect, useRef} from 'react';\nimport {\n  Fonts,\n  goBack,\n  styled,\n  ToastService,\n  useAutoToastError,\n  useBoolean,\n  useNavigationParams,\n} from '@true/core';\nimport Animated, {\n  runOnUI,\n  useAnimatedRef,\n  useDerivedValue,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport {ICreateLetter, initCreateLetter} from '@/store/letters/type';\nimport {\n  AnimatedKeyboardAvoidingViewRef,\n  MyKeyboardAvoidingView,\n  ScreenWrapper,\n  UIInput,\n  UITextInput,\n} from '@true/ui';\nimport {AnimatedBottomSpace} from '@/components/AnimatedBottomSpace';\nimport {DiscardDialog} from '@/components/DiscardDialog';\nimport {ImageDTO} from '@/components/CameraRollPicker/useGallery';\nimport {IBase64, uploadImage} from '@/utils/helper';\nimport {useAsyncFn} from '@/hooks/useAsyncFn';\nimport {requestCreateLetter, requestEditLetter} from '@/store/letters/function';\nimport {getLetters} from '@/store/letters';\nimport {Buffer} from 'buffer';\nimport {MyInputBackground} from '@/screens/CreateEventScreen/MyInputBackground';\nimport {HeaderCreatePost} from '@/screens/CreatePostScreen/HeaderCreatePost';\nimport {CheckboxWithText} from '@/components/CheckboxWithText';\nimport LoadingModal from '@/components/LoadingModal';\n\nexport interface CreateLetterScreenParams {\n  id: number;\n}\n\nexport const CreateLetterScreen = memo(function CreateLetterScreen() {\n  const {id} = useNavigationParams<CreateLetterScreenParams>();\n\n  const params = useSharedValue<ICreateLetter>(initCreateLetter);\n  const ref = useRef<AnimatedKeyboardAvoidingViewRef>(null);\n  const scrollRef = useAnimatedRef<any>();\n  const imageRef = useRef<ImageDTO | null>(null);\n\n  const [visibleDialog, showDialog, hideDialog] = useBoolean();\n\n  const onSelectBackground = useCallback(\n    (image: ImageDTO) => {\n      imageRef.current = image;\n      params.value['image'] = image.url;\n    },\n    [imageRef, params],\n  );\n  const [{loading, error: createError}, onPressSubmit] =\n    useAsyncFn(async () => {\n      if (id !== -1) {\n        await requestEditLetter(params.value);\n      } else {\n        await requestCreateLetter(params.value);\n        ToastService.show('Create letter successfully');\n      }\n      goBack();\n    }, [id, params]);\n  useAutoToastError(createError);\n\n  const onGoBack = useCallback(() => {\n    console.log('ss');\n    goBack();\n  }, []);\n\n  useEffect(() => {\n    let _params = {\n      ...initCreateLetter,\n    };\n    if (id > 0) {\n      const letter = getLetters(id);\n      const coverImage: IBase64 = JSON.parse(\n        Buffer.from(\n          letter?.image ||\n            'eyJ0eXBlIjoiIiwiY29sb3IiOiIiLCJvcGFjaXR5IjowLCJwZXJjZW50IjoxMDAsImltYWdlIjoiIiwidGV4dHMiOltdfQ',\n          'base64',\n        ).toString('utf-8') || '',\n      );\n      _params = {\n        id: letter?.id,\n        content: letter?.content || '',\n        name: letter?.name || '',\n        image: letter?.image,\n        files: letter?.files,\n        notify: letter?.notify,\n        notify_email: letter?.notify_email,\n        disable_comment: letter?.disable_comment,\n      };\n    }\n    params.value = _params;\n  }, [id]);\n  const animatedActiveBtn = useDerivedValue(() => {\n    return !!params.value.name;\n  }, []);\n  const onChangeValue = useCallback(\n    (key: string, value: any) => {\n      runOnUI((_key: string, _value) => {\n        'worklet';\n\n        params.value = {\n          ...params.value,\n          [_key]: _value,\n        };\n      })(key, value);\n    },\n    [params],\n  );\n  return (\n    <ScreenWrapper>\n      <MyKeyboardAvoidingView ref={ref} scrollRef={scrollRef}>\n        <HeaderCreatePost\n          onPress={onPressSubmit}\n          title={'Create a board letter'}\n          active={animatedActiveBtn}\n          id={id}\n          loading={loading}\n          onGoBack={onGoBack}\n        />\n        <LoadingModal isVisible={loading} />\n        <SScrollView ref={scrollRef} keyboardShouldPersistTaps={'handled'}>\n          <SContainer>\n            <SField>\n              <MyInputBackground\n                onSelectedImage={onSelectBackground}\n                image={params.value.image}\n              />\n              <UIInput.Text\n                title={'Title'}\n                keyName={'name'}\n                params={params}\n                placeholder={'---'}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n                required\n              />\n              <UITextInput\n                title={'Content'}\n                keyName={'content'}\n                params={params}\n                defaultValue={''}\n                onChangeValue={onChangeValue}\n              />\n            </SField>\n            <SField>\n              <STextBold>Advanced settings</STextBold>\n              <CheckboxWithText\n                params={params}\n                keyName={'draft'}\n                title={'Save as a draft'}\n              />\n              <CheckboxWithText\n                params={params}\n                keyName={'disable_comment'}\n                title={'Disable comments'}\n              />\n              <CheckboxWithText\n                params={params}\n                keyName={'notify'}\n                title={'Send notification'}\n              />\n              <CheckboxWithText\n                params={params}\n                keyName={'notify_email'}\n                title={'Send email to everyone'}\n              />\n              <AnimatedBottomSpace />\n            </SField>\n          </SContainer>\n        </SScrollView>\n        <DiscardDialog\n          title={'Discard change'}\n          content={\n            'You have made changes to this item that have not been saved. If you leave this page, your changes will be lost.'\n          }\n          visible={visibleDialog}\n          onClose={hideDialog}\n        />\n      </MyKeyboardAvoidingView>\n    </ScreenWrapper>\n  );\n});\n\nconst SContainer = styled(Animated.View)`\n  flex: 1;\n  padding: 12px 16px;\n  gap: 12px;\n`;\n\nconst SField = styled.View`\n  gap: 12px;\n  background-color: ${p => p.theme.white};\n`;\n\nconst STextBold = styled.Text`\n  font-family: ${Fonts.Medium};\n  font-size: 16px;\n  line-height: 24px;\n  color: ${p => p.theme.neutral1};\n`;\nconst SScrollView = styled.ScrollView`\n  flex: 1;\n  background-color: white;\n  margin-top: 8px;\n`;\n","import {memo} from 'react';\nimport {FlexCenter} from '@/utils/helper';\nimport {goBack, styled, useTheme} from '@true/core';\nimport {IC_OUTLINED_LEFT} from '@true/asset';\nimport {UIButton, UIText, UITextStyle} from '@true/ui';\nimport {useAnimatedSafeAreaInsets} from 'react-native-safe-area-context';\nimport Animated, {\n  interpolateColor,\n  SharedValue,\n  useAnimatedProps,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\n\ninterface HeaderCreatePostProps {\n  active: SharedValue<boolean>;\n  onPress: () => void;\n  loading: boolean;\n  id?: number;\n  onGoBack?: () => void;\n  title: string;\n}\n\nexport const HeaderCreatePost = memo(function (props: HeaderCreatePostProps) {\n  const {aTop} = useAnimatedSafeAreaInsets();\n  const animatedPaddingTop = useAnimatedStyle(() => ({\n    paddingTop: aTop.value,\n  }));\n  const theme = useTheme();\n  const {title, active, id, onPress, loading, onGoBack} = props;\n\n  const animatedBtnStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: interpolateColor(\n        active.value ? 1 : 0,\n        [0, 1],\n        [theme.neutral3, theme.primaryColor],\n      ),\n      width: '100%',\n    };\n  }, [theme]);\n\n  const animatedProps = useAnimatedProps(() => {\n    return {\n      pointerEvents: active.value ? 'auto' : 'none',\n    };\n  });\n\n  // useAutoToastError(createError);\n  return (\n    <HeaderWrapper style={animatedPaddingTop}>\n      <FlexCenter gap={8}>\n        <UIButton\n          source={IC_OUTLINED_LEFT}\n          onPress={onGoBack ? onGoBack : goBack}\n        />\n        <UIText.HeaderLarge>{title}</UIText.HeaderLarge>\n      </FlexCenter>\n      <Animated.View animatedProps={animatedProps as any}>\n        <SCreateBtn\n          title={id ? 'Update' : 'Create'}\n          onPress={onPress}\n          style={animatedBtnStyle}\n        />\n      </Animated.View>\n    </HeaderWrapper>\n  );\n});\nconst HeaderWrapper = styled(Animated.View)`\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom-color: ${p => p.theme.neutral4};\n  border-bottom-width: 1px;\n  padding: 6px 16px;\n  background-color: white;\n`;\n\nconst SCreateBtn = styled(UIButton).attrs(p => ({\n  textStyle: {\n    ...UITextStyle.body_medium_500,\n    color: '#fff',\n  },\n}))`\n  width: 94px;\n  height: 32px;\n  border-radius: 8px;\n  align-items: center;\n  justify-content: center;\n  padding: 4px 16px;\n  background-color: ${p => p.theme.primaryColor};\n`;\n","import {IReaction, IStats} from '@/store/updates/type';\n\nexport interface ILetter {\n  id: number;\n  metatype: string;\n  user_id: number;\n  status: number;\n  name: string;\n  content: string;\n  files: any[];\n  seens: number[];\n  update_id: number;\n  since: number;\n  last_update: number;\n  followers: number[];\n  disable_comment: number;\n  published_at: number;\n  notify: number;\n  notify_email: number;\n  link: string;\n  hid: string;\n  token: string;\n  image: string;\n  type: 'companyletters';\n  reactions: IReaction[];\n  stats: IStats;\n  managed: number;\n}\nexport interface ICreateLetter {\n  id?: number;\n  image?: string;\n  name: string;\n  content: string;\n  files?: any;\n  draft?: number;\n  notify?: number;\n  notify_email?: number;\n  disable_comment?: number;\n}\nexport const initCreateLetter: ICreateLetter = {\n  name: '',\n  content: '',\n};\n"],"names":["_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","_templateObject7","_templateObject8","_react","require","_core","_utils","_asset","_type","_BgTemplateService","_jsxRuntime","SContainer","exports","memo","props","onSelectedImage","image","_useState","useState","_useState2","_slicedToArray2","default","imageUri","setImageUri","onSelect","useCallback","url","onPress","openCameraRollScreen","onSubmit","source","useMemo","_image","Object","values","BG_TEMPLATE","includes","getTemplateImage","uri","jsxs","children","jsx","STitle","SBackgroundWrapper","resizeMode","SButtonAction","hasImage","STextAction","Fragment","SIconPhoto","SImageGallery","IC_OUTLINED_IMAGE","SText","styled","TouchableOpacity","_taggedTemplateLiteralLoose2","Text","Fonts","Regular","p","theme","neutral2","ImageBackground","neutral9","View","Image","Medium","white","_interopRequireWildcard","_reactNativeReanimated","_ui","_AnimatedBottomSpace","_DiscardDialog","_useAsyncFn3","_function","_letters","_buffer","_MyInputBackground","_HeaderCreatePost","_CheckboxWithText","_LoadingModal","_interopRequireDefault","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","cache","has","get","newObj","hasPropertyDescriptor","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","_worklet_13286397810896_init_data","code","_worklet_690685769123_init_data","id","useNavigationParams","params","useSharedValue","initCreateLetter","ref","useRef","scrollRef","useAnimatedRef","imageRef","_useBoolean","useBoolean","_useBoolean2","visibleDialog","hideDialog","onSelectBackground","current","value","_useAsyncFn","useAsyncFn","_asyncToGenerator2","requestEditLetter","requestCreateLetter","ToastService","show","goBack","_useAsyncFn2","_useAsyncFn2$","loading","createError","error","onPressSubmit","useAutoToastError","onGoBack","console","log","useEffect","_params","assign","letter","getLetters","JSON","parse","Buffer","from","toString","content","name","files","notify","notify_email","disable_comment","anonymous","animatedActiveBtn","useDerivedValue","__closure","__initData","__workletHash","onChangeValue","runOnUI","_key","_value","_defineProperty2","ScreenWrapper","MyKeyboardAvoidingView","HeaderCreatePost","title","active","isVisible","SScrollView","keyboardShouldPersistTaps","SField","MyInputBackground","UIInput","keyName","placeholder","defaultValue","required","UITextInput","STextBold","CheckboxWithText","AnimatedBottomSpace","DiscardDialog","visible","onClose","Animated","neutral1","ScrollView","_helper","_reactNativeSafeAreaContext","_worklet_9978501313055_init_data","_worklet_16470896921808_init_data","_worklet_14091630795489_init_data","HeaderWrapper","aTop","useAnimatedSafeAreaInsets","animatedPaddingTop","useAnimatedStyle","paddingTop","useTheme","animatedBtnStyle","backgroundColor","interpolateColor","neutral3","primaryColor","width","animatedProps","useAnimatedProps","pointerEvents","style","FlexCenter","gap","UIButton","IC_OUTLINED_LEFT","UIText","HeaderLarge","SCreateBtn","neutral4","attrs","textStyle","UITextStyle","body_medium_500","color"],"sourceRoot":""}